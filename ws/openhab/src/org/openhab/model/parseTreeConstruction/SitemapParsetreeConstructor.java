/*
* generated by Xtext
*/
package org.openhab.model.parseTreeConstruction;

import org.eclipse.emf.ecore.*;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parsetree.reconstr.IEObjectConsumer;
import org.eclipse.xtext.parsetree.reconstr.impl.AbstractParseTreeConstructor;

import org.openhab.model.services.SitemapGrammarAccess;

import com.google.inject.Inject;

@SuppressWarnings("all")
public class SitemapParsetreeConstructor extends AbstractParseTreeConstructor {
		
	@Inject
	private SitemapGrammarAccess grammarAccess;
	
	@Override
	protected AbstractToken getRootToken(IEObjectConsumer inst) {
		return new ThisRootNode(inst);	
	}
	
protected class ThisRootNode extends RootToken {
	public ThisRootNode(IEObjectConsumer inst) {
		super(inst);
	}
	
	@Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SitemapModel_Group(this, this, 0, inst);
			case 1: return new Sitemap_Group(this, this, 1, inst);
			case 2: return new Widget_Alternatives(this, this, 2, inst);
			case 3: return new NonLinkableWidget_Alternatives(this, this, 3, inst);
			case 4: return new LinkableWidget_Group(this, this, 4, inst);
			case 5: return new Frame_Group(this, this, 5, inst);
			case 6: return new Text_Group(this, this, 6, inst);
			case 7: return new Group_Group(this, this, 7, inst);
			case 8: return new Image_Group(this, this, 8, inst);
			case 9: return new Video_Group(this, this, 9, inst);
			case 10: return new Chart_Group(this, this, 10, inst);
			case 11: return new Webview_Group(this, this, 11, inst);
			case 12: return new Switch_Group(this, this, 12, inst);
			case 13: return new Slider_Group(this, this, 13, inst);
			case 14: return new Selection_Group(this, this, 14, inst);
			case 15: return new List_Group(this, this, 15, inst);
			case 16: return new Setpoint_Group(this, this, 16, inst);
			case 17: return new Colorpicker_Group(this, this, 17, inst);
			case 18: return new Mapping_Group(this, this, 18, inst);
			case 19: return new VisibilityRule_Group(this, this, 19, inst);
			case 20: return new ColorArray_Group(this, this, 20, inst);
			default: return null;
		}	
	}	
}
	

/************ begin Rule SitemapModel ****************
 *
 * SitemapModel:
 * 
 * 	"sitemap" Sitemap;
 *
 **/

// "sitemap" Sitemap
protected class SitemapModel_Group extends GroupToken {
	
	public SitemapModel_Group(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getSitemapModelAccess().getGroup();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SitemapModel_SitemapParserRuleCall_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getSitemapRule().getType().getClassifier())
			return null;
		return eObjectConsumer;
	}

}

// "sitemap"
protected class SitemapModel_SitemapKeyword_0 extends KeywordToken  {
	
	public SitemapModel_SitemapKeyword_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getSitemapModelAccess().getSitemapKeyword_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

}

// Sitemap
protected class SitemapModel_SitemapParserRuleCall_1 extends RuleCallToken {
	
	public SitemapModel_SitemapParserRuleCall_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public RuleCall getGrammarElement() {
		return grammarAccess.getSitemapModelAccess().getSitemapParserRuleCall_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Sitemap_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(checkForRecursion(Sitemap_Group.class, eObjectConsumer)) return null;
		return eObjectConsumer;
	}
	
    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SitemapModel_SitemapKeyword_0(lastRuleCallOrigin, next, actIndex, inst);
			default: return null;
		}	
	}	
}


/************ end Rule SitemapModel ****************/


/************ begin Rule Sitemap ****************
 *
 * Sitemap:
 * 
 * 	name=ID ("label=" label=STRING)? ("icon=" icon=STRING)? "{" children+=Widget+ "}";
 *
 **/

// name=ID ("label=" label=STRING)? ("icon=" icon=STRING)? "{" children+=Widget+ "}"
protected class Sitemap_Group extends GroupToken {
	
	public Sitemap_Group(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getSitemapAccess().getGroup();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Sitemap_RightCurlyBracketKeyword_5(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getSitemapRule().getType().getClassifier())
			return null;
		return eObjectConsumer;
	}

}

// name=ID
protected class Sitemap_NameAssignment_0 extends AssignmentToken  {
	
	public Sitemap_NameAssignment_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getSitemapAccess().getNameAssignment_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("name",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("name");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getSitemapAccess().getNameIDTerminalRuleCall_0_0(), value, null)) {
			type = AssignmentType.TERMINAL_RULE_CALL;
			element = grammarAccess.getSitemapAccess().getNameIDTerminalRuleCall_0_0();
			return obj;
		}
		return null;
	}

}

// ("label=" label=STRING)?
protected class Sitemap_Group_1 extends GroupToken {
	
	public Sitemap_Group_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getSitemapAccess().getGroup_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Sitemap_LabelAssignment_1_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "label="
protected class Sitemap_LabelKeyword_1_0 extends KeywordToken  {
	
	public Sitemap_LabelKeyword_1_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getSitemapAccess().getLabelKeyword_1_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Sitemap_NameAssignment_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// label=STRING
protected class Sitemap_LabelAssignment_1_1 extends AssignmentToken  {
	
	public Sitemap_LabelAssignment_1_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getSitemapAccess().getLabelAssignment_1_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Sitemap_LabelKeyword_1_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("label",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("label");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getSitemapAccess().getLabelSTRINGTerminalRuleCall_1_1_0(), value, null)) {
			type = AssignmentType.TERMINAL_RULE_CALL;
			element = grammarAccess.getSitemapAccess().getLabelSTRINGTerminalRuleCall_1_1_0();
			return obj;
		}
		return null;
	}

}


// ("icon=" icon=STRING)?
protected class Sitemap_Group_2 extends GroupToken {
	
	public Sitemap_Group_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getSitemapAccess().getGroup_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Sitemap_IconAssignment_2_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "icon="
protected class Sitemap_IconKeyword_2_0 extends KeywordToken  {
	
	public Sitemap_IconKeyword_2_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getSitemapAccess().getIconKeyword_2_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Sitemap_Group_1(lastRuleCallOrigin, this, 0, inst);
			case 1: return new Sitemap_NameAssignment_0(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// icon=STRING
protected class Sitemap_IconAssignment_2_1 extends AssignmentToken  {
	
	public Sitemap_IconAssignment_2_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getSitemapAccess().getIconAssignment_2_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Sitemap_IconKeyword_2_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("icon",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("icon");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getSitemapAccess().getIconSTRINGTerminalRuleCall_2_1_0(), value, null)) {
			type = AssignmentType.TERMINAL_RULE_CALL;
			element = grammarAccess.getSitemapAccess().getIconSTRINGTerminalRuleCall_2_1_0();
			return obj;
		}
		return null;
	}

}


// "{"
protected class Sitemap_LeftCurlyBracketKeyword_3 extends KeywordToken  {
	
	public Sitemap_LeftCurlyBracketKeyword_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getSitemapAccess().getLeftCurlyBracketKeyword_3();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Sitemap_Group_2(lastRuleCallOrigin, this, 0, inst);
			case 1: return new Sitemap_Group_1(lastRuleCallOrigin, this, 1, inst);
			case 2: return new Sitemap_NameAssignment_0(lastRuleCallOrigin, this, 2, inst);
			default: return null;
		}	
	}

}

// children+=Widget+
protected class Sitemap_ChildrenAssignment_4 extends AssignmentToken  {
	
	public Sitemap_ChildrenAssignment_4(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getSitemapAccess().getChildrenAssignment_4();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Widget_Alternatives(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("children",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("children");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getWidgetRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getSitemapAccess().getChildrenWidgetParserRuleCall_4_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new Sitemap_ChildrenAssignment_4(lastRuleCallOrigin, next, actIndex, consumed);
			case 1: return new Sitemap_LeftCurlyBracketKeyword_3(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// "}"
protected class Sitemap_RightCurlyBracketKeyword_5 extends KeywordToken  {
	
	public Sitemap_RightCurlyBracketKeyword_5(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getSitemapAccess().getRightCurlyBracketKeyword_5();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Sitemap_ChildrenAssignment_4(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}


/************ end Rule Sitemap ****************/


/************ begin Rule Widget ****************
 *
 * Widget:
 * 
 * 	LinkableWidget | NonLinkableWidget;
 *
 **/

// LinkableWidget | NonLinkableWidget
protected class Widget_Alternatives extends AlternativesToken {

	public Widget_Alternatives(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Alternatives getGrammarElement() {
		return grammarAccess.getWidgetAccess().getAlternatives();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Widget_LinkableWidgetParserRuleCall_0(lastRuleCallOrigin, this, 0, inst);
			case 1: return new Widget_NonLinkableWidgetParserRuleCall_1(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getChartRule().getType().getClassifier() && 
		   getEObject().eClass() != grammarAccess.getColorpickerRule().getType().getClassifier() && 
		   getEObject().eClass() != grammarAccess.getFrameAccess().getFrameAction_0().getType().getClassifier() && 
		   getEObject().eClass() != grammarAccess.getGroupRule().getType().getClassifier() && 
		   getEObject().eClass() != grammarAccess.getImageRule().getType().getClassifier() && 
		   getEObject().eClass() != grammarAccess.getListRule().getType().getClassifier() && 
		   getEObject().eClass() != grammarAccess.getSelectionRule().getType().getClassifier() && 
		   getEObject().eClass() != grammarAccess.getSetpointRule().getType().getClassifier() && 
		   getEObject().eClass() != grammarAccess.getSliderRule().getType().getClassifier() && 
		   getEObject().eClass() != grammarAccess.getSwitchRule().getType().getClassifier() && 
		   getEObject().eClass() != grammarAccess.getTextAccess().getTextAction_0().getType().getClassifier() && 
		   getEObject().eClass() != grammarAccess.getVideoRule().getType().getClassifier() && 
		   getEObject().eClass() != grammarAccess.getWebviewRule().getType().getClassifier())
			return null;
		return eObjectConsumer;
	}

}

// LinkableWidget
protected class Widget_LinkableWidgetParserRuleCall_0 extends RuleCallToken {
	
	public Widget_LinkableWidgetParserRuleCall_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public RuleCall getGrammarElement() {
		return grammarAccess.getWidgetAccess().getLinkableWidgetParserRuleCall_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new LinkableWidget_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getFrameAccess().getFrameAction_0().getType().getClassifier() && 
		   getEObject().eClass() != grammarAccess.getGroupRule().getType().getClassifier() && 
		   getEObject().eClass() != grammarAccess.getImageRule().getType().getClassifier() && 
		   getEObject().eClass() != grammarAccess.getTextAccess().getTextAction_0().getType().getClassifier())
			return null;
		if(checkForRecursion(LinkableWidget_Group.class, eObjectConsumer)) return null;
		return eObjectConsumer;
	}
	
    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(next, actIndex , index, inst);
		}	
	}	
}

// NonLinkableWidget
protected class Widget_NonLinkableWidgetParserRuleCall_1 extends RuleCallToken {
	
	public Widget_NonLinkableWidgetParserRuleCall_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public RuleCall getGrammarElement() {
		return grammarAccess.getWidgetAccess().getNonLinkableWidgetParserRuleCall_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new NonLinkableWidget_Alternatives(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getChartRule().getType().getClassifier() && 
		   getEObject().eClass() != grammarAccess.getColorpickerRule().getType().getClassifier() && 
		   getEObject().eClass() != grammarAccess.getListRule().getType().getClassifier() && 
		   getEObject().eClass() != grammarAccess.getSelectionRule().getType().getClassifier() && 
		   getEObject().eClass() != grammarAccess.getSetpointRule().getType().getClassifier() && 
		   getEObject().eClass() != grammarAccess.getSliderRule().getType().getClassifier() && 
		   getEObject().eClass() != grammarAccess.getSwitchRule().getType().getClassifier() && 
		   getEObject().eClass() != grammarAccess.getVideoRule().getType().getClassifier() && 
		   getEObject().eClass() != grammarAccess.getWebviewRule().getType().getClassifier())
			return null;
		if(checkForRecursion(NonLinkableWidget_Alternatives.class, eObjectConsumer)) return null;
		return eObjectConsumer;
	}
	
    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(next, actIndex , index, inst);
		}	
	}	
}


/************ end Rule Widget ****************/


/************ begin Rule NonLinkableWidget ****************
 *
 * NonLinkableWidget:
 * 
 * 	Switch | Selection | Slider | List | Setpoint | Video | Chart | Webview | Colorpicker;
 *
 **/

// Switch | Selection | Slider | List | Setpoint | Video | Chart | Webview | Colorpicker
protected class NonLinkableWidget_Alternatives extends AlternativesToken {

	public NonLinkableWidget_Alternatives(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Alternatives getGrammarElement() {
		return grammarAccess.getNonLinkableWidgetAccess().getAlternatives();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new NonLinkableWidget_SwitchParserRuleCall_0(lastRuleCallOrigin, this, 0, inst);
			case 1: return new NonLinkableWidget_SelectionParserRuleCall_1(lastRuleCallOrigin, this, 1, inst);
			case 2: return new NonLinkableWidget_SliderParserRuleCall_2(lastRuleCallOrigin, this, 2, inst);
			case 3: return new NonLinkableWidget_ListParserRuleCall_3(lastRuleCallOrigin, this, 3, inst);
			case 4: return new NonLinkableWidget_SetpointParserRuleCall_4(lastRuleCallOrigin, this, 4, inst);
			case 5: return new NonLinkableWidget_VideoParserRuleCall_5(lastRuleCallOrigin, this, 5, inst);
			case 6: return new NonLinkableWidget_ChartParserRuleCall_6(lastRuleCallOrigin, this, 6, inst);
			case 7: return new NonLinkableWidget_WebviewParserRuleCall_7(lastRuleCallOrigin, this, 7, inst);
			case 8: return new NonLinkableWidget_ColorpickerParserRuleCall_8(lastRuleCallOrigin, this, 8, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getChartRule().getType().getClassifier() && 
		   getEObject().eClass() != grammarAccess.getColorpickerRule().getType().getClassifier() && 
		   getEObject().eClass() != grammarAccess.getListRule().getType().getClassifier() && 
		   getEObject().eClass() != grammarAccess.getSelectionRule().getType().getClassifier() && 
		   getEObject().eClass() != grammarAccess.getSetpointRule().getType().getClassifier() && 
		   getEObject().eClass() != grammarAccess.getSliderRule().getType().getClassifier() && 
		   getEObject().eClass() != grammarAccess.getSwitchRule().getType().getClassifier() && 
		   getEObject().eClass() != grammarAccess.getVideoRule().getType().getClassifier() && 
		   getEObject().eClass() != grammarAccess.getWebviewRule().getType().getClassifier())
			return null;
		return eObjectConsumer;
	}

}

// Switch
protected class NonLinkableWidget_SwitchParserRuleCall_0 extends RuleCallToken {
	
	public NonLinkableWidget_SwitchParserRuleCall_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public RuleCall getGrammarElement() {
		return grammarAccess.getNonLinkableWidgetAccess().getSwitchParserRuleCall_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Switch_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getSwitchRule().getType().getClassifier())
			return null;
		if(checkForRecursion(Switch_Group.class, eObjectConsumer)) return null;
		return eObjectConsumer;
	}
	
    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(next, actIndex , index, inst);
		}	
	}	
}

// Selection
protected class NonLinkableWidget_SelectionParserRuleCall_1 extends RuleCallToken {
	
	public NonLinkableWidget_SelectionParserRuleCall_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public RuleCall getGrammarElement() {
		return grammarAccess.getNonLinkableWidgetAccess().getSelectionParserRuleCall_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Selection_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getSelectionRule().getType().getClassifier())
			return null;
		if(checkForRecursion(Selection_Group.class, eObjectConsumer)) return null;
		return eObjectConsumer;
	}
	
    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(next, actIndex , index, inst);
		}	
	}	
}

// Slider
protected class NonLinkableWidget_SliderParserRuleCall_2 extends RuleCallToken {
	
	public NonLinkableWidget_SliderParserRuleCall_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public RuleCall getGrammarElement() {
		return grammarAccess.getNonLinkableWidgetAccess().getSliderParserRuleCall_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Slider_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getSliderRule().getType().getClassifier())
			return null;
		if(checkForRecursion(Slider_Group.class, eObjectConsumer)) return null;
		return eObjectConsumer;
	}
	
    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(next, actIndex , index, inst);
		}	
	}	
}

// List
protected class NonLinkableWidget_ListParserRuleCall_3 extends RuleCallToken {
	
	public NonLinkableWidget_ListParserRuleCall_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public RuleCall getGrammarElement() {
		return grammarAccess.getNonLinkableWidgetAccess().getListParserRuleCall_3();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new List_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getListRule().getType().getClassifier())
			return null;
		if(checkForRecursion(List_Group.class, eObjectConsumer)) return null;
		return eObjectConsumer;
	}
	
    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(next, actIndex , index, inst);
		}	
	}	
}

// Setpoint
protected class NonLinkableWidget_SetpointParserRuleCall_4 extends RuleCallToken {
	
	public NonLinkableWidget_SetpointParserRuleCall_4(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public RuleCall getGrammarElement() {
		return grammarAccess.getNonLinkableWidgetAccess().getSetpointParserRuleCall_4();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Setpoint_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getSetpointRule().getType().getClassifier())
			return null;
		if(checkForRecursion(Setpoint_Group.class, eObjectConsumer)) return null;
		return eObjectConsumer;
	}
	
    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(next, actIndex , index, inst);
		}	
	}	
}

// Video
protected class NonLinkableWidget_VideoParserRuleCall_5 extends RuleCallToken {
	
	public NonLinkableWidget_VideoParserRuleCall_5(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public RuleCall getGrammarElement() {
		return grammarAccess.getNonLinkableWidgetAccess().getVideoParserRuleCall_5();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Video_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getVideoRule().getType().getClassifier())
			return null;
		if(checkForRecursion(Video_Group.class, eObjectConsumer)) return null;
		return eObjectConsumer;
	}
	
    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(next, actIndex , index, inst);
		}	
	}	
}

// Chart
protected class NonLinkableWidget_ChartParserRuleCall_6 extends RuleCallToken {
	
	public NonLinkableWidget_ChartParserRuleCall_6(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public RuleCall getGrammarElement() {
		return grammarAccess.getNonLinkableWidgetAccess().getChartParserRuleCall_6();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Chart_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getChartRule().getType().getClassifier())
			return null;
		if(checkForRecursion(Chart_Group.class, eObjectConsumer)) return null;
		return eObjectConsumer;
	}
	
    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(next, actIndex , index, inst);
		}	
	}	
}

// Webview
protected class NonLinkableWidget_WebviewParserRuleCall_7 extends RuleCallToken {
	
	public NonLinkableWidget_WebviewParserRuleCall_7(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public RuleCall getGrammarElement() {
		return grammarAccess.getNonLinkableWidgetAccess().getWebviewParserRuleCall_7();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Webview_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getWebviewRule().getType().getClassifier())
			return null;
		if(checkForRecursion(Webview_Group.class, eObjectConsumer)) return null;
		return eObjectConsumer;
	}
	
    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(next, actIndex , index, inst);
		}	
	}	
}

// Colorpicker
protected class NonLinkableWidget_ColorpickerParserRuleCall_8 extends RuleCallToken {
	
	public NonLinkableWidget_ColorpickerParserRuleCall_8(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public RuleCall getGrammarElement() {
		return grammarAccess.getNonLinkableWidgetAccess().getColorpickerParserRuleCall_8();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Colorpicker_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getColorpickerRule().getType().getClassifier())
			return null;
		if(checkForRecursion(Colorpicker_Group.class, eObjectConsumer)) return null;
		return eObjectConsumer;
	}
	
    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(next, actIndex , index, inst);
		}	
	}	
}


/************ end Rule NonLinkableWidget ****************/


/************ begin Rule LinkableWidget ****************
 *
 * LinkableWidget:
 * 
 * 	(Text | Group | Image | Frame) ("{" children+=Widget+ "}")?;
 *
 **/

// (Text | Group | Image | Frame) ("{" children+=Widget+ "}")?
protected class LinkableWidget_Group extends GroupToken {
	
	public LinkableWidget_Group(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getLinkableWidgetAccess().getGroup();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new LinkableWidget_Group_1(lastRuleCallOrigin, this, 0, inst);
			case 1: return new LinkableWidget_Alternatives_0(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getFrameAccess().getFrameAction_0().getType().getClassifier() && 
		   getEObject().eClass() != grammarAccess.getGroupRule().getType().getClassifier() && 
		   getEObject().eClass() != grammarAccess.getImageRule().getType().getClassifier() && 
		   getEObject().eClass() != grammarAccess.getTextAccess().getTextAction_0().getType().getClassifier())
			return null;
		return eObjectConsumer;
	}

}

// Text | Group | Image | Frame
protected class LinkableWidget_Alternatives_0 extends AlternativesToken {

	public LinkableWidget_Alternatives_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Alternatives getGrammarElement() {
		return grammarAccess.getLinkableWidgetAccess().getAlternatives_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new LinkableWidget_TextParserRuleCall_0_0(lastRuleCallOrigin, this, 0, inst);
			case 1: return new LinkableWidget_GroupParserRuleCall_0_1(lastRuleCallOrigin, this, 1, inst);
			case 2: return new LinkableWidget_ImageParserRuleCall_0_2(lastRuleCallOrigin, this, 2, inst);
			case 3: return new LinkableWidget_FrameParserRuleCall_0_3(lastRuleCallOrigin, this, 3, inst);
			default: return null;
		}	
	}

}

// Text
protected class LinkableWidget_TextParserRuleCall_0_0 extends RuleCallToken {
	
	public LinkableWidget_TextParserRuleCall_0_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public RuleCall getGrammarElement() {
		return grammarAccess.getLinkableWidgetAccess().getTextParserRuleCall_0_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Text_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getTextAccess().getTextAction_0().getType().getClassifier())
			return null;
		if(checkForRecursion(Text_Group.class, eObjectConsumer)) return null;
		return eObjectConsumer;
	}
	
    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(next, actIndex , index, inst);
		}	
	}	
}

// Group
protected class LinkableWidget_GroupParserRuleCall_0_1 extends RuleCallToken {
	
	public LinkableWidget_GroupParserRuleCall_0_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public RuleCall getGrammarElement() {
		return grammarAccess.getLinkableWidgetAccess().getGroupParserRuleCall_0_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Group_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getGroupRule().getType().getClassifier())
			return null;
		if(checkForRecursion(Group_Group.class, eObjectConsumer)) return null;
		return eObjectConsumer;
	}
	
    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(next, actIndex , index, inst);
		}	
	}	
}

// Image
protected class LinkableWidget_ImageParserRuleCall_0_2 extends RuleCallToken {
	
	public LinkableWidget_ImageParserRuleCall_0_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public RuleCall getGrammarElement() {
		return grammarAccess.getLinkableWidgetAccess().getImageParserRuleCall_0_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Image_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getImageRule().getType().getClassifier())
			return null;
		if(checkForRecursion(Image_Group.class, eObjectConsumer)) return null;
		return eObjectConsumer;
	}
	
    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(next, actIndex , index, inst);
		}	
	}	
}

// Frame
protected class LinkableWidget_FrameParserRuleCall_0_3 extends RuleCallToken {
	
	public LinkableWidget_FrameParserRuleCall_0_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public RuleCall getGrammarElement() {
		return grammarAccess.getLinkableWidgetAccess().getFrameParserRuleCall_0_3();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Frame_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getFrameAccess().getFrameAction_0().getType().getClassifier())
			return null;
		if(checkForRecursion(Frame_Group.class, eObjectConsumer)) return null;
		return eObjectConsumer;
	}
	
    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(next, actIndex , index, inst);
		}	
	}	
}


// ("{" children+=Widget+ "}")?
protected class LinkableWidget_Group_1 extends GroupToken {
	
	public LinkableWidget_Group_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getLinkableWidgetAccess().getGroup_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new LinkableWidget_RightCurlyBracketKeyword_1_2(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "{"
protected class LinkableWidget_LeftCurlyBracketKeyword_1_0 extends KeywordToken  {
	
	public LinkableWidget_LeftCurlyBracketKeyword_1_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getLinkableWidgetAccess().getLeftCurlyBracketKeyword_1_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new LinkableWidget_Alternatives_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// children+=Widget+
protected class LinkableWidget_ChildrenAssignment_1_1 extends AssignmentToken  {
	
	public LinkableWidget_ChildrenAssignment_1_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getLinkableWidgetAccess().getChildrenAssignment_1_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Widget_Alternatives(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("children",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("children");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getWidgetRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getLinkableWidgetAccess().getChildrenWidgetParserRuleCall_1_1_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new LinkableWidget_ChildrenAssignment_1_1(lastRuleCallOrigin, next, actIndex, consumed);
			case 1: return new LinkableWidget_LeftCurlyBracketKeyword_1_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// "}"
protected class LinkableWidget_RightCurlyBracketKeyword_1_2 extends KeywordToken  {
	
	public LinkableWidget_RightCurlyBracketKeyword_1_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getLinkableWidgetAccess().getRightCurlyBracketKeyword_1_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new LinkableWidget_ChildrenAssignment_1_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}



/************ end Rule LinkableWidget ****************/


/************ begin Rule Frame ****************
 *
 * Frame:
 * 
 * 	{Frame} "Frame" (("item=" item=ItemRef)? & ("label=" label=(ID | STRING))? & ("icon=" icon=Icon)? & ("labelcolor=["
 * 
 * 	(LabelColor+=ColorArray ("," LabelColor+=ColorArray)* "]"))? & ("valuecolor=[" (ValueColor+=ColorArray (","
 * 
 * 	ValueColor+=ColorArray)* "]"))? & ("visibility=[" (Visibility+=VisibilityRule ("," Visibility+=VisibilityRule)*
 * 
 * 	"]"))?);
 *
 **/

// {Frame} "Frame" (("item=" item=ItemRef)? & ("label=" label=(ID | STRING))? & ("icon=" icon=Icon)? & ("labelcolor=["
// 
// (LabelColor+=ColorArray ("," LabelColor+=ColorArray)* "]"))? & ("valuecolor=[" (ValueColor+=ColorArray (","
// 
// ValueColor+=ColorArray)* "]"))? & ("visibility=[" (Visibility+=VisibilityRule ("," Visibility+=VisibilityRule)*
// 
// "]"))?)
protected class Frame_Group extends GroupToken {
	
	public Frame_Group(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getFrameAccess().getGroup();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Frame_UnorderedGroup_2(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getFrameAccess().getFrameAction_0().getType().getClassifier())
			return null;
		return eObjectConsumer;
	}

}

// {Frame}
protected class Frame_FrameAction_0 extends ActionToken  {

	public Frame_FrameAction_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Action getGrammarElement() {
		return grammarAccess.getFrameAccess().getFrameAction_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(!eObjectConsumer.isConsumed()) return null;
		return eObjectConsumer;
	}
}

// "Frame"
protected class Frame_FrameKeyword_1 extends KeywordToken  {
	
	public Frame_FrameKeyword_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getFrameAccess().getFrameKeyword_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Frame_FrameAction_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// ("item=" item=ItemRef)? & ("label=" label=(ID | STRING))? & ("icon=" icon=Icon)? & ("labelcolor=["
// 
// (LabelColor+=ColorArray ("," LabelColor+=ColorArray)* "]"))? & ("valuecolor=[" (ValueColor+=ColorArray (","
// 
// ValueColor+=ColorArray)* "]"))? & ("visibility=[" (Visibility+=VisibilityRule ("," Visibility+=VisibilityRule)* "]"))?
protected class Frame_UnorderedGroup_2 extends UnorderedGroupToken {
	
	public Frame_UnorderedGroup_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public UnorderedGroup getGrammarElement() {
		return grammarAccess.getFrameAccess().getUnorderedGroup_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Frame_Group_2_5(lastRuleCallOrigin, this, 0, inst);
			case 1: return new Frame_Group_2_4(lastRuleCallOrigin, this, 1, inst);
			case 2: return new Frame_Group_2_3(lastRuleCallOrigin, this, 2, inst);
			case 3: return new Frame_Group_2_2(lastRuleCallOrigin, this, 3, inst);
			case 4: return new Frame_Group_2_1(lastRuleCallOrigin, this, 4, inst);
			case 5: return new Frame_Group_2_0(lastRuleCallOrigin, this, 5, inst);
			case 6: return new Frame_FrameKeyword_1(lastRuleCallOrigin, this, 6, inst);
			default: return null;
		}	
	}

}

// ("item=" item=ItemRef)?
protected class Frame_Group_2_0 extends GroupToken {
	
	public Frame_Group_2_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getFrameAccess().getGroup_2_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Frame_ItemAssignment_2_0_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "item="
protected class Frame_ItemKeyword_2_0_0 extends KeywordToken  {
	
	public Frame_ItemKeyword_2_0_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getFrameAccess().getItemKeyword_2_0_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Frame_FrameKeyword_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// item=ItemRef
protected class Frame_ItemAssignment_2_0_1 extends AssignmentToken  {
	
	public Frame_ItemAssignment_2_0_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getFrameAccess().getItemAssignment_2_0_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Frame_ItemKeyword_2_0_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("item",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("item");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getFrameAccess().getItemItemRefParserRuleCall_2_0_1_0(), value, null)) {
			type = AssignmentType.DATATYPE_RULE_CALL;
			element = grammarAccess.getFrameAccess().getItemItemRefParserRuleCall_2_0_1_0();
			return obj;
		}
		return null;
	}

}


// ("label=" label=(ID | STRING))?
protected class Frame_Group_2_1 extends GroupToken {
	
	public Frame_Group_2_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getFrameAccess().getGroup_2_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Frame_LabelAssignment_2_1_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "label="
protected class Frame_LabelKeyword_2_1_0 extends KeywordToken  {
	
	public Frame_LabelKeyword_2_1_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getFrameAccess().getLabelKeyword_2_1_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Frame_Group_2_0(lastRuleCallOrigin, this, 0, inst);
			case 1: return new Frame_FrameKeyword_1(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// label=(ID | STRING)
protected class Frame_LabelAssignment_2_1_1 extends AssignmentToken  {
	
	public Frame_LabelAssignment_2_1_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getFrameAccess().getLabelAssignment_2_1_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Frame_LabelKeyword_2_1_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("label",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("label");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getFrameAccess().getLabelIDTerminalRuleCall_2_1_1_0_0(), value, null)) {
			type = AssignmentType.TERMINAL_RULE_CALL;
			element = grammarAccess.getFrameAccess().getLabelIDTerminalRuleCall_2_1_1_0_0();
			return obj;
		}
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getFrameAccess().getLabelSTRINGTerminalRuleCall_2_1_1_0_1(), value, null)) {
			type = AssignmentType.TERMINAL_RULE_CALL;
			element = grammarAccess.getFrameAccess().getLabelSTRINGTerminalRuleCall_2_1_1_0_1();
			return obj;
		}
		return null;
	}

}


// ("icon=" icon=Icon)?
protected class Frame_Group_2_2 extends GroupToken {
	
	public Frame_Group_2_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getFrameAccess().getGroup_2_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Frame_IconAssignment_2_2_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "icon="
protected class Frame_IconKeyword_2_2_0 extends KeywordToken  {
	
	public Frame_IconKeyword_2_2_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getFrameAccess().getIconKeyword_2_2_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Frame_Group_2_1(lastRuleCallOrigin, this, 0, inst);
			case 1: return new Frame_Group_2_0(lastRuleCallOrigin, this, 1, inst);
			case 2: return new Frame_FrameKeyword_1(lastRuleCallOrigin, this, 2, inst);
			default: return null;
		}	
	}

}

// icon=Icon
protected class Frame_IconAssignment_2_2_1 extends AssignmentToken  {
	
	public Frame_IconAssignment_2_2_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getFrameAccess().getIconAssignment_2_2_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Frame_IconKeyword_2_2_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("icon",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("icon");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getFrameAccess().getIconIconParserRuleCall_2_2_1_0(), value, null)) {
			type = AssignmentType.DATATYPE_RULE_CALL;
			element = grammarAccess.getFrameAccess().getIconIconParserRuleCall_2_2_1_0();
			return obj;
		}
		return null;
	}

}


// ("labelcolor=[" (LabelColor+=ColorArray ("," LabelColor+=ColorArray)* "]"))?
protected class Frame_Group_2_3 extends GroupToken {
	
	public Frame_Group_2_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getFrameAccess().getGroup_2_3();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Frame_Group_2_3_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "labelcolor=["
protected class Frame_LabelcolorKeyword_2_3_0 extends KeywordToken  {
	
	public Frame_LabelcolorKeyword_2_3_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getFrameAccess().getLabelcolorKeyword_2_3_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Frame_Group_2_2(lastRuleCallOrigin, this, 0, inst);
			case 1: return new Frame_Group_2_1(lastRuleCallOrigin, this, 1, inst);
			case 2: return new Frame_Group_2_0(lastRuleCallOrigin, this, 2, inst);
			case 3: return new Frame_FrameKeyword_1(lastRuleCallOrigin, this, 3, inst);
			default: return null;
		}	
	}

}

// LabelColor+=ColorArray ("," LabelColor+=ColorArray)* "]"
protected class Frame_Group_2_3_1 extends GroupToken {
	
	public Frame_Group_2_3_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getFrameAccess().getGroup_2_3_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Frame_RightSquareBracketKeyword_2_3_1_2(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// LabelColor+=ColorArray
protected class Frame_LabelColorAssignment_2_3_1_0 extends AssignmentToken  {
	
	public Frame_LabelColorAssignment_2_3_1_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getFrameAccess().getLabelColorAssignment_2_3_1_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ColorArray_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("LabelColor",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("LabelColor");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getColorArrayRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getFrameAccess().getLabelColorColorArrayParserRuleCall_2_3_1_0_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new Frame_LabelcolorKeyword_2_3_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// ("," LabelColor+=ColorArray)*
protected class Frame_Group_2_3_1_1 extends GroupToken {
	
	public Frame_Group_2_3_1_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getFrameAccess().getGroup_2_3_1_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Frame_LabelColorAssignment_2_3_1_1_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// ","
protected class Frame_CommaKeyword_2_3_1_1_0 extends KeywordToken  {
	
	public Frame_CommaKeyword_2_3_1_1_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getFrameAccess().getCommaKeyword_2_3_1_1_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Frame_Group_2_3_1_1(lastRuleCallOrigin, this, 0, inst);
			case 1: return new Frame_LabelColorAssignment_2_3_1_0(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// LabelColor+=ColorArray
protected class Frame_LabelColorAssignment_2_3_1_1_1 extends AssignmentToken  {
	
	public Frame_LabelColorAssignment_2_3_1_1_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getFrameAccess().getLabelColorAssignment_2_3_1_1_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ColorArray_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("LabelColor",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("LabelColor");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getColorArrayRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getFrameAccess().getLabelColorColorArrayParserRuleCall_2_3_1_1_1_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new Frame_CommaKeyword_2_3_1_1_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}


// "]"
protected class Frame_RightSquareBracketKeyword_2_3_1_2 extends KeywordToken  {
	
	public Frame_RightSquareBracketKeyword_2_3_1_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getFrameAccess().getRightSquareBracketKeyword_2_3_1_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Frame_Group_2_3_1_1(lastRuleCallOrigin, this, 0, inst);
			case 1: return new Frame_LabelColorAssignment_2_3_1_0(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}



// ("valuecolor=[" (ValueColor+=ColorArray ("," ValueColor+=ColorArray)* "]"))?
protected class Frame_Group_2_4 extends GroupToken {
	
	public Frame_Group_2_4(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getFrameAccess().getGroup_2_4();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Frame_Group_2_4_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "valuecolor=["
protected class Frame_ValuecolorKeyword_2_4_0 extends KeywordToken  {
	
	public Frame_ValuecolorKeyword_2_4_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getFrameAccess().getValuecolorKeyword_2_4_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Frame_Group_2_3(lastRuleCallOrigin, this, 0, inst);
			case 1: return new Frame_Group_2_2(lastRuleCallOrigin, this, 1, inst);
			case 2: return new Frame_Group_2_1(lastRuleCallOrigin, this, 2, inst);
			case 3: return new Frame_Group_2_0(lastRuleCallOrigin, this, 3, inst);
			case 4: return new Frame_FrameKeyword_1(lastRuleCallOrigin, this, 4, inst);
			default: return null;
		}	
	}

}

// ValueColor+=ColorArray ("," ValueColor+=ColorArray)* "]"
protected class Frame_Group_2_4_1 extends GroupToken {
	
	public Frame_Group_2_4_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getFrameAccess().getGroup_2_4_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Frame_RightSquareBracketKeyword_2_4_1_2(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// ValueColor+=ColorArray
protected class Frame_ValueColorAssignment_2_4_1_0 extends AssignmentToken  {
	
	public Frame_ValueColorAssignment_2_4_1_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getFrameAccess().getValueColorAssignment_2_4_1_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ColorArray_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("ValueColor",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("ValueColor");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getColorArrayRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getFrameAccess().getValueColorColorArrayParserRuleCall_2_4_1_0_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new Frame_ValuecolorKeyword_2_4_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// ("," ValueColor+=ColorArray)*
protected class Frame_Group_2_4_1_1 extends GroupToken {
	
	public Frame_Group_2_4_1_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getFrameAccess().getGroup_2_4_1_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Frame_ValueColorAssignment_2_4_1_1_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// ","
protected class Frame_CommaKeyword_2_4_1_1_0 extends KeywordToken  {
	
	public Frame_CommaKeyword_2_4_1_1_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getFrameAccess().getCommaKeyword_2_4_1_1_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Frame_Group_2_4_1_1(lastRuleCallOrigin, this, 0, inst);
			case 1: return new Frame_ValueColorAssignment_2_4_1_0(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// ValueColor+=ColorArray
protected class Frame_ValueColorAssignment_2_4_1_1_1 extends AssignmentToken  {
	
	public Frame_ValueColorAssignment_2_4_1_1_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getFrameAccess().getValueColorAssignment_2_4_1_1_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ColorArray_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("ValueColor",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("ValueColor");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getColorArrayRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getFrameAccess().getValueColorColorArrayParserRuleCall_2_4_1_1_1_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new Frame_CommaKeyword_2_4_1_1_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}


// "]"
protected class Frame_RightSquareBracketKeyword_2_4_1_2 extends KeywordToken  {
	
	public Frame_RightSquareBracketKeyword_2_4_1_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getFrameAccess().getRightSquareBracketKeyword_2_4_1_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Frame_Group_2_4_1_1(lastRuleCallOrigin, this, 0, inst);
			case 1: return new Frame_ValueColorAssignment_2_4_1_0(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}



// ("visibility=[" (Visibility+=VisibilityRule ("," Visibility+=VisibilityRule)* "]"))?
protected class Frame_Group_2_5 extends GroupToken {
	
	public Frame_Group_2_5(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getFrameAccess().getGroup_2_5();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Frame_Group_2_5_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "visibility=["
protected class Frame_VisibilityKeyword_2_5_0 extends KeywordToken  {
	
	public Frame_VisibilityKeyword_2_5_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getFrameAccess().getVisibilityKeyword_2_5_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Frame_Group_2_4(lastRuleCallOrigin, this, 0, inst);
			case 1: return new Frame_Group_2_3(lastRuleCallOrigin, this, 1, inst);
			case 2: return new Frame_Group_2_2(lastRuleCallOrigin, this, 2, inst);
			case 3: return new Frame_Group_2_1(lastRuleCallOrigin, this, 3, inst);
			case 4: return new Frame_Group_2_0(lastRuleCallOrigin, this, 4, inst);
			case 5: return new Frame_FrameKeyword_1(lastRuleCallOrigin, this, 5, inst);
			default: return null;
		}	
	}

}

// Visibility+=VisibilityRule ("," Visibility+=VisibilityRule)* "]"
protected class Frame_Group_2_5_1 extends GroupToken {
	
	public Frame_Group_2_5_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getFrameAccess().getGroup_2_5_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Frame_RightSquareBracketKeyword_2_5_1_2(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// Visibility+=VisibilityRule
protected class Frame_VisibilityAssignment_2_5_1_0 extends AssignmentToken  {
	
	public Frame_VisibilityAssignment_2_5_1_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getFrameAccess().getVisibilityAssignment_2_5_1_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new VisibilityRule_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("Visibility",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("Visibility");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getVisibilityRuleRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getFrameAccess().getVisibilityVisibilityRuleParserRuleCall_2_5_1_0_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new Frame_VisibilityKeyword_2_5_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// ("," Visibility+=VisibilityRule)*
protected class Frame_Group_2_5_1_1 extends GroupToken {
	
	public Frame_Group_2_5_1_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getFrameAccess().getGroup_2_5_1_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Frame_VisibilityAssignment_2_5_1_1_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// ","
protected class Frame_CommaKeyword_2_5_1_1_0 extends KeywordToken  {
	
	public Frame_CommaKeyword_2_5_1_1_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getFrameAccess().getCommaKeyword_2_5_1_1_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Frame_Group_2_5_1_1(lastRuleCallOrigin, this, 0, inst);
			case 1: return new Frame_VisibilityAssignment_2_5_1_0(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// Visibility+=VisibilityRule
protected class Frame_VisibilityAssignment_2_5_1_1_1 extends AssignmentToken  {
	
	public Frame_VisibilityAssignment_2_5_1_1_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getFrameAccess().getVisibilityAssignment_2_5_1_1_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new VisibilityRule_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("Visibility",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("Visibility");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getVisibilityRuleRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getFrameAccess().getVisibilityVisibilityRuleParserRuleCall_2_5_1_1_1_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new Frame_CommaKeyword_2_5_1_1_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}


// "]"
protected class Frame_RightSquareBracketKeyword_2_5_1_2 extends KeywordToken  {
	
	public Frame_RightSquareBracketKeyword_2_5_1_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getFrameAccess().getRightSquareBracketKeyword_2_5_1_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Frame_Group_2_5_1_1(lastRuleCallOrigin, this, 0, inst);
			case 1: return new Frame_VisibilityAssignment_2_5_1_0(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}





/************ end Rule Frame ****************/


/************ begin Rule Text ****************
 *
 * Text:
 * 
 * 	{Text} "Text" (("item=" item=ItemRef)? & ("label=" label=(ID | STRING))? & ("icon=" icon=Icon)? & ("labelcolor=["
 * 
 * 	(LabelColor+=ColorArray ("," LabelColor+=ColorArray)* "]"))? & ("valuecolor=[" (ValueColor+=ColorArray (","
 * 
 * 	ValueColor+=ColorArray)* "]"))? & ("visibility=[" (Visibility+=VisibilityRule ("," Visibility+=VisibilityRule)*
 * 
 * 	"]"))?);
 *
 **/

// {Text} "Text" (("item=" item=ItemRef)? & ("label=" label=(ID | STRING))? & ("icon=" icon=Icon)? & ("labelcolor=["
// 
// (LabelColor+=ColorArray ("," LabelColor+=ColorArray)* "]"))? & ("valuecolor=[" (ValueColor+=ColorArray (","
// 
// ValueColor+=ColorArray)* "]"))? & ("visibility=[" (Visibility+=VisibilityRule ("," Visibility+=VisibilityRule)*
// 
// "]"))?)
protected class Text_Group extends GroupToken {
	
	public Text_Group(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getTextAccess().getGroup();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Text_UnorderedGroup_2(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getTextAccess().getTextAction_0().getType().getClassifier())
			return null;
		return eObjectConsumer;
	}

}

// {Text}
protected class Text_TextAction_0 extends ActionToken  {

	public Text_TextAction_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Action getGrammarElement() {
		return grammarAccess.getTextAccess().getTextAction_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(!eObjectConsumer.isConsumed()) return null;
		return eObjectConsumer;
	}
}

// "Text"
protected class Text_TextKeyword_1 extends KeywordToken  {
	
	public Text_TextKeyword_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getTextAccess().getTextKeyword_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Text_TextAction_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// ("item=" item=ItemRef)? & ("label=" label=(ID | STRING))? & ("icon=" icon=Icon)? & ("labelcolor=["
// 
// (LabelColor+=ColorArray ("," LabelColor+=ColorArray)* "]"))? & ("valuecolor=[" (ValueColor+=ColorArray (","
// 
// ValueColor+=ColorArray)* "]"))? & ("visibility=[" (Visibility+=VisibilityRule ("," Visibility+=VisibilityRule)* "]"))?
protected class Text_UnorderedGroup_2 extends UnorderedGroupToken {
	
	public Text_UnorderedGroup_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public UnorderedGroup getGrammarElement() {
		return grammarAccess.getTextAccess().getUnorderedGroup_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Text_Group_2_5(lastRuleCallOrigin, this, 0, inst);
			case 1: return new Text_Group_2_4(lastRuleCallOrigin, this, 1, inst);
			case 2: return new Text_Group_2_3(lastRuleCallOrigin, this, 2, inst);
			case 3: return new Text_Group_2_2(lastRuleCallOrigin, this, 3, inst);
			case 4: return new Text_Group_2_1(lastRuleCallOrigin, this, 4, inst);
			case 5: return new Text_Group_2_0(lastRuleCallOrigin, this, 5, inst);
			case 6: return new Text_TextKeyword_1(lastRuleCallOrigin, this, 6, inst);
			default: return null;
		}	
	}

}

// ("item=" item=ItemRef)?
protected class Text_Group_2_0 extends GroupToken {
	
	public Text_Group_2_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getTextAccess().getGroup_2_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Text_ItemAssignment_2_0_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "item="
protected class Text_ItemKeyword_2_0_0 extends KeywordToken  {
	
	public Text_ItemKeyword_2_0_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getTextAccess().getItemKeyword_2_0_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Text_TextKeyword_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// item=ItemRef
protected class Text_ItemAssignment_2_0_1 extends AssignmentToken  {
	
	public Text_ItemAssignment_2_0_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getTextAccess().getItemAssignment_2_0_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Text_ItemKeyword_2_0_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("item",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("item");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getTextAccess().getItemItemRefParserRuleCall_2_0_1_0(), value, null)) {
			type = AssignmentType.DATATYPE_RULE_CALL;
			element = grammarAccess.getTextAccess().getItemItemRefParserRuleCall_2_0_1_0();
			return obj;
		}
		return null;
	}

}


// ("label=" label=(ID | STRING))?
protected class Text_Group_2_1 extends GroupToken {
	
	public Text_Group_2_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getTextAccess().getGroup_2_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Text_LabelAssignment_2_1_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "label="
protected class Text_LabelKeyword_2_1_0 extends KeywordToken  {
	
	public Text_LabelKeyword_2_1_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getTextAccess().getLabelKeyword_2_1_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Text_Group_2_0(lastRuleCallOrigin, this, 0, inst);
			case 1: return new Text_TextKeyword_1(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// label=(ID | STRING)
protected class Text_LabelAssignment_2_1_1 extends AssignmentToken  {
	
	public Text_LabelAssignment_2_1_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getTextAccess().getLabelAssignment_2_1_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Text_LabelKeyword_2_1_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("label",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("label");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getTextAccess().getLabelIDTerminalRuleCall_2_1_1_0_0(), value, null)) {
			type = AssignmentType.TERMINAL_RULE_CALL;
			element = grammarAccess.getTextAccess().getLabelIDTerminalRuleCall_2_1_1_0_0();
			return obj;
		}
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getTextAccess().getLabelSTRINGTerminalRuleCall_2_1_1_0_1(), value, null)) {
			type = AssignmentType.TERMINAL_RULE_CALL;
			element = grammarAccess.getTextAccess().getLabelSTRINGTerminalRuleCall_2_1_1_0_1();
			return obj;
		}
		return null;
	}

}


// ("icon=" icon=Icon)?
protected class Text_Group_2_2 extends GroupToken {
	
	public Text_Group_2_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getTextAccess().getGroup_2_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Text_IconAssignment_2_2_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "icon="
protected class Text_IconKeyword_2_2_0 extends KeywordToken  {
	
	public Text_IconKeyword_2_2_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getTextAccess().getIconKeyword_2_2_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Text_Group_2_1(lastRuleCallOrigin, this, 0, inst);
			case 1: return new Text_Group_2_0(lastRuleCallOrigin, this, 1, inst);
			case 2: return new Text_TextKeyword_1(lastRuleCallOrigin, this, 2, inst);
			default: return null;
		}	
	}

}

// icon=Icon
protected class Text_IconAssignment_2_2_1 extends AssignmentToken  {
	
	public Text_IconAssignment_2_2_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getTextAccess().getIconAssignment_2_2_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Text_IconKeyword_2_2_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("icon",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("icon");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getTextAccess().getIconIconParserRuleCall_2_2_1_0(), value, null)) {
			type = AssignmentType.DATATYPE_RULE_CALL;
			element = grammarAccess.getTextAccess().getIconIconParserRuleCall_2_2_1_0();
			return obj;
		}
		return null;
	}

}


// ("labelcolor=[" (LabelColor+=ColorArray ("," LabelColor+=ColorArray)* "]"))?
protected class Text_Group_2_3 extends GroupToken {
	
	public Text_Group_2_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getTextAccess().getGroup_2_3();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Text_Group_2_3_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "labelcolor=["
protected class Text_LabelcolorKeyword_2_3_0 extends KeywordToken  {
	
	public Text_LabelcolorKeyword_2_3_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getTextAccess().getLabelcolorKeyword_2_3_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Text_Group_2_2(lastRuleCallOrigin, this, 0, inst);
			case 1: return new Text_Group_2_1(lastRuleCallOrigin, this, 1, inst);
			case 2: return new Text_Group_2_0(lastRuleCallOrigin, this, 2, inst);
			case 3: return new Text_TextKeyword_1(lastRuleCallOrigin, this, 3, inst);
			default: return null;
		}	
	}

}

// LabelColor+=ColorArray ("," LabelColor+=ColorArray)* "]"
protected class Text_Group_2_3_1 extends GroupToken {
	
	public Text_Group_2_3_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getTextAccess().getGroup_2_3_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Text_RightSquareBracketKeyword_2_3_1_2(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// LabelColor+=ColorArray
protected class Text_LabelColorAssignment_2_3_1_0 extends AssignmentToken  {
	
	public Text_LabelColorAssignment_2_3_1_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getTextAccess().getLabelColorAssignment_2_3_1_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ColorArray_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("LabelColor",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("LabelColor");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getColorArrayRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getTextAccess().getLabelColorColorArrayParserRuleCall_2_3_1_0_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new Text_LabelcolorKeyword_2_3_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// ("," LabelColor+=ColorArray)*
protected class Text_Group_2_3_1_1 extends GroupToken {
	
	public Text_Group_2_3_1_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getTextAccess().getGroup_2_3_1_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Text_LabelColorAssignment_2_3_1_1_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// ","
protected class Text_CommaKeyword_2_3_1_1_0 extends KeywordToken  {
	
	public Text_CommaKeyword_2_3_1_1_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getTextAccess().getCommaKeyword_2_3_1_1_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Text_Group_2_3_1_1(lastRuleCallOrigin, this, 0, inst);
			case 1: return new Text_LabelColorAssignment_2_3_1_0(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// LabelColor+=ColorArray
protected class Text_LabelColorAssignment_2_3_1_1_1 extends AssignmentToken  {
	
	public Text_LabelColorAssignment_2_3_1_1_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getTextAccess().getLabelColorAssignment_2_3_1_1_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ColorArray_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("LabelColor",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("LabelColor");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getColorArrayRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getTextAccess().getLabelColorColorArrayParserRuleCall_2_3_1_1_1_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new Text_CommaKeyword_2_3_1_1_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}


// "]"
protected class Text_RightSquareBracketKeyword_2_3_1_2 extends KeywordToken  {
	
	public Text_RightSquareBracketKeyword_2_3_1_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getTextAccess().getRightSquareBracketKeyword_2_3_1_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Text_Group_2_3_1_1(lastRuleCallOrigin, this, 0, inst);
			case 1: return new Text_LabelColorAssignment_2_3_1_0(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}



// ("valuecolor=[" (ValueColor+=ColorArray ("," ValueColor+=ColorArray)* "]"))?
protected class Text_Group_2_4 extends GroupToken {
	
	public Text_Group_2_4(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getTextAccess().getGroup_2_4();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Text_Group_2_4_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "valuecolor=["
protected class Text_ValuecolorKeyword_2_4_0 extends KeywordToken  {
	
	public Text_ValuecolorKeyword_2_4_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getTextAccess().getValuecolorKeyword_2_4_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Text_Group_2_3(lastRuleCallOrigin, this, 0, inst);
			case 1: return new Text_Group_2_2(lastRuleCallOrigin, this, 1, inst);
			case 2: return new Text_Group_2_1(lastRuleCallOrigin, this, 2, inst);
			case 3: return new Text_Group_2_0(lastRuleCallOrigin, this, 3, inst);
			case 4: return new Text_TextKeyword_1(lastRuleCallOrigin, this, 4, inst);
			default: return null;
		}	
	}

}

// ValueColor+=ColorArray ("," ValueColor+=ColorArray)* "]"
protected class Text_Group_2_4_1 extends GroupToken {
	
	public Text_Group_2_4_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getTextAccess().getGroup_2_4_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Text_RightSquareBracketKeyword_2_4_1_2(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// ValueColor+=ColorArray
protected class Text_ValueColorAssignment_2_4_1_0 extends AssignmentToken  {
	
	public Text_ValueColorAssignment_2_4_1_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getTextAccess().getValueColorAssignment_2_4_1_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ColorArray_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("ValueColor",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("ValueColor");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getColorArrayRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getTextAccess().getValueColorColorArrayParserRuleCall_2_4_1_0_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new Text_ValuecolorKeyword_2_4_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// ("," ValueColor+=ColorArray)*
protected class Text_Group_2_4_1_1 extends GroupToken {
	
	public Text_Group_2_4_1_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getTextAccess().getGroup_2_4_1_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Text_ValueColorAssignment_2_4_1_1_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// ","
protected class Text_CommaKeyword_2_4_1_1_0 extends KeywordToken  {
	
	public Text_CommaKeyword_2_4_1_1_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getTextAccess().getCommaKeyword_2_4_1_1_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Text_Group_2_4_1_1(lastRuleCallOrigin, this, 0, inst);
			case 1: return new Text_ValueColorAssignment_2_4_1_0(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// ValueColor+=ColorArray
protected class Text_ValueColorAssignment_2_4_1_1_1 extends AssignmentToken  {
	
	public Text_ValueColorAssignment_2_4_1_1_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getTextAccess().getValueColorAssignment_2_4_1_1_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ColorArray_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("ValueColor",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("ValueColor");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getColorArrayRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getTextAccess().getValueColorColorArrayParserRuleCall_2_4_1_1_1_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new Text_CommaKeyword_2_4_1_1_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}


// "]"
protected class Text_RightSquareBracketKeyword_2_4_1_2 extends KeywordToken  {
	
	public Text_RightSquareBracketKeyword_2_4_1_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getTextAccess().getRightSquareBracketKeyword_2_4_1_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Text_Group_2_4_1_1(lastRuleCallOrigin, this, 0, inst);
			case 1: return new Text_ValueColorAssignment_2_4_1_0(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}



// ("visibility=[" (Visibility+=VisibilityRule ("," Visibility+=VisibilityRule)* "]"))?
protected class Text_Group_2_5 extends GroupToken {
	
	public Text_Group_2_5(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getTextAccess().getGroup_2_5();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Text_Group_2_5_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "visibility=["
protected class Text_VisibilityKeyword_2_5_0 extends KeywordToken  {
	
	public Text_VisibilityKeyword_2_5_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getTextAccess().getVisibilityKeyword_2_5_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Text_Group_2_4(lastRuleCallOrigin, this, 0, inst);
			case 1: return new Text_Group_2_3(lastRuleCallOrigin, this, 1, inst);
			case 2: return new Text_Group_2_2(lastRuleCallOrigin, this, 2, inst);
			case 3: return new Text_Group_2_1(lastRuleCallOrigin, this, 3, inst);
			case 4: return new Text_Group_2_0(lastRuleCallOrigin, this, 4, inst);
			case 5: return new Text_TextKeyword_1(lastRuleCallOrigin, this, 5, inst);
			default: return null;
		}	
	}

}

// Visibility+=VisibilityRule ("," Visibility+=VisibilityRule)* "]"
protected class Text_Group_2_5_1 extends GroupToken {
	
	public Text_Group_2_5_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getTextAccess().getGroup_2_5_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Text_RightSquareBracketKeyword_2_5_1_2(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// Visibility+=VisibilityRule
protected class Text_VisibilityAssignment_2_5_1_0 extends AssignmentToken  {
	
	public Text_VisibilityAssignment_2_5_1_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getTextAccess().getVisibilityAssignment_2_5_1_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new VisibilityRule_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("Visibility",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("Visibility");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getVisibilityRuleRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getTextAccess().getVisibilityVisibilityRuleParserRuleCall_2_5_1_0_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new Text_VisibilityKeyword_2_5_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// ("," Visibility+=VisibilityRule)*
protected class Text_Group_2_5_1_1 extends GroupToken {
	
	public Text_Group_2_5_1_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getTextAccess().getGroup_2_5_1_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Text_VisibilityAssignment_2_5_1_1_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// ","
protected class Text_CommaKeyword_2_5_1_1_0 extends KeywordToken  {
	
	public Text_CommaKeyword_2_5_1_1_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getTextAccess().getCommaKeyword_2_5_1_1_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Text_Group_2_5_1_1(lastRuleCallOrigin, this, 0, inst);
			case 1: return new Text_VisibilityAssignment_2_5_1_0(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// Visibility+=VisibilityRule
protected class Text_VisibilityAssignment_2_5_1_1_1 extends AssignmentToken  {
	
	public Text_VisibilityAssignment_2_5_1_1_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getTextAccess().getVisibilityAssignment_2_5_1_1_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new VisibilityRule_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("Visibility",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("Visibility");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getVisibilityRuleRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getTextAccess().getVisibilityVisibilityRuleParserRuleCall_2_5_1_1_1_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new Text_CommaKeyword_2_5_1_1_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}


// "]"
protected class Text_RightSquareBracketKeyword_2_5_1_2 extends KeywordToken  {
	
	public Text_RightSquareBracketKeyword_2_5_1_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getTextAccess().getRightSquareBracketKeyword_2_5_1_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Text_Group_2_5_1_1(lastRuleCallOrigin, this, 0, inst);
			case 1: return new Text_VisibilityAssignment_2_5_1_0(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}





/************ end Rule Text ****************/


/************ begin Rule Group ****************
 *
 * Group:
 * 
 * 	"Group" ("item=" item=GroupItemRef & ("label=" label=(ID | STRING))? & ("icon=" icon=Icon)? & ("labelcolor=["
 * 
 * 	(LabelColor+=ColorArray ("," LabelColor+=ColorArray)* "]"))? & ("valuecolor=[" (ValueColor+=ColorArray (","
 * 
 * 	ValueColor+=ColorArray)* "]"))? & ("visibility=[" (Visibility+=VisibilityRule ("," Visibility+=VisibilityRule)*
 * 
 * 	"]"))?);
 *
 **/

// "Group" ("item=" item=GroupItemRef & ("label=" label=(ID | STRING))? & ("icon=" icon=Icon)? & ("labelcolor=["
// 
// (LabelColor+=ColorArray ("," LabelColor+=ColorArray)* "]"))? & ("valuecolor=[" (ValueColor+=ColorArray (","
// 
// ValueColor+=ColorArray)* "]"))? & ("visibility=[" (Visibility+=VisibilityRule ("," Visibility+=VisibilityRule)*
// 
// "]"))?)
protected class Group_Group extends GroupToken {
	
	public Group_Group(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getGroupAccess().getGroup();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Group_UnorderedGroup_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getGroupRule().getType().getClassifier())
			return null;
		return eObjectConsumer;
	}

}

// "Group"
protected class Group_GroupKeyword_0 extends KeywordToken  {
	
	public Group_GroupKeyword_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getGroupAccess().getGroupKeyword_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

}

// "item=" item=GroupItemRef & ("label=" label=(ID | STRING))? & ("icon=" icon=Icon)? & ("labelcolor=["
// 
// (LabelColor+=ColorArray ("," LabelColor+=ColorArray)* "]"))? & ("valuecolor=[" (ValueColor+=ColorArray (","
// 
// ValueColor+=ColorArray)* "]"))? & ("visibility=[" (Visibility+=VisibilityRule ("," Visibility+=VisibilityRule)* "]"))?
protected class Group_UnorderedGroup_1 extends UnorderedGroupToken {
	
	public Group_UnorderedGroup_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public UnorderedGroup getGrammarElement() {
		return grammarAccess.getGroupAccess().getUnorderedGroup_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Group_Group_1_5(lastRuleCallOrigin, this, 0, inst);
			case 1: return new Group_Group_1_4(lastRuleCallOrigin, this, 1, inst);
			case 2: return new Group_Group_1_3(lastRuleCallOrigin, this, 2, inst);
			case 3: return new Group_Group_1_2(lastRuleCallOrigin, this, 3, inst);
			case 4: return new Group_Group_1_1(lastRuleCallOrigin, this, 4, inst);
			case 5: return new Group_Group_1_0(lastRuleCallOrigin, this, 5, inst);
			default: return null;
		}	
	}

}

// "item=" item=GroupItemRef
protected class Group_Group_1_0 extends GroupToken {
	
	public Group_Group_1_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getGroupAccess().getGroup_1_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Group_ItemAssignment_1_0_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "item="
protected class Group_ItemKeyword_1_0_0 extends KeywordToken  {
	
	public Group_ItemKeyword_1_0_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getGroupAccess().getItemKeyword_1_0_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Group_GroupKeyword_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// item=GroupItemRef
protected class Group_ItemAssignment_1_0_1 extends AssignmentToken  {
	
	public Group_ItemAssignment_1_0_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getGroupAccess().getItemAssignment_1_0_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Group_ItemKeyword_1_0_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("item",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("item");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getGroupAccess().getItemGroupItemRefParserRuleCall_1_0_1_0(), value, null)) {
			type = AssignmentType.DATATYPE_RULE_CALL;
			element = grammarAccess.getGroupAccess().getItemGroupItemRefParserRuleCall_1_0_1_0();
			return obj;
		}
		return null;
	}

}


// ("label=" label=(ID | STRING))?
protected class Group_Group_1_1 extends GroupToken {
	
	public Group_Group_1_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getGroupAccess().getGroup_1_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Group_LabelAssignment_1_1_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "label="
protected class Group_LabelKeyword_1_1_0 extends KeywordToken  {
	
	public Group_LabelKeyword_1_1_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getGroupAccess().getLabelKeyword_1_1_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Group_Group_1_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// label=(ID | STRING)
protected class Group_LabelAssignment_1_1_1 extends AssignmentToken  {
	
	public Group_LabelAssignment_1_1_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getGroupAccess().getLabelAssignment_1_1_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Group_LabelKeyword_1_1_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("label",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("label");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getGroupAccess().getLabelIDTerminalRuleCall_1_1_1_0_0(), value, null)) {
			type = AssignmentType.TERMINAL_RULE_CALL;
			element = grammarAccess.getGroupAccess().getLabelIDTerminalRuleCall_1_1_1_0_0();
			return obj;
		}
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getGroupAccess().getLabelSTRINGTerminalRuleCall_1_1_1_0_1(), value, null)) {
			type = AssignmentType.TERMINAL_RULE_CALL;
			element = grammarAccess.getGroupAccess().getLabelSTRINGTerminalRuleCall_1_1_1_0_1();
			return obj;
		}
		return null;
	}

}


// ("icon=" icon=Icon)?
protected class Group_Group_1_2 extends GroupToken {
	
	public Group_Group_1_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getGroupAccess().getGroup_1_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Group_IconAssignment_1_2_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "icon="
protected class Group_IconKeyword_1_2_0 extends KeywordToken  {
	
	public Group_IconKeyword_1_2_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getGroupAccess().getIconKeyword_1_2_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Group_Group_1_1(lastRuleCallOrigin, this, 0, inst);
			case 1: return new Group_Group_1_0(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// icon=Icon
protected class Group_IconAssignment_1_2_1 extends AssignmentToken  {
	
	public Group_IconAssignment_1_2_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getGroupAccess().getIconAssignment_1_2_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Group_IconKeyword_1_2_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("icon",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("icon");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getGroupAccess().getIconIconParserRuleCall_1_2_1_0(), value, null)) {
			type = AssignmentType.DATATYPE_RULE_CALL;
			element = grammarAccess.getGroupAccess().getIconIconParserRuleCall_1_2_1_0();
			return obj;
		}
		return null;
	}

}


// ("labelcolor=[" (LabelColor+=ColorArray ("," LabelColor+=ColorArray)* "]"))?
protected class Group_Group_1_3 extends GroupToken {
	
	public Group_Group_1_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getGroupAccess().getGroup_1_3();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Group_Group_1_3_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "labelcolor=["
protected class Group_LabelcolorKeyword_1_3_0 extends KeywordToken  {
	
	public Group_LabelcolorKeyword_1_3_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getGroupAccess().getLabelcolorKeyword_1_3_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Group_Group_1_2(lastRuleCallOrigin, this, 0, inst);
			case 1: return new Group_Group_1_1(lastRuleCallOrigin, this, 1, inst);
			case 2: return new Group_Group_1_0(lastRuleCallOrigin, this, 2, inst);
			default: return null;
		}	
	}

}

// LabelColor+=ColorArray ("," LabelColor+=ColorArray)* "]"
protected class Group_Group_1_3_1 extends GroupToken {
	
	public Group_Group_1_3_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getGroupAccess().getGroup_1_3_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Group_RightSquareBracketKeyword_1_3_1_2(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// LabelColor+=ColorArray
protected class Group_LabelColorAssignment_1_3_1_0 extends AssignmentToken  {
	
	public Group_LabelColorAssignment_1_3_1_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getGroupAccess().getLabelColorAssignment_1_3_1_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ColorArray_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("LabelColor",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("LabelColor");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getColorArrayRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getGroupAccess().getLabelColorColorArrayParserRuleCall_1_3_1_0_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new Group_LabelcolorKeyword_1_3_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// ("," LabelColor+=ColorArray)*
protected class Group_Group_1_3_1_1 extends GroupToken {
	
	public Group_Group_1_3_1_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getGroupAccess().getGroup_1_3_1_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Group_LabelColorAssignment_1_3_1_1_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// ","
protected class Group_CommaKeyword_1_3_1_1_0 extends KeywordToken  {
	
	public Group_CommaKeyword_1_3_1_1_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getGroupAccess().getCommaKeyword_1_3_1_1_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Group_Group_1_3_1_1(lastRuleCallOrigin, this, 0, inst);
			case 1: return new Group_LabelColorAssignment_1_3_1_0(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// LabelColor+=ColorArray
protected class Group_LabelColorAssignment_1_3_1_1_1 extends AssignmentToken  {
	
	public Group_LabelColorAssignment_1_3_1_1_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getGroupAccess().getLabelColorAssignment_1_3_1_1_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ColorArray_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("LabelColor",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("LabelColor");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getColorArrayRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getGroupAccess().getLabelColorColorArrayParserRuleCall_1_3_1_1_1_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new Group_CommaKeyword_1_3_1_1_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}


// "]"
protected class Group_RightSquareBracketKeyword_1_3_1_2 extends KeywordToken  {
	
	public Group_RightSquareBracketKeyword_1_3_1_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getGroupAccess().getRightSquareBracketKeyword_1_3_1_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Group_Group_1_3_1_1(lastRuleCallOrigin, this, 0, inst);
			case 1: return new Group_LabelColorAssignment_1_3_1_0(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}



// ("valuecolor=[" (ValueColor+=ColorArray ("," ValueColor+=ColorArray)* "]"))?
protected class Group_Group_1_4 extends GroupToken {
	
	public Group_Group_1_4(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getGroupAccess().getGroup_1_4();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Group_Group_1_4_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "valuecolor=["
protected class Group_ValuecolorKeyword_1_4_0 extends KeywordToken  {
	
	public Group_ValuecolorKeyword_1_4_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getGroupAccess().getValuecolorKeyword_1_4_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Group_Group_1_3(lastRuleCallOrigin, this, 0, inst);
			case 1: return new Group_Group_1_2(lastRuleCallOrigin, this, 1, inst);
			case 2: return new Group_Group_1_1(lastRuleCallOrigin, this, 2, inst);
			case 3: return new Group_Group_1_0(lastRuleCallOrigin, this, 3, inst);
			default: return null;
		}	
	}

}

// ValueColor+=ColorArray ("," ValueColor+=ColorArray)* "]"
protected class Group_Group_1_4_1 extends GroupToken {
	
	public Group_Group_1_4_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getGroupAccess().getGroup_1_4_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Group_RightSquareBracketKeyword_1_4_1_2(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// ValueColor+=ColorArray
protected class Group_ValueColorAssignment_1_4_1_0 extends AssignmentToken  {
	
	public Group_ValueColorAssignment_1_4_1_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getGroupAccess().getValueColorAssignment_1_4_1_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ColorArray_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("ValueColor",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("ValueColor");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getColorArrayRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getGroupAccess().getValueColorColorArrayParserRuleCall_1_4_1_0_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new Group_ValuecolorKeyword_1_4_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// ("," ValueColor+=ColorArray)*
protected class Group_Group_1_4_1_1 extends GroupToken {
	
	public Group_Group_1_4_1_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getGroupAccess().getGroup_1_4_1_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Group_ValueColorAssignment_1_4_1_1_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// ","
protected class Group_CommaKeyword_1_4_1_1_0 extends KeywordToken  {
	
	public Group_CommaKeyword_1_4_1_1_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getGroupAccess().getCommaKeyword_1_4_1_1_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Group_Group_1_4_1_1(lastRuleCallOrigin, this, 0, inst);
			case 1: return new Group_ValueColorAssignment_1_4_1_0(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// ValueColor+=ColorArray
protected class Group_ValueColorAssignment_1_4_1_1_1 extends AssignmentToken  {
	
	public Group_ValueColorAssignment_1_4_1_1_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getGroupAccess().getValueColorAssignment_1_4_1_1_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ColorArray_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("ValueColor",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("ValueColor");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getColorArrayRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getGroupAccess().getValueColorColorArrayParserRuleCall_1_4_1_1_1_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new Group_CommaKeyword_1_4_1_1_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}


// "]"
protected class Group_RightSquareBracketKeyword_1_4_1_2 extends KeywordToken  {
	
	public Group_RightSquareBracketKeyword_1_4_1_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getGroupAccess().getRightSquareBracketKeyword_1_4_1_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Group_Group_1_4_1_1(lastRuleCallOrigin, this, 0, inst);
			case 1: return new Group_ValueColorAssignment_1_4_1_0(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}



// ("visibility=[" (Visibility+=VisibilityRule ("," Visibility+=VisibilityRule)* "]"))?
protected class Group_Group_1_5 extends GroupToken {
	
	public Group_Group_1_5(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getGroupAccess().getGroup_1_5();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Group_Group_1_5_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "visibility=["
protected class Group_VisibilityKeyword_1_5_0 extends KeywordToken  {
	
	public Group_VisibilityKeyword_1_5_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getGroupAccess().getVisibilityKeyword_1_5_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Group_Group_1_4(lastRuleCallOrigin, this, 0, inst);
			case 1: return new Group_Group_1_3(lastRuleCallOrigin, this, 1, inst);
			case 2: return new Group_Group_1_2(lastRuleCallOrigin, this, 2, inst);
			case 3: return new Group_Group_1_1(lastRuleCallOrigin, this, 3, inst);
			case 4: return new Group_Group_1_0(lastRuleCallOrigin, this, 4, inst);
			default: return null;
		}	
	}

}

// Visibility+=VisibilityRule ("," Visibility+=VisibilityRule)* "]"
protected class Group_Group_1_5_1 extends GroupToken {
	
	public Group_Group_1_5_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getGroupAccess().getGroup_1_5_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Group_RightSquareBracketKeyword_1_5_1_2(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// Visibility+=VisibilityRule
protected class Group_VisibilityAssignment_1_5_1_0 extends AssignmentToken  {
	
	public Group_VisibilityAssignment_1_5_1_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getGroupAccess().getVisibilityAssignment_1_5_1_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new VisibilityRule_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("Visibility",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("Visibility");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getVisibilityRuleRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getGroupAccess().getVisibilityVisibilityRuleParserRuleCall_1_5_1_0_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new Group_VisibilityKeyword_1_5_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// ("," Visibility+=VisibilityRule)*
protected class Group_Group_1_5_1_1 extends GroupToken {
	
	public Group_Group_1_5_1_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getGroupAccess().getGroup_1_5_1_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Group_VisibilityAssignment_1_5_1_1_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// ","
protected class Group_CommaKeyword_1_5_1_1_0 extends KeywordToken  {
	
	public Group_CommaKeyword_1_5_1_1_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getGroupAccess().getCommaKeyword_1_5_1_1_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Group_Group_1_5_1_1(lastRuleCallOrigin, this, 0, inst);
			case 1: return new Group_VisibilityAssignment_1_5_1_0(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// Visibility+=VisibilityRule
protected class Group_VisibilityAssignment_1_5_1_1_1 extends AssignmentToken  {
	
	public Group_VisibilityAssignment_1_5_1_1_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getGroupAccess().getVisibilityAssignment_1_5_1_1_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new VisibilityRule_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("Visibility",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("Visibility");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getVisibilityRuleRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getGroupAccess().getVisibilityVisibilityRuleParserRuleCall_1_5_1_1_1_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new Group_CommaKeyword_1_5_1_1_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}


// "]"
protected class Group_RightSquareBracketKeyword_1_5_1_2 extends KeywordToken  {
	
	public Group_RightSquareBracketKeyword_1_5_1_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getGroupAccess().getRightSquareBracketKeyword_1_5_1_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Group_Group_1_5_1_1(lastRuleCallOrigin, this, 0, inst);
			case 1: return new Group_VisibilityAssignment_1_5_1_0(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}





/************ end Rule Group ****************/


/************ begin Rule Image ****************
 *
 * Image:
 * 
 * 	"Image" (("item=" item=ItemRef)? & ("label=" label=(ID | STRING))? & ("icon=" icon=Icon)? & "url=" url=STRING &
 * 
 * 	("refresh=" refresh=INT)? & ("labelcolor=[" (LabelColor+=ColorArray ("," LabelColor+=ColorArray)* "]"))? &
 * 
 * 	("valuecolor=[" (ValueColor+=ColorArray ("," ValueColor+=ColorArray)* "]"))? & ("iconcolor=[" (IconColor+=ColorArray
 * 
 * 	("," IconColor+=ColorArray)* "]"))? & ("visibility=[" (Visibility+=VisibilityRule ("," Visibility+=VisibilityRule)*
 * 
 * 	"]"))?);
 *
 **/

// "Image" (("item=" item=ItemRef)? & ("label=" label=(ID | STRING))? & ("icon=" icon=Icon)? & "url=" url=STRING &
// 
// ("refresh=" refresh=INT)? & ("labelcolor=[" (LabelColor+=ColorArray ("," LabelColor+=ColorArray)* "]"))? &
// 
// ("valuecolor=[" (ValueColor+=ColorArray ("," ValueColor+=ColorArray)* "]"))? & ("iconcolor=[" (IconColor+=ColorArray
// 
// ("," IconColor+=ColorArray)* "]"))? & ("visibility=[" (Visibility+=VisibilityRule ("," Visibility+=VisibilityRule)*
// 
// "]"))?)
protected class Image_Group extends GroupToken {
	
	public Image_Group(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getImageAccess().getGroup();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Image_UnorderedGroup_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getImageRule().getType().getClassifier())
			return null;
		return eObjectConsumer;
	}

}

// "Image"
protected class Image_ImageKeyword_0 extends KeywordToken  {
	
	public Image_ImageKeyword_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getImageAccess().getImageKeyword_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

}

// ("item=" item=ItemRef)? & ("label=" label=(ID | STRING))? & ("icon=" icon=Icon)? & "url=" url=STRING & ("refresh="
// 
// refresh=INT)? & ("labelcolor=[" (LabelColor+=ColorArray ("," LabelColor+=ColorArray)* "]"))? & ("valuecolor=["
// 
// (ValueColor+=ColorArray ("," ValueColor+=ColorArray)* "]"))? & ("iconcolor=[" (IconColor+=ColorArray (","
// 
// IconColor+=ColorArray)* "]"))? & ("visibility=[" (Visibility+=VisibilityRule ("," Visibility+=VisibilityRule)* "]"))?
protected class Image_UnorderedGroup_1 extends UnorderedGroupToken {
	
	public Image_UnorderedGroup_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public UnorderedGroup getGrammarElement() {
		return grammarAccess.getImageAccess().getUnorderedGroup_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Image_Group_1_8(lastRuleCallOrigin, this, 0, inst);
			case 1: return new Image_Group_1_7(lastRuleCallOrigin, this, 1, inst);
			case 2: return new Image_Group_1_6(lastRuleCallOrigin, this, 2, inst);
			case 3: return new Image_Group_1_5(lastRuleCallOrigin, this, 3, inst);
			case 4: return new Image_Group_1_4(lastRuleCallOrigin, this, 4, inst);
			case 5: return new Image_Group_1_3(lastRuleCallOrigin, this, 5, inst);
			default: return null;
		}	
	}

}

// ("item=" item=ItemRef)?
protected class Image_Group_1_0 extends GroupToken {
	
	public Image_Group_1_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getImageAccess().getGroup_1_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Image_ItemAssignment_1_0_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "item="
protected class Image_ItemKeyword_1_0_0 extends KeywordToken  {
	
	public Image_ItemKeyword_1_0_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getImageAccess().getItemKeyword_1_0_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Image_ImageKeyword_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// item=ItemRef
protected class Image_ItemAssignment_1_0_1 extends AssignmentToken  {
	
	public Image_ItemAssignment_1_0_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getImageAccess().getItemAssignment_1_0_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Image_ItemKeyword_1_0_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("item",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("item");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getImageAccess().getItemItemRefParserRuleCall_1_0_1_0(), value, null)) {
			type = AssignmentType.DATATYPE_RULE_CALL;
			element = grammarAccess.getImageAccess().getItemItemRefParserRuleCall_1_0_1_0();
			return obj;
		}
		return null;
	}

}


// ("label=" label=(ID | STRING))?
protected class Image_Group_1_1 extends GroupToken {
	
	public Image_Group_1_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getImageAccess().getGroup_1_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Image_LabelAssignment_1_1_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "label="
protected class Image_LabelKeyword_1_1_0 extends KeywordToken  {
	
	public Image_LabelKeyword_1_1_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getImageAccess().getLabelKeyword_1_1_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Image_Group_1_0(lastRuleCallOrigin, this, 0, inst);
			case 1: return new Image_ImageKeyword_0(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// label=(ID | STRING)
protected class Image_LabelAssignment_1_1_1 extends AssignmentToken  {
	
	public Image_LabelAssignment_1_1_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getImageAccess().getLabelAssignment_1_1_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Image_LabelKeyword_1_1_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("label",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("label");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getImageAccess().getLabelIDTerminalRuleCall_1_1_1_0_0(), value, null)) {
			type = AssignmentType.TERMINAL_RULE_CALL;
			element = grammarAccess.getImageAccess().getLabelIDTerminalRuleCall_1_1_1_0_0();
			return obj;
		}
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getImageAccess().getLabelSTRINGTerminalRuleCall_1_1_1_0_1(), value, null)) {
			type = AssignmentType.TERMINAL_RULE_CALL;
			element = grammarAccess.getImageAccess().getLabelSTRINGTerminalRuleCall_1_1_1_0_1();
			return obj;
		}
		return null;
	}

}


// ("icon=" icon=Icon)?
protected class Image_Group_1_2 extends GroupToken {
	
	public Image_Group_1_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getImageAccess().getGroup_1_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Image_IconAssignment_1_2_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "icon="
protected class Image_IconKeyword_1_2_0 extends KeywordToken  {
	
	public Image_IconKeyword_1_2_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getImageAccess().getIconKeyword_1_2_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Image_Group_1_1(lastRuleCallOrigin, this, 0, inst);
			case 1: return new Image_Group_1_0(lastRuleCallOrigin, this, 1, inst);
			case 2: return new Image_ImageKeyword_0(lastRuleCallOrigin, this, 2, inst);
			default: return null;
		}	
	}

}

// icon=Icon
protected class Image_IconAssignment_1_2_1 extends AssignmentToken  {
	
	public Image_IconAssignment_1_2_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getImageAccess().getIconAssignment_1_2_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Image_IconKeyword_1_2_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("icon",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("icon");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getImageAccess().getIconIconParserRuleCall_1_2_1_0(), value, null)) {
			type = AssignmentType.DATATYPE_RULE_CALL;
			element = grammarAccess.getImageAccess().getIconIconParserRuleCall_1_2_1_0();
			return obj;
		}
		return null;
	}

}


// "url=" url=STRING
protected class Image_Group_1_3 extends GroupToken {
	
	public Image_Group_1_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getImageAccess().getGroup_1_3();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Image_UrlAssignment_1_3_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "url="
protected class Image_UrlKeyword_1_3_0 extends KeywordToken  {
	
	public Image_UrlKeyword_1_3_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getImageAccess().getUrlKeyword_1_3_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Image_Group_1_2(lastRuleCallOrigin, this, 0, inst);
			case 1: return new Image_Group_1_1(lastRuleCallOrigin, this, 1, inst);
			case 2: return new Image_Group_1_0(lastRuleCallOrigin, this, 2, inst);
			case 3: return new Image_ImageKeyword_0(lastRuleCallOrigin, this, 3, inst);
			default: return null;
		}	
	}

}

// url=STRING
protected class Image_UrlAssignment_1_3_1 extends AssignmentToken  {
	
	public Image_UrlAssignment_1_3_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getImageAccess().getUrlAssignment_1_3_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Image_UrlKeyword_1_3_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("url",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("url");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getImageAccess().getUrlSTRINGTerminalRuleCall_1_3_1_0(), value, null)) {
			type = AssignmentType.TERMINAL_RULE_CALL;
			element = grammarAccess.getImageAccess().getUrlSTRINGTerminalRuleCall_1_3_1_0();
			return obj;
		}
		return null;
	}

}


// ("refresh=" refresh=INT)?
protected class Image_Group_1_4 extends GroupToken {
	
	public Image_Group_1_4(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getImageAccess().getGroup_1_4();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Image_RefreshAssignment_1_4_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "refresh="
protected class Image_RefreshKeyword_1_4_0 extends KeywordToken  {
	
	public Image_RefreshKeyword_1_4_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getImageAccess().getRefreshKeyword_1_4_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Image_Group_1_3(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// refresh=INT
protected class Image_RefreshAssignment_1_4_1 extends AssignmentToken  {
	
	public Image_RefreshAssignment_1_4_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getImageAccess().getRefreshAssignment_1_4_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Image_RefreshKeyword_1_4_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("refresh",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("refresh");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getImageAccess().getRefreshINTTerminalRuleCall_1_4_1_0(), value, null)) {
			type = AssignmentType.TERMINAL_RULE_CALL;
			element = grammarAccess.getImageAccess().getRefreshINTTerminalRuleCall_1_4_1_0();
			return obj;
		}
		return null;
	}

}


// ("labelcolor=[" (LabelColor+=ColorArray ("," LabelColor+=ColorArray)* "]"))?
protected class Image_Group_1_5 extends GroupToken {
	
	public Image_Group_1_5(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getImageAccess().getGroup_1_5();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Image_Group_1_5_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "labelcolor=["
protected class Image_LabelcolorKeyword_1_5_0 extends KeywordToken  {
	
	public Image_LabelcolorKeyword_1_5_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getImageAccess().getLabelcolorKeyword_1_5_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Image_Group_1_4(lastRuleCallOrigin, this, 0, inst);
			case 1: return new Image_Group_1_3(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// LabelColor+=ColorArray ("," LabelColor+=ColorArray)* "]"
protected class Image_Group_1_5_1 extends GroupToken {
	
	public Image_Group_1_5_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getImageAccess().getGroup_1_5_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Image_RightSquareBracketKeyword_1_5_1_2(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// LabelColor+=ColorArray
protected class Image_LabelColorAssignment_1_5_1_0 extends AssignmentToken  {
	
	public Image_LabelColorAssignment_1_5_1_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getImageAccess().getLabelColorAssignment_1_5_1_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ColorArray_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("LabelColor",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("LabelColor");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getColorArrayRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getImageAccess().getLabelColorColorArrayParserRuleCall_1_5_1_0_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new Image_LabelcolorKeyword_1_5_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// ("," LabelColor+=ColorArray)*
protected class Image_Group_1_5_1_1 extends GroupToken {
	
	public Image_Group_1_5_1_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getImageAccess().getGroup_1_5_1_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Image_LabelColorAssignment_1_5_1_1_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// ","
protected class Image_CommaKeyword_1_5_1_1_0 extends KeywordToken  {
	
	public Image_CommaKeyword_1_5_1_1_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getImageAccess().getCommaKeyword_1_5_1_1_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Image_Group_1_5_1_1(lastRuleCallOrigin, this, 0, inst);
			case 1: return new Image_LabelColorAssignment_1_5_1_0(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// LabelColor+=ColorArray
protected class Image_LabelColorAssignment_1_5_1_1_1 extends AssignmentToken  {
	
	public Image_LabelColorAssignment_1_5_1_1_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getImageAccess().getLabelColorAssignment_1_5_1_1_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ColorArray_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("LabelColor",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("LabelColor");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getColorArrayRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getImageAccess().getLabelColorColorArrayParserRuleCall_1_5_1_1_1_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new Image_CommaKeyword_1_5_1_1_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}


// "]"
protected class Image_RightSquareBracketKeyword_1_5_1_2 extends KeywordToken  {
	
	public Image_RightSquareBracketKeyword_1_5_1_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getImageAccess().getRightSquareBracketKeyword_1_5_1_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Image_Group_1_5_1_1(lastRuleCallOrigin, this, 0, inst);
			case 1: return new Image_LabelColorAssignment_1_5_1_0(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}



// ("valuecolor=[" (ValueColor+=ColorArray ("," ValueColor+=ColorArray)* "]"))?
protected class Image_Group_1_6 extends GroupToken {
	
	public Image_Group_1_6(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getImageAccess().getGroup_1_6();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Image_Group_1_6_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "valuecolor=["
protected class Image_ValuecolorKeyword_1_6_0 extends KeywordToken  {
	
	public Image_ValuecolorKeyword_1_6_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getImageAccess().getValuecolorKeyword_1_6_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Image_Group_1_5(lastRuleCallOrigin, this, 0, inst);
			case 1: return new Image_Group_1_4(lastRuleCallOrigin, this, 1, inst);
			case 2: return new Image_Group_1_3(lastRuleCallOrigin, this, 2, inst);
			default: return null;
		}	
	}

}

// ValueColor+=ColorArray ("," ValueColor+=ColorArray)* "]"
protected class Image_Group_1_6_1 extends GroupToken {
	
	public Image_Group_1_6_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getImageAccess().getGroup_1_6_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Image_RightSquareBracketKeyword_1_6_1_2(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// ValueColor+=ColorArray
protected class Image_ValueColorAssignment_1_6_1_0 extends AssignmentToken  {
	
	public Image_ValueColorAssignment_1_6_1_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getImageAccess().getValueColorAssignment_1_6_1_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ColorArray_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("ValueColor",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("ValueColor");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getColorArrayRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getImageAccess().getValueColorColorArrayParserRuleCall_1_6_1_0_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new Image_ValuecolorKeyword_1_6_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// ("," ValueColor+=ColorArray)*
protected class Image_Group_1_6_1_1 extends GroupToken {
	
	public Image_Group_1_6_1_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getImageAccess().getGroup_1_6_1_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Image_ValueColorAssignment_1_6_1_1_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// ","
protected class Image_CommaKeyword_1_6_1_1_0 extends KeywordToken  {
	
	public Image_CommaKeyword_1_6_1_1_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getImageAccess().getCommaKeyword_1_6_1_1_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Image_Group_1_6_1_1(lastRuleCallOrigin, this, 0, inst);
			case 1: return new Image_ValueColorAssignment_1_6_1_0(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// ValueColor+=ColorArray
protected class Image_ValueColorAssignment_1_6_1_1_1 extends AssignmentToken  {
	
	public Image_ValueColorAssignment_1_6_1_1_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getImageAccess().getValueColorAssignment_1_6_1_1_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ColorArray_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("ValueColor",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("ValueColor");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getColorArrayRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getImageAccess().getValueColorColorArrayParserRuleCall_1_6_1_1_1_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new Image_CommaKeyword_1_6_1_1_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}


// "]"
protected class Image_RightSquareBracketKeyword_1_6_1_2 extends KeywordToken  {
	
	public Image_RightSquareBracketKeyword_1_6_1_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getImageAccess().getRightSquareBracketKeyword_1_6_1_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Image_Group_1_6_1_1(lastRuleCallOrigin, this, 0, inst);
			case 1: return new Image_ValueColorAssignment_1_6_1_0(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}



// ("iconcolor=[" (IconColor+=ColorArray ("," IconColor+=ColorArray)* "]"))?
protected class Image_Group_1_7 extends GroupToken {
	
	public Image_Group_1_7(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getImageAccess().getGroup_1_7();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Image_Group_1_7_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "iconcolor=["
protected class Image_IconcolorKeyword_1_7_0 extends KeywordToken  {
	
	public Image_IconcolorKeyword_1_7_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getImageAccess().getIconcolorKeyword_1_7_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Image_Group_1_6(lastRuleCallOrigin, this, 0, inst);
			case 1: return new Image_Group_1_5(lastRuleCallOrigin, this, 1, inst);
			case 2: return new Image_Group_1_4(lastRuleCallOrigin, this, 2, inst);
			case 3: return new Image_Group_1_3(lastRuleCallOrigin, this, 3, inst);
			default: return null;
		}	
	}

}

// IconColor+=ColorArray ("," IconColor+=ColorArray)* "]"
protected class Image_Group_1_7_1 extends GroupToken {
	
	public Image_Group_1_7_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getImageAccess().getGroup_1_7_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Image_RightSquareBracketKeyword_1_7_1_2(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// IconColor+=ColorArray
protected class Image_IconColorAssignment_1_7_1_0 extends AssignmentToken  {
	
	public Image_IconColorAssignment_1_7_1_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getImageAccess().getIconColorAssignment_1_7_1_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ColorArray_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("IconColor",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("IconColor");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getColorArrayRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getImageAccess().getIconColorColorArrayParserRuleCall_1_7_1_0_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new Image_IconcolorKeyword_1_7_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// ("," IconColor+=ColorArray)*
protected class Image_Group_1_7_1_1 extends GroupToken {
	
	public Image_Group_1_7_1_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getImageAccess().getGroup_1_7_1_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Image_IconColorAssignment_1_7_1_1_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// ","
protected class Image_CommaKeyword_1_7_1_1_0 extends KeywordToken  {
	
	public Image_CommaKeyword_1_7_1_1_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getImageAccess().getCommaKeyword_1_7_1_1_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Image_Group_1_7_1_1(lastRuleCallOrigin, this, 0, inst);
			case 1: return new Image_IconColorAssignment_1_7_1_0(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// IconColor+=ColorArray
protected class Image_IconColorAssignment_1_7_1_1_1 extends AssignmentToken  {
	
	public Image_IconColorAssignment_1_7_1_1_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getImageAccess().getIconColorAssignment_1_7_1_1_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ColorArray_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("IconColor",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("IconColor");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getColorArrayRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getImageAccess().getIconColorColorArrayParserRuleCall_1_7_1_1_1_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new Image_CommaKeyword_1_7_1_1_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}


// "]"
protected class Image_RightSquareBracketKeyword_1_7_1_2 extends KeywordToken  {
	
	public Image_RightSquareBracketKeyword_1_7_1_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getImageAccess().getRightSquareBracketKeyword_1_7_1_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Image_Group_1_7_1_1(lastRuleCallOrigin, this, 0, inst);
			case 1: return new Image_IconColorAssignment_1_7_1_0(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}



// ("visibility=[" (Visibility+=VisibilityRule ("," Visibility+=VisibilityRule)* "]"))?
protected class Image_Group_1_8 extends GroupToken {
	
	public Image_Group_1_8(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getImageAccess().getGroup_1_8();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Image_Group_1_8_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "visibility=["
protected class Image_VisibilityKeyword_1_8_0 extends KeywordToken  {
	
	public Image_VisibilityKeyword_1_8_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getImageAccess().getVisibilityKeyword_1_8_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Image_Group_1_7(lastRuleCallOrigin, this, 0, inst);
			case 1: return new Image_Group_1_6(lastRuleCallOrigin, this, 1, inst);
			case 2: return new Image_Group_1_5(lastRuleCallOrigin, this, 2, inst);
			case 3: return new Image_Group_1_4(lastRuleCallOrigin, this, 3, inst);
			case 4: return new Image_Group_1_3(lastRuleCallOrigin, this, 4, inst);
			default: return null;
		}	
	}

}

// Visibility+=VisibilityRule ("," Visibility+=VisibilityRule)* "]"
protected class Image_Group_1_8_1 extends GroupToken {
	
	public Image_Group_1_8_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getImageAccess().getGroup_1_8_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Image_RightSquareBracketKeyword_1_8_1_2(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// Visibility+=VisibilityRule
protected class Image_VisibilityAssignment_1_8_1_0 extends AssignmentToken  {
	
	public Image_VisibilityAssignment_1_8_1_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getImageAccess().getVisibilityAssignment_1_8_1_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new VisibilityRule_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("Visibility",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("Visibility");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getVisibilityRuleRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getImageAccess().getVisibilityVisibilityRuleParserRuleCall_1_8_1_0_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new Image_VisibilityKeyword_1_8_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// ("," Visibility+=VisibilityRule)*
protected class Image_Group_1_8_1_1 extends GroupToken {
	
	public Image_Group_1_8_1_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getImageAccess().getGroup_1_8_1_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Image_VisibilityAssignment_1_8_1_1_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// ","
protected class Image_CommaKeyword_1_8_1_1_0 extends KeywordToken  {
	
	public Image_CommaKeyword_1_8_1_1_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getImageAccess().getCommaKeyword_1_8_1_1_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Image_Group_1_8_1_1(lastRuleCallOrigin, this, 0, inst);
			case 1: return new Image_VisibilityAssignment_1_8_1_0(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// Visibility+=VisibilityRule
protected class Image_VisibilityAssignment_1_8_1_1_1 extends AssignmentToken  {
	
	public Image_VisibilityAssignment_1_8_1_1_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getImageAccess().getVisibilityAssignment_1_8_1_1_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new VisibilityRule_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("Visibility",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("Visibility");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getVisibilityRuleRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getImageAccess().getVisibilityVisibilityRuleParserRuleCall_1_8_1_1_1_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new Image_CommaKeyword_1_8_1_1_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}


// "]"
protected class Image_RightSquareBracketKeyword_1_8_1_2 extends KeywordToken  {
	
	public Image_RightSquareBracketKeyword_1_8_1_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getImageAccess().getRightSquareBracketKeyword_1_8_1_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Image_Group_1_8_1_1(lastRuleCallOrigin, this, 0, inst);
			case 1: return new Image_VisibilityAssignment_1_8_1_0(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}





/************ end Rule Image ****************/


/************ begin Rule Video ****************
 *
 * Video:
 * 
 * 	"Video" (("item=" item=ItemRef)? & ("label=" label=(ID | STRING))? & ("icon=" icon=Icon)? & "url=" url=STRING &
 * 
 * 	("encoding=" encoding=STRING)? & ("labelcolor=[" (LabelColor+=ColorArray ("," LabelColor+=ColorArray)* "]"))? &
 * 
 * 	("valuecolor=[" (ValueColor+=ColorArray ("," ValueColor+=ColorArray)* "]"))? & ("visibility=["
 * 
 * 	(Visibility+=VisibilityRule ("," Visibility+=VisibilityRule)* "]"))?);
 *
 **/

// "Video" (("item=" item=ItemRef)? & ("label=" label=(ID | STRING))? & ("icon=" icon=Icon)? & "url=" url=STRING &
// 
// ("encoding=" encoding=STRING)? & ("labelcolor=[" (LabelColor+=ColorArray ("," LabelColor+=ColorArray)* "]"))? &
// 
// ("valuecolor=[" (ValueColor+=ColorArray ("," ValueColor+=ColorArray)* "]"))? & ("visibility=["
// 
// (Visibility+=VisibilityRule ("," Visibility+=VisibilityRule)* "]"))?)
protected class Video_Group extends GroupToken {
	
	public Video_Group(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getVideoAccess().getGroup();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Video_UnorderedGroup_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getVideoRule().getType().getClassifier())
			return null;
		return eObjectConsumer;
	}

}

// "Video"
protected class Video_VideoKeyword_0 extends KeywordToken  {
	
	public Video_VideoKeyword_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getVideoAccess().getVideoKeyword_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

}

// ("item=" item=ItemRef)? & ("label=" label=(ID | STRING))? & ("icon=" icon=Icon)? & "url=" url=STRING & ("encoding="
// 
// encoding=STRING)? & ("labelcolor=[" (LabelColor+=ColorArray ("," LabelColor+=ColorArray)* "]"))? & ("valuecolor=["
// 
// (ValueColor+=ColorArray ("," ValueColor+=ColorArray)* "]"))? & ("visibility=[" (Visibility+=VisibilityRule (","
// 
// Visibility+=VisibilityRule)* "]"))?
protected class Video_UnorderedGroup_1 extends UnorderedGroupToken {
	
	public Video_UnorderedGroup_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public UnorderedGroup getGrammarElement() {
		return grammarAccess.getVideoAccess().getUnorderedGroup_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Video_Group_1_7(lastRuleCallOrigin, this, 0, inst);
			case 1: return new Video_Group_1_6(lastRuleCallOrigin, this, 1, inst);
			case 2: return new Video_Group_1_5(lastRuleCallOrigin, this, 2, inst);
			case 3: return new Video_Group_1_4(lastRuleCallOrigin, this, 3, inst);
			case 4: return new Video_Group_1_3(lastRuleCallOrigin, this, 4, inst);
			default: return null;
		}	
	}

}

// ("item=" item=ItemRef)?
protected class Video_Group_1_0 extends GroupToken {
	
	public Video_Group_1_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getVideoAccess().getGroup_1_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Video_ItemAssignment_1_0_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "item="
protected class Video_ItemKeyword_1_0_0 extends KeywordToken  {
	
	public Video_ItemKeyword_1_0_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getVideoAccess().getItemKeyword_1_0_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Video_VideoKeyword_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// item=ItemRef
protected class Video_ItemAssignment_1_0_1 extends AssignmentToken  {
	
	public Video_ItemAssignment_1_0_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getVideoAccess().getItemAssignment_1_0_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Video_ItemKeyword_1_0_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("item",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("item");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getVideoAccess().getItemItemRefParserRuleCall_1_0_1_0(), value, null)) {
			type = AssignmentType.DATATYPE_RULE_CALL;
			element = grammarAccess.getVideoAccess().getItemItemRefParserRuleCall_1_0_1_0();
			return obj;
		}
		return null;
	}

}


// ("label=" label=(ID | STRING))?
protected class Video_Group_1_1 extends GroupToken {
	
	public Video_Group_1_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getVideoAccess().getGroup_1_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Video_LabelAssignment_1_1_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "label="
protected class Video_LabelKeyword_1_1_0 extends KeywordToken  {
	
	public Video_LabelKeyword_1_1_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getVideoAccess().getLabelKeyword_1_1_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Video_Group_1_0(lastRuleCallOrigin, this, 0, inst);
			case 1: return new Video_VideoKeyword_0(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// label=(ID | STRING)
protected class Video_LabelAssignment_1_1_1 extends AssignmentToken  {
	
	public Video_LabelAssignment_1_1_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getVideoAccess().getLabelAssignment_1_1_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Video_LabelKeyword_1_1_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("label",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("label");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getVideoAccess().getLabelIDTerminalRuleCall_1_1_1_0_0(), value, null)) {
			type = AssignmentType.TERMINAL_RULE_CALL;
			element = grammarAccess.getVideoAccess().getLabelIDTerminalRuleCall_1_1_1_0_0();
			return obj;
		}
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getVideoAccess().getLabelSTRINGTerminalRuleCall_1_1_1_0_1(), value, null)) {
			type = AssignmentType.TERMINAL_RULE_CALL;
			element = grammarAccess.getVideoAccess().getLabelSTRINGTerminalRuleCall_1_1_1_0_1();
			return obj;
		}
		return null;
	}

}


// ("icon=" icon=Icon)?
protected class Video_Group_1_2 extends GroupToken {
	
	public Video_Group_1_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getVideoAccess().getGroup_1_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Video_IconAssignment_1_2_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "icon="
protected class Video_IconKeyword_1_2_0 extends KeywordToken  {
	
	public Video_IconKeyword_1_2_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getVideoAccess().getIconKeyword_1_2_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Video_Group_1_1(lastRuleCallOrigin, this, 0, inst);
			case 1: return new Video_Group_1_0(lastRuleCallOrigin, this, 1, inst);
			case 2: return new Video_VideoKeyword_0(lastRuleCallOrigin, this, 2, inst);
			default: return null;
		}	
	}

}

// icon=Icon
protected class Video_IconAssignment_1_2_1 extends AssignmentToken  {
	
	public Video_IconAssignment_1_2_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getVideoAccess().getIconAssignment_1_2_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Video_IconKeyword_1_2_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("icon",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("icon");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getVideoAccess().getIconIconParserRuleCall_1_2_1_0(), value, null)) {
			type = AssignmentType.DATATYPE_RULE_CALL;
			element = grammarAccess.getVideoAccess().getIconIconParserRuleCall_1_2_1_0();
			return obj;
		}
		return null;
	}

}


// "url=" url=STRING
protected class Video_Group_1_3 extends GroupToken {
	
	public Video_Group_1_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getVideoAccess().getGroup_1_3();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Video_UrlAssignment_1_3_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "url="
protected class Video_UrlKeyword_1_3_0 extends KeywordToken  {
	
	public Video_UrlKeyword_1_3_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getVideoAccess().getUrlKeyword_1_3_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Video_Group_1_2(lastRuleCallOrigin, this, 0, inst);
			case 1: return new Video_Group_1_1(lastRuleCallOrigin, this, 1, inst);
			case 2: return new Video_Group_1_0(lastRuleCallOrigin, this, 2, inst);
			case 3: return new Video_VideoKeyword_0(lastRuleCallOrigin, this, 3, inst);
			default: return null;
		}	
	}

}

// url=STRING
protected class Video_UrlAssignment_1_3_1 extends AssignmentToken  {
	
	public Video_UrlAssignment_1_3_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getVideoAccess().getUrlAssignment_1_3_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Video_UrlKeyword_1_3_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("url",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("url");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getVideoAccess().getUrlSTRINGTerminalRuleCall_1_3_1_0(), value, null)) {
			type = AssignmentType.TERMINAL_RULE_CALL;
			element = grammarAccess.getVideoAccess().getUrlSTRINGTerminalRuleCall_1_3_1_0();
			return obj;
		}
		return null;
	}

}


// ("encoding=" encoding=STRING)?
protected class Video_Group_1_4 extends GroupToken {
	
	public Video_Group_1_4(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getVideoAccess().getGroup_1_4();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Video_EncodingAssignment_1_4_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "encoding="
protected class Video_EncodingKeyword_1_4_0 extends KeywordToken  {
	
	public Video_EncodingKeyword_1_4_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getVideoAccess().getEncodingKeyword_1_4_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Video_Group_1_3(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// encoding=STRING
protected class Video_EncodingAssignment_1_4_1 extends AssignmentToken  {
	
	public Video_EncodingAssignment_1_4_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getVideoAccess().getEncodingAssignment_1_4_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Video_EncodingKeyword_1_4_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("encoding",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("encoding");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getVideoAccess().getEncodingSTRINGTerminalRuleCall_1_4_1_0(), value, null)) {
			type = AssignmentType.TERMINAL_RULE_CALL;
			element = grammarAccess.getVideoAccess().getEncodingSTRINGTerminalRuleCall_1_4_1_0();
			return obj;
		}
		return null;
	}

}


// ("labelcolor=[" (LabelColor+=ColorArray ("," LabelColor+=ColorArray)* "]"))?
protected class Video_Group_1_5 extends GroupToken {
	
	public Video_Group_1_5(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getVideoAccess().getGroup_1_5();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Video_Group_1_5_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "labelcolor=["
protected class Video_LabelcolorKeyword_1_5_0 extends KeywordToken  {
	
	public Video_LabelcolorKeyword_1_5_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getVideoAccess().getLabelcolorKeyword_1_5_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Video_Group_1_4(lastRuleCallOrigin, this, 0, inst);
			case 1: return new Video_Group_1_3(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// LabelColor+=ColorArray ("," LabelColor+=ColorArray)* "]"
protected class Video_Group_1_5_1 extends GroupToken {
	
	public Video_Group_1_5_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getVideoAccess().getGroup_1_5_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Video_RightSquareBracketKeyword_1_5_1_2(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// LabelColor+=ColorArray
protected class Video_LabelColorAssignment_1_5_1_0 extends AssignmentToken  {
	
	public Video_LabelColorAssignment_1_5_1_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getVideoAccess().getLabelColorAssignment_1_5_1_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ColorArray_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("LabelColor",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("LabelColor");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getColorArrayRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getVideoAccess().getLabelColorColorArrayParserRuleCall_1_5_1_0_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new Video_LabelcolorKeyword_1_5_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// ("," LabelColor+=ColorArray)*
protected class Video_Group_1_5_1_1 extends GroupToken {
	
	public Video_Group_1_5_1_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getVideoAccess().getGroup_1_5_1_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Video_LabelColorAssignment_1_5_1_1_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// ","
protected class Video_CommaKeyword_1_5_1_1_0 extends KeywordToken  {
	
	public Video_CommaKeyword_1_5_1_1_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getVideoAccess().getCommaKeyword_1_5_1_1_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Video_Group_1_5_1_1(lastRuleCallOrigin, this, 0, inst);
			case 1: return new Video_LabelColorAssignment_1_5_1_0(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// LabelColor+=ColorArray
protected class Video_LabelColorAssignment_1_5_1_1_1 extends AssignmentToken  {
	
	public Video_LabelColorAssignment_1_5_1_1_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getVideoAccess().getLabelColorAssignment_1_5_1_1_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ColorArray_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("LabelColor",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("LabelColor");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getColorArrayRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getVideoAccess().getLabelColorColorArrayParserRuleCall_1_5_1_1_1_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new Video_CommaKeyword_1_5_1_1_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}


// "]"
protected class Video_RightSquareBracketKeyword_1_5_1_2 extends KeywordToken  {
	
	public Video_RightSquareBracketKeyword_1_5_1_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getVideoAccess().getRightSquareBracketKeyword_1_5_1_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Video_Group_1_5_1_1(lastRuleCallOrigin, this, 0, inst);
			case 1: return new Video_LabelColorAssignment_1_5_1_0(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}



// ("valuecolor=[" (ValueColor+=ColorArray ("," ValueColor+=ColorArray)* "]"))?
protected class Video_Group_1_6 extends GroupToken {
	
	public Video_Group_1_6(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getVideoAccess().getGroup_1_6();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Video_Group_1_6_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "valuecolor=["
protected class Video_ValuecolorKeyword_1_6_0 extends KeywordToken  {
	
	public Video_ValuecolorKeyword_1_6_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getVideoAccess().getValuecolorKeyword_1_6_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Video_Group_1_5(lastRuleCallOrigin, this, 0, inst);
			case 1: return new Video_Group_1_4(lastRuleCallOrigin, this, 1, inst);
			case 2: return new Video_Group_1_3(lastRuleCallOrigin, this, 2, inst);
			default: return null;
		}	
	}

}

// ValueColor+=ColorArray ("," ValueColor+=ColorArray)* "]"
protected class Video_Group_1_6_1 extends GroupToken {
	
	public Video_Group_1_6_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getVideoAccess().getGroup_1_6_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Video_RightSquareBracketKeyword_1_6_1_2(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// ValueColor+=ColorArray
protected class Video_ValueColorAssignment_1_6_1_0 extends AssignmentToken  {
	
	public Video_ValueColorAssignment_1_6_1_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getVideoAccess().getValueColorAssignment_1_6_1_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ColorArray_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("ValueColor",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("ValueColor");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getColorArrayRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getVideoAccess().getValueColorColorArrayParserRuleCall_1_6_1_0_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new Video_ValuecolorKeyword_1_6_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// ("," ValueColor+=ColorArray)*
protected class Video_Group_1_6_1_1 extends GroupToken {
	
	public Video_Group_1_6_1_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getVideoAccess().getGroup_1_6_1_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Video_ValueColorAssignment_1_6_1_1_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// ","
protected class Video_CommaKeyword_1_6_1_1_0 extends KeywordToken  {
	
	public Video_CommaKeyword_1_6_1_1_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getVideoAccess().getCommaKeyword_1_6_1_1_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Video_Group_1_6_1_1(lastRuleCallOrigin, this, 0, inst);
			case 1: return new Video_ValueColorAssignment_1_6_1_0(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// ValueColor+=ColorArray
protected class Video_ValueColorAssignment_1_6_1_1_1 extends AssignmentToken  {
	
	public Video_ValueColorAssignment_1_6_1_1_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getVideoAccess().getValueColorAssignment_1_6_1_1_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ColorArray_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("ValueColor",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("ValueColor");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getColorArrayRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getVideoAccess().getValueColorColorArrayParserRuleCall_1_6_1_1_1_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new Video_CommaKeyword_1_6_1_1_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}


// "]"
protected class Video_RightSquareBracketKeyword_1_6_1_2 extends KeywordToken  {
	
	public Video_RightSquareBracketKeyword_1_6_1_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getVideoAccess().getRightSquareBracketKeyword_1_6_1_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Video_Group_1_6_1_1(lastRuleCallOrigin, this, 0, inst);
			case 1: return new Video_ValueColorAssignment_1_6_1_0(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}



// ("visibility=[" (Visibility+=VisibilityRule ("," Visibility+=VisibilityRule)* "]"))?
protected class Video_Group_1_7 extends GroupToken {
	
	public Video_Group_1_7(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getVideoAccess().getGroup_1_7();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Video_Group_1_7_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "visibility=["
protected class Video_VisibilityKeyword_1_7_0 extends KeywordToken  {
	
	public Video_VisibilityKeyword_1_7_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getVideoAccess().getVisibilityKeyword_1_7_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Video_Group_1_6(lastRuleCallOrigin, this, 0, inst);
			case 1: return new Video_Group_1_5(lastRuleCallOrigin, this, 1, inst);
			case 2: return new Video_Group_1_4(lastRuleCallOrigin, this, 2, inst);
			case 3: return new Video_Group_1_3(lastRuleCallOrigin, this, 3, inst);
			default: return null;
		}	
	}

}

// Visibility+=VisibilityRule ("," Visibility+=VisibilityRule)* "]"
protected class Video_Group_1_7_1 extends GroupToken {
	
	public Video_Group_1_7_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getVideoAccess().getGroup_1_7_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Video_RightSquareBracketKeyword_1_7_1_2(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// Visibility+=VisibilityRule
protected class Video_VisibilityAssignment_1_7_1_0 extends AssignmentToken  {
	
	public Video_VisibilityAssignment_1_7_1_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getVideoAccess().getVisibilityAssignment_1_7_1_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new VisibilityRule_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("Visibility",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("Visibility");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getVisibilityRuleRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getVideoAccess().getVisibilityVisibilityRuleParserRuleCall_1_7_1_0_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new Video_VisibilityKeyword_1_7_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// ("," Visibility+=VisibilityRule)*
protected class Video_Group_1_7_1_1 extends GroupToken {
	
	public Video_Group_1_7_1_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getVideoAccess().getGroup_1_7_1_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Video_VisibilityAssignment_1_7_1_1_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// ","
protected class Video_CommaKeyword_1_7_1_1_0 extends KeywordToken  {
	
	public Video_CommaKeyword_1_7_1_1_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getVideoAccess().getCommaKeyword_1_7_1_1_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Video_Group_1_7_1_1(lastRuleCallOrigin, this, 0, inst);
			case 1: return new Video_VisibilityAssignment_1_7_1_0(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// Visibility+=VisibilityRule
protected class Video_VisibilityAssignment_1_7_1_1_1 extends AssignmentToken  {
	
	public Video_VisibilityAssignment_1_7_1_1_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getVideoAccess().getVisibilityAssignment_1_7_1_1_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new VisibilityRule_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("Visibility",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("Visibility");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getVisibilityRuleRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getVideoAccess().getVisibilityVisibilityRuleParserRuleCall_1_7_1_1_1_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new Video_CommaKeyword_1_7_1_1_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}


// "]"
protected class Video_RightSquareBracketKeyword_1_7_1_2 extends KeywordToken  {
	
	public Video_RightSquareBracketKeyword_1_7_1_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getVideoAccess().getRightSquareBracketKeyword_1_7_1_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Video_Group_1_7_1_1(lastRuleCallOrigin, this, 0, inst);
			case 1: return new Video_VisibilityAssignment_1_7_1_0(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}





/************ end Rule Video ****************/


/************ begin Rule Chart ****************
 *
 * Chart:
 * 
 * 	"Chart" ("item=" item=ItemRef & ("label=" label=(ID | STRING))? & ("icon=" icon=Icon)? & ("service=" service=STRING)?
 * 
 * 	& ("refresh=" refresh=INT)? & "period=" period=ID & ("labelcolor=[" (LabelColor+=ColorArray (","
 * 
 * 	LabelColor+=ColorArray)* "]"))? & ("valuecolor=[" (ValueColor+=ColorArray ("," ValueColor+=ColorArray)* "]"))? &
 * 
 * 	("visibility=[" (Visibility+=VisibilityRule ("," Visibility+=VisibilityRule)* "]"))?);
 *
 **/

// "Chart" ("item=" item=ItemRef & ("label=" label=(ID | STRING))? & ("icon=" icon=Icon)? & ("service=" service=STRING)? &
// 
// ("refresh=" refresh=INT)? & "period=" period=ID & ("labelcolor=[" (LabelColor+=ColorArray (","
// 
// LabelColor+=ColorArray)* "]"))? & ("valuecolor=[" (ValueColor+=ColorArray ("," ValueColor+=ColorArray)* "]"))? &
// 
// ("visibility=[" (Visibility+=VisibilityRule ("," Visibility+=VisibilityRule)* "]"))?)
protected class Chart_Group extends GroupToken {
	
	public Chart_Group(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getChartAccess().getGroup();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Chart_UnorderedGroup_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getChartRule().getType().getClassifier())
			return null;
		return eObjectConsumer;
	}

}

// "Chart"
protected class Chart_ChartKeyword_0 extends KeywordToken  {
	
	public Chart_ChartKeyword_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getChartAccess().getChartKeyword_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

}

// "item=" item=ItemRef & ("label=" label=(ID | STRING))? & ("icon=" icon=Icon)? & ("service=" service=STRING)? &
// 
// ("refresh=" refresh=INT)? & "period=" period=ID & ("labelcolor=[" (LabelColor+=ColorArray (","
// 
// LabelColor+=ColorArray)* "]"))? & ("valuecolor=[" (ValueColor+=ColorArray ("," ValueColor+=ColorArray)* "]"))? &
// 
// ("visibility=[" (Visibility+=VisibilityRule ("," Visibility+=VisibilityRule)* "]"))?
protected class Chart_UnorderedGroup_1 extends UnorderedGroupToken {
	
	public Chart_UnorderedGroup_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public UnorderedGroup getGrammarElement() {
		return grammarAccess.getChartAccess().getUnorderedGroup_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Chart_Group_1_8(lastRuleCallOrigin, this, 0, inst);
			case 1: return new Chart_Group_1_7(lastRuleCallOrigin, this, 1, inst);
			case 2: return new Chart_Group_1_6(lastRuleCallOrigin, this, 2, inst);
			case 3: return new Chart_Group_1_5(lastRuleCallOrigin, this, 3, inst);
			default: return null;
		}	
	}

}

// "item=" item=ItemRef
protected class Chart_Group_1_0 extends GroupToken {
	
	public Chart_Group_1_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getChartAccess().getGroup_1_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Chart_ItemAssignment_1_0_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "item="
protected class Chart_ItemKeyword_1_0_0 extends KeywordToken  {
	
	public Chart_ItemKeyword_1_0_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getChartAccess().getItemKeyword_1_0_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Chart_ChartKeyword_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// item=ItemRef
protected class Chart_ItemAssignment_1_0_1 extends AssignmentToken  {
	
	public Chart_ItemAssignment_1_0_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getChartAccess().getItemAssignment_1_0_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Chart_ItemKeyword_1_0_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("item",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("item");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getChartAccess().getItemItemRefParserRuleCall_1_0_1_0(), value, null)) {
			type = AssignmentType.DATATYPE_RULE_CALL;
			element = grammarAccess.getChartAccess().getItemItemRefParserRuleCall_1_0_1_0();
			return obj;
		}
		return null;
	}

}


// ("label=" label=(ID | STRING))?
protected class Chart_Group_1_1 extends GroupToken {
	
	public Chart_Group_1_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getChartAccess().getGroup_1_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Chart_LabelAssignment_1_1_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "label="
protected class Chart_LabelKeyword_1_1_0 extends KeywordToken  {
	
	public Chart_LabelKeyword_1_1_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getChartAccess().getLabelKeyword_1_1_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Chart_Group_1_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// label=(ID | STRING)
protected class Chart_LabelAssignment_1_1_1 extends AssignmentToken  {
	
	public Chart_LabelAssignment_1_1_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getChartAccess().getLabelAssignment_1_1_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Chart_LabelKeyword_1_1_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("label",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("label");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getChartAccess().getLabelIDTerminalRuleCall_1_1_1_0_0(), value, null)) {
			type = AssignmentType.TERMINAL_RULE_CALL;
			element = grammarAccess.getChartAccess().getLabelIDTerminalRuleCall_1_1_1_0_0();
			return obj;
		}
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getChartAccess().getLabelSTRINGTerminalRuleCall_1_1_1_0_1(), value, null)) {
			type = AssignmentType.TERMINAL_RULE_CALL;
			element = grammarAccess.getChartAccess().getLabelSTRINGTerminalRuleCall_1_1_1_0_1();
			return obj;
		}
		return null;
	}

}


// ("icon=" icon=Icon)?
protected class Chart_Group_1_2 extends GroupToken {
	
	public Chart_Group_1_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getChartAccess().getGroup_1_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Chart_IconAssignment_1_2_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "icon="
protected class Chart_IconKeyword_1_2_0 extends KeywordToken  {
	
	public Chart_IconKeyword_1_2_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getChartAccess().getIconKeyword_1_2_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Chart_Group_1_1(lastRuleCallOrigin, this, 0, inst);
			case 1: return new Chart_Group_1_0(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// icon=Icon
protected class Chart_IconAssignment_1_2_1 extends AssignmentToken  {
	
	public Chart_IconAssignment_1_2_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getChartAccess().getIconAssignment_1_2_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Chart_IconKeyword_1_2_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("icon",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("icon");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getChartAccess().getIconIconParserRuleCall_1_2_1_0(), value, null)) {
			type = AssignmentType.DATATYPE_RULE_CALL;
			element = grammarAccess.getChartAccess().getIconIconParserRuleCall_1_2_1_0();
			return obj;
		}
		return null;
	}

}


// ("service=" service=STRING)?
protected class Chart_Group_1_3 extends GroupToken {
	
	public Chart_Group_1_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getChartAccess().getGroup_1_3();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Chart_ServiceAssignment_1_3_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "service="
protected class Chart_ServiceKeyword_1_3_0 extends KeywordToken  {
	
	public Chart_ServiceKeyword_1_3_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getChartAccess().getServiceKeyword_1_3_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Chart_Group_1_2(lastRuleCallOrigin, this, 0, inst);
			case 1: return new Chart_Group_1_1(lastRuleCallOrigin, this, 1, inst);
			case 2: return new Chart_Group_1_0(lastRuleCallOrigin, this, 2, inst);
			default: return null;
		}	
	}

}

// service=STRING
protected class Chart_ServiceAssignment_1_3_1 extends AssignmentToken  {
	
	public Chart_ServiceAssignment_1_3_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getChartAccess().getServiceAssignment_1_3_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Chart_ServiceKeyword_1_3_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("service",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("service");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getChartAccess().getServiceSTRINGTerminalRuleCall_1_3_1_0(), value, null)) {
			type = AssignmentType.TERMINAL_RULE_CALL;
			element = grammarAccess.getChartAccess().getServiceSTRINGTerminalRuleCall_1_3_1_0();
			return obj;
		}
		return null;
	}

}


// ("refresh=" refresh=INT)?
protected class Chart_Group_1_4 extends GroupToken {
	
	public Chart_Group_1_4(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getChartAccess().getGroup_1_4();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Chart_RefreshAssignment_1_4_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "refresh="
protected class Chart_RefreshKeyword_1_4_0 extends KeywordToken  {
	
	public Chart_RefreshKeyword_1_4_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getChartAccess().getRefreshKeyword_1_4_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Chart_Group_1_3(lastRuleCallOrigin, this, 0, inst);
			case 1: return new Chart_Group_1_2(lastRuleCallOrigin, this, 1, inst);
			case 2: return new Chart_Group_1_1(lastRuleCallOrigin, this, 2, inst);
			case 3: return new Chart_Group_1_0(lastRuleCallOrigin, this, 3, inst);
			default: return null;
		}	
	}

}

// refresh=INT
protected class Chart_RefreshAssignment_1_4_1 extends AssignmentToken  {
	
	public Chart_RefreshAssignment_1_4_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getChartAccess().getRefreshAssignment_1_4_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Chart_RefreshKeyword_1_4_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("refresh",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("refresh");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getChartAccess().getRefreshINTTerminalRuleCall_1_4_1_0(), value, null)) {
			type = AssignmentType.TERMINAL_RULE_CALL;
			element = grammarAccess.getChartAccess().getRefreshINTTerminalRuleCall_1_4_1_0();
			return obj;
		}
		return null;
	}

}


// "period=" period=ID
protected class Chart_Group_1_5 extends GroupToken {
	
	public Chart_Group_1_5(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getChartAccess().getGroup_1_5();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Chart_PeriodAssignment_1_5_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "period="
protected class Chart_PeriodKeyword_1_5_0 extends KeywordToken  {
	
	public Chart_PeriodKeyword_1_5_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getChartAccess().getPeriodKeyword_1_5_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Chart_Group_1_4(lastRuleCallOrigin, this, 0, inst);
			case 1: return new Chart_Group_1_3(lastRuleCallOrigin, this, 1, inst);
			case 2: return new Chart_Group_1_2(lastRuleCallOrigin, this, 2, inst);
			case 3: return new Chart_Group_1_1(lastRuleCallOrigin, this, 3, inst);
			case 4: return new Chart_Group_1_0(lastRuleCallOrigin, this, 4, inst);
			default: return null;
		}	
	}

}

// period=ID
protected class Chart_PeriodAssignment_1_5_1 extends AssignmentToken  {
	
	public Chart_PeriodAssignment_1_5_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getChartAccess().getPeriodAssignment_1_5_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Chart_PeriodKeyword_1_5_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("period",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("period");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getChartAccess().getPeriodIDTerminalRuleCall_1_5_1_0(), value, null)) {
			type = AssignmentType.TERMINAL_RULE_CALL;
			element = grammarAccess.getChartAccess().getPeriodIDTerminalRuleCall_1_5_1_0();
			return obj;
		}
		return null;
	}

}


// ("labelcolor=[" (LabelColor+=ColorArray ("," LabelColor+=ColorArray)* "]"))?
protected class Chart_Group_1_6 extends GroupToken {
	
	public Chart_Group_1_6(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getChartAccess().getGroup_1_6();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Chart_Group_1_6_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "labelcolor=["
protected class Chart_LabelcolorKeyword_1_6_0 extends KeywordToken  {
	
	public Chart_LabelcolorKeyword_1_6_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getChartAccess().getLabelcolorKeyword_1_6_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Chart_Group_1_5(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// LabelColor+=ColorArray ("," LabelColor+=ColorArray)* "]"
protected class Chart_Group_1_6_1 extends GroupToken {
	
	public Chart_Group_1_6_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getChartAccess().getGroup_1_6_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Chart_RightSquareBracketKeyword_1_6_1_2(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// LabelColor+=ColorArray
protected class Chart_LabelColorAssignment_1_6_1_0 extends AssignmentToken  {
	
	public Chart_LabelColorAssignment_1_6_1_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getChartAccess().getLabelColorAssignment_1_6_1_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ColorArray_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("LabelColor",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("LabelColor");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getColorArrayRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getChartAccess().getLabelColorColorArrayParserRuleCall_1_6_1_0_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new Chart_LabelcolorKeyword_1_6_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// ("," LabelColor+=ColorArray)*
protected class Chart_Group_1_6_1_1 extends GroupToken {
	
	public Chart_Group_1_6_1_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getChartAccess().getGroup_1_6_1_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Chart_LabelColorAssignment_1_6_1_1_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// ","
protected class Chart_CommaKeyword_1_6_1_1_0 extends KeywordToken  {
	
	public Chart_CommaKeyword_1_6_1_1_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getChartAccess().getCommaKeyword_1_6_1_1_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Chart_Group_1_6_1_1(lastRuleCallOrigin, this, 0, inst);
			case 1: return new Chart_LabelColorAssignment_1_6_1_0(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// LabelColor+=ColorArray
protected class Chart_LabelColorAssignment_1_6_1_1_1 extends AssignmentToken  {
	
	public Chart_LabelColorAssignment_1_6_1_1_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getChartAccess().getLabelColorAssignment_1_6_1_1_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ColorArray_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("LabelColor",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("LabelColor");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getColorArrayRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getChartAccess().getLabelColorColorArrayParserRuleCall_1_6_1_1_1_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new Chart_CommaKeyword_1_6_1_1_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}


// "]"
protected class Chart_RightSquareBracketKeyword_1_6_1_2 extends KeywordToken  {
	
	public Chart_RightSquareBracketKeyword_1_6_1_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getChartAccess().getRightSquareBracketKeyword_1_6_1_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Chart_Group_1_6_1_1(lastRuleCallOrigin, this, 0, inst);
			case 1: return new Chart_LabelColorAssignment_1_6_1_0(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}



// ("valuecolor=[" (ValueColor+=ColorArray ("," ValueColor+=ColorArray)* "]"))?
protected class Chart_Group_1_7 extends GroupToken {
	
	public Chart_Group_1_7(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getChartAccess().getGroup_1_7();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Chart_Group_1_7_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "valuecolor=["
protected class Chart_ValuecolorKeyword_1_7_0 extends KeywordToken  {
	
	public Chart_ValuecolorKeyword_1_7_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getChartAccess().getValuecolorKeyword_1_7_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Chart_Group_1_6(lastRuleCallOrigin, this, 0, inst);
			case 1: return new Chart_Group_1_5(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// ValueColor+=ColorArray ("," ValueColor+=ColorArray)* "]"
protected class Chart_Group_1_7_1 extends GroupToken {
	
	public Chart_Group_1_7_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getChartAccess().getGroup_1_7_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Chart_RightSquareBracketKeyword_1_7_1_2(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// ValueColor+=ColorArray
protected class Chart_ValueColorAssignment_1_7_1_0 extends AssignmentToken  {
	
	public Chart_ValueColorAssignment_1_7_1_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getChartAccess().getValueColorAssignment_1_7_1_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ColorArray_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("ValueColor",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("ValueColor");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getColorArrayRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getChartAccess().getValueColorColorArrayParserRuleCall_1_7_1_0_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new Chart_ValuecolorKeyword_1_7_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// ("," ValueColor+=ColorArray)*
protected class Chart_Group_1_7_1_1 extends GroupToken {
	
	public Chart_Group_1_7_1_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getChartAccess().getGroup_1_7_1_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Chart_ValueColorAssignment_1_7_1_1_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// ","
protected class Chart_CommaKeyword_1_7_1_1_0 extends KeywordToken  {
	
	public Chart_CommaKeyword_1_7_1_1_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getChartAccess().getCommaKeyword_1_7_1_1_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Chart_Group_1_7_1_1(lastRuleCallOrigin, this, 0, inst);
			case 1: return new Chart_ValueColorAssignment_1_7_1_0(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// ValueColor+=ColorArray
protected class Chart_ValueColorAssignment_1_7_1_1_1 extends AssignmentToken  {
	
	public Chart_ValueColorAssignment_1_7_1_1_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getChartAccess().getValueColorAssignment_1_7_1_1_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ColorArray_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("ValueColor",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("ValueColor");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getColorArrayRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getChartAccess().getValueColorColorArrayParserRuleCall_1_7_1_1_1_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new Chart_CommaKeyword_1_7_1_1_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}


// "]"
protected class Chart_RightSquareBracketKeyword_1_7_1_2 extends KeywordToken  {
	
	public Chart_RightSquareBracketKeyword_1_7_1_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getChartAccess().getRightSquareBracketKeyword_1_7_1_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Chart_Group_1_7_1_1(lastRuleCallOrigin, this, 0, inst);
			case 1: return new Chart_ValueColorAssignment_1_7_1_0(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}



// ("visibility=[" (Visibility+=VisibilityRule ("," Visibility+=VisibilityRule)* "]"))?
protected class Chart_Group_1_8 extends GroupToken {
	
	public Chart_Group_1_8(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getChartAccess().getGroup_1_8();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Chart_Group_1_8_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "visibility=["
protected class Chart_VisibilityKeyword_1_8_0 extends KeywordToken  {
	
	public Chart_VisibilityKeyword_1_8_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getChartAccess().getVisibilityKeyword_1_8_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Chart_Group_1_7(lastRuleCallOrigin, this, 0, inst);
			case 1: return new Chart_Group_1_6(lastRuleCallOrigin, this, 1, inst);
			case 2: return new Chart_Group_1_5(lastRuleCallOrigin, this, 2, inst);
			default: return null;
		}	
	}

}

// Visibility+=VisibilityRule ("," Visibility+=VisibilityRule)* "]"
protected class Chart_Group_1_8_1 extends GroupToken {
	
	public Chart_Group_1_8_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getChartAccess().getGroup_1_8_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Chart_RightSquareBracketKeyword_1_8_1_2(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// Visibility+=VisibilityRule
protected class Chart_VisibilityAssignment_1_8_1_0 extends AssignmentToken  {
	
	public Chart_VisibilityAssignment_1_8_1_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getChartAccess().getVisibilityAssignment_1_8_1_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new VisibilityRule_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("Visibility",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("Visibility");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getVisibilityRuleRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getChartAccess().getVisibilityVisibilityRuleParserRuleCall_1_8_1_0_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new Chart_VisibilityKeyword_1_8_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// ("," Visibility+=VisibilityRule)*
protected class Chart_Group_1_8_1_1 extends GroupToken {
	
	public Chart_Group_1_8_1_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getChartAccess().getGroup_1_8_1_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Chart_VisibilityAssignment_1_8_1_1_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// ","
protected class Chart_CommaKeyword_1_8_1_1_0 extends KeywordToken  {
	
	public Chart_CommaKeyword_1_8_1_1_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getChartAccess().getCommaKeyword_1_8_1_1_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Chart_Group_1_8_1_1(lastRuleCallOrigin, this, 0, inst);
			case 1: return new Chart_VisibilityAssignment_1_8_1_0(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// Visibility+=VisibilityRule
protected class Chart_VisibilityAssignment_1_8_1_1_1 extends AssignmentToken  {
	
	public Chart_VisibilityAssignment_1_8_1_1_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getChartAccess().getVisibilityAssignment_1_8_1_1_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new VisibilityRule_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("Visibility",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("Visibility");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getVisibilityRuleRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getChartAccess().getVisibilityVisibilityRuleParserRuleCall_1_8_1_1_1_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new Chart_CommaKeyword_1_8_1_1_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}


// "]"
protected class Chart_RightSquareBracketKeyword_1_8_1_2 extends KeywordToken  {
	
	public Chart_RightSquareBracketKeyword_1_8_1_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getChartAccess().getRightSquareBracketKeyword_1_8_1_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Chart_Group_1_8_1_1(lastRuleCallOrigin, this, 0, inst);
			case 1: return new Chart_VisibilityAssignment_1_8_1_0(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}





/************ end Rule Chart ****************/


/************ begin Rule Webview ****************
 *
 * Webview:
 * 
 * 	"Webview" (("item=" item=ItemRef)? & ("label=" label=(ID | STRING))? & ("icon=" icon=Icon)? & ("height=" height=INT)?
 * 
 * 	& "url=" url=STRING & ("labelcolor=[" (LabelColor+=ColorArray ("," LabelColor+=ColorArray)* "]"))? & ("valuecolor=["
 * 
 * 	(ValueColor+=ColorArray ("," ValueColor+=ColorArray)* "]"))? & ("visibility=[" (Visibility+=VisibilityRule (","
 * 
 * 	Visibility+=VisibilityRule)* "]"))?);
 *
 **/

// "Webview" (("item=" item=ItemRef)? & ("label=" label=(ID | STRING))? & ("icon=" icon=Icon)? & ("height=" height=INT)? &
// 
// "url=" url=STRING & ("labelcolor=[" (LabelColor+=ColorArray ("," LabelColor+=ColorArray)* "]"))? & ("valuecolor=["
// 
// (ValueColor+=ColorArray ("," ValueColor+=ColorArray)* "]"))? & ("visibility=[" (Visibility+=VisibilityRule (","
// 
// Visibility+=VisibilityRule)* "]"))?)
protected class Webview_Group extends GroupToken {
	
	public Webview_Group(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getWebviewAccess().getGroup();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Webview_UnorderedGroup_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getWebviewRule().getType().getClassifier())
			return null;
		return eObjectConsumer;
	}

}

// "Webview"
protected class Webview_WebviewKeyword_0 extends KeywordToken  {
	
	public Webview_WebviewKeyword_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getWebviewAccess().getWebviewKeyword_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

}

// ("item=" item=ItemRef)? & ("label=" label=(ID | STRING))? & ("icon=" icon=Icon)? & ("height=" height=INT)? & "url="
// 
// url=STRING & ("labelcolor=[" (LabelColor+=ColorArray ("," LabelColor+=ColorArray)* "]"))? & ("valuecolor=["
// 
// (ValueColor+=ColorArray ("," ValueColor+=ColorArray)* "]"))? & ("visibility=[" (Visibility+=VisibilityRule (","
// 
// Visibility+=VisibilityRule)* "]"))?
protected class Webview_UnorderedGroup_1 extends UnorderedGroupToken {
	
	public Webview_UnorderedGroup_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public UnorderedGroup getGrammarElement() {
		return grammarAccess.getWebviewAccess().getUnorderedGroup_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Webview_Group_1_7(lastRuleCallOrigin, this, 0, inst);
			case 1: return new Webview_Group_1_6(lastRuleCallOrigin, this, 1, inst);
			case 2: return new Webview_Group_1_5(lastRuleCallOrigin, this, 2, inst);
			case 3: return new Webview_Group_1_4(lastRuleCallOrigin, this, 3, inst);
			default: return null;
		}	
	}

}

// ("item=" item=ItemRef)?
protected class Webview_Group_1_0 extends GroupToken {
	
	public Webview_Group_1_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getWebviewAccess().getGroup_1_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Webview_ItemAssignment_1_0_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "item="
protected class Webview_ItemKeyword_1_0_0 extends KeywordToken  {
	
	public Webview_ItemKeyword_1_0_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getWebviewAccess().getItemKeyword_1_0_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Webview_WebviewKeyword_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// item=ItemRef
protected class Webview_ItemAssignment_1_0_1 extends AssignmentToken  {
	
	public Webview_ItemAssignment_1_0_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getWebviewAccess().getItemAssignment_1_0_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Webview_ItemKeyword_1_0_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("item",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("item");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getWebviewAccess().getItemItemRefParserRuleCall_1_0_1_0(), value, null)) {
			type = AssignmentType.DATATYPE_RULE_CALL;
			element = grammarAccess.getWebviewAccess().getItemItemRefParserRuleCall_1_0_1_0();
			return obj;
		}
		return null;
	}

}


// ("label=" label=(ID | STRING))?
protected class Webview_Group_1_1 extends GroupToken {
	
	public Webview_Group_1_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getWebviewAccess().getGroup_1_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Webview_LabelAssignment_1_1_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "label="
protected class Webview_LabelKeyword_1_1_0 extends KeywordToken  {
	
	public Webview_LabelKeyword_1_1_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getWebviewAccess().getLabelKeyword_1_1_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Webview_Group_1_0(lastRuleCallOrigin, this, 0, inst);
			case 1: return new Webview_WebviewKeyword_0(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// label=(ID | STRING)
protected class Webview_LabelAssignment_1_1_1 extends AssignmentToken  {
	
	public Webview_LabelAssignment_1_1_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getWebviewAccess().getLabelAssignment_1_1_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Webview_LabelKeyword_1_1_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("label",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("label");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getWebviewAccess().getLabelIDTerminalRuleCall_1_1_1_0_0(), value, null)) {
			type = AssignmentType.TERMINAL_RULE_CALL;
			element = grammarAccess.getWebviewAccess().getLabelIDTerminalRuleCall_1_1_1_0_0();
			return obj;
		}
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getWebviewAccess().getLabelSTRINGTerminalRuleCall_1_1_1_0_1(), value, null)) {
			type = AssignmentType.TERMINAL_RULE_CALL;
			element = grammarAccess.getWebviewAccess().getLabelSTRINGTerminalRuleCall_1_1_1_0_1();
			return obj;
		}
		return null;
	}

}


// ("icon=" icon=Icon)?
protected class Webview_Group_1_2 extends GroupToken {
	
	public Webview_Group_1_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getWebviewAccess().getGroup_1_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Webview_IconAssignment_1_2_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "icon="
protected class Webview_IconKeyword_1_2_0 extends KeywordToken  {
	
	public Webview_IconKeyword_1_2_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getWebviewAccess().getIconKeyword_1_2_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Webview_Group_1_1(lastRuleCallOrigin, this, 0, inst);
			case 1: return new Webview_Group_1_0(lastRuleCallOrigin, this, 1, inst);
			case 2: return new Webview_WebviewKeyword_0(lastRuleCallOrigin, this, 2, inst);
			default: return null;
		}	
	}

}

// icon=Icon
protected class Webview_IconAssignment_1_2_1 extends AssignmentToken  {
	
	public Webview_IconAssignment_1_2_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getWebviewAccess().getIconAssignment_1_2_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Webview_IconKeyword_1_2_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("icon",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("icon");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getWebviewAccess().getIconIconParserRuleCall_1_2_1_0(), value, null)) {
			type = AssignmentType.DATATYPE_RULE_CALL;
			element = grammarAccess.getWebviewAccess().getIconIconParserRuleCall_1_2_1_0();
			return obj;
		}
		return null;
	}

}


// ("height=" height=INT)?
protected class Webview_Group_1_3 extends GroupToken {
	
	public Webview_Group_1_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getWebviewAccess().getGroup_1_3();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Webview_HeightAssignment_1_3_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "height="
protected class Webview_HeightKeyword_1_3_0 extends KeywordToken  {
	
	public Webview_HeightKeyword_1_3_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getWebviewAccess().getHeightKeyword_1_3_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Webview_Group_1_2(lastRuleCallOrigin, this, 0, inst);
			case 1: return new Webview_Group_1_1(lastRuleCallOrigin, this, 1, inst);
			case 2: return new Webview_Group_1_0(lastRuleCallOrigin, this, 2, inst);
			case 3: return new Webview_WebviewKeyword_0(lastRuleCallOrigin, this, 3, inst);
			default: return null;
		}	
	}

}

// height=INT
protected class Webview_HeightAssignment_1_3_1 extends AssignmentToken  {
	
	public Webview_HeightAssignment_1_3_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getWebviewAccess().getHeightAssignment_1_3_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Webview_HeightKeyword_1_3_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("height",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("height");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getWebviewAccess().getHeightINTTerminalRuleCall_1_3_1_0(), value, null)) {
			type = AssignmentType.TERMINAL_RULE_CALL;
			element = grammarAccess.getWebviewAccess().getHeightINTTerminalRuleCall_1_3_1_0();
			return obj;
		}
		return null;
	}

}


// "url=" url=STRING
protected class Webview_Group_1_4 extends GroupToken {
	
	public Webview_Group_1_4(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getWebviewAccess().getGroup_1_4();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Webview_UrlAssignment_1_4_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "url="
protected class Webview_UrlKeyword_1_4_0 extends KeywordToken  {
	
	public Webview_UrlKeyword_1_4_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getWebviewAccess().getUrlKeyword_1_4_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Webview_Group_1_3(lastRuleCallOrigin, this, 0, inst);
			case 1: return new Webview_Group_1_2(lastRuleCallOrigin, this, 1, inst);
			case 2: return new Webview_Group_1_1(lastRuleCallOrigin, this, 2, inst);
			case 3: return new Webview_Group_1_0(lastRuleCallOrigin, this, 3, inst);
			case 4: return new Webview_WebviewKeyword_0(lastRuleCallOrigin, this, 4, inst);
			default: return null;
		}	
	}

}

// url=STRING
protected class Webview_UrlAssignment_1_4_1 extends AssignmentToken  {
	
	public Webview_UrlAssignment_1_4_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getWebviewAccess().getUrlAssignment_1_4_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Webview_UrlKeyword_1_4_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("url",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("url");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getWebviewAccess().getUrlSTRINGTerminalRuleCall_1_4_1_0(), value, null)) {
			type = AssignmentType.TERMINAL_RULE_CALL;
			element = grammarAccess.getWebviewAccess().getUrlSTRINGTerminalRuleCall_1_4_1_0();
			return obj;
		}
		return null;
	}

}


// ("labelcolor=[" (LabelColor+=ColorArray ("," LabelColor+=ColorArray)* "]"))?
protected class Webview_Group_1_5 extends GroupToken {
	
	public Webview_Group_1_5(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getWebviewAccess().getGroup_1_5();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Webview_Group_1_5_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "labelcolor=["
protected class Webview_LabelcolorKeyword_1_5_0 extends KeywordToken  {
	
	public Webview_LabelcolorKeyword_1_5_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getWebviewAccess().getLabelcolorKeyword_1_5_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Webview_Group_1_4(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// LabelColor+=ColorArray ("," LabelColor+=ColorArray)* "]"
protected class Webview_Group_1_5_1 extends GroupToken {
	
	public Webview_Group_1_5_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getWebviewAccess().getGroup_1_5_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Webview_RightSquareBracketKeyword_1_5_1_2(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// LabelColor+=ColorArray
protected class Webview_LabelColorAssignment_1_5_1_0 extends AssignmentToken  {
	
	public Webview_LabelColorAssignment_1_5_1_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getWebviewAccess().getLabelColorAssignment_1_5_1_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ColorArray_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("LabelColor",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("LabelColor");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getColorArrayRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getWebviewAccess().getLabelColorColorArrayParserRuleCall_1_5_1_0_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new Webview_LabelcolorKeyword_1_5_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// ("," LabelColor+=ColorArray)*
protected class Webview_Group_1_5_1_1 extends GroupToken {
	
	public Webview_Group_1_5_1_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getWebviewAccess().getGroup_1_5_1_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Webview_LabelColorAssignment_1_5_1_1_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// ","
protected class Webview_CommaKeyword_1_5_1_1_0 extends KeywordToken  {
	
	public Webview_CommaKeyword_1_5_1_1_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getWebviewAccess().getCommaKeyword_1_5_1_1_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Webview_Group_1_5_1_1(lastRuleCallOrigin, this, 0, inst);
			case 1: return new Webview_LabelColorAssignment_1_5_1_0(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// LabelColor+=ColorArray
protected class Webview_LabelColorAssignment_1_5_1_1_1 extends AssignmentToken  {
	
	public Webview_LabelColorAssignment_1_5_1_1_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getWebviewAccess().getLabelColorAssignment_1_5_1_1_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ColorArray_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("LabelColor",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("LabelColor");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getColorArrayRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getWebviewAccess().getLabelColorColorArrayParserRuleCall_1_5_1_1_1_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new Webview_CommaKeyword_1_5_1_1_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}


// "]"
protected class Webview_RightSquareBracketKeyword_1_5_1_2 extends KeywordToken  {
	
	public Webview_RightSquareBracketKeyword_1_5_1_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getWebviewAccess().getRightSquareBracketKeyword_1_5_1_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Webview_Group_1_5_1_1(lastRuleCallOrigin, this, 0, inst);
			case 1: return new Webview_LabelColorAssignment_1_5_1_0(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}



// ("valuecolor=[" (ValueColor+=ColorArray ("," ValueColor+=ColorArray)* "]"))?
protected class Webview_Group_1_6 extends GroupToken {
	
	public Webview_Group_1_6(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getWebviewAccess().getGroup_1_6();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Webview_Group_1_6_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "valuecolor=["
protected class Webview_ValuecolorKeyword_1_6_0 extends KeywordToken  {
	
	public Webview_ValuecolorKeyword_1_6_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getWebviewAccess().getValuecolorKeyword_1_6_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Webview_Group_1_5(lastRuleCallOrigin, this, 0, inst);
			case 1: return new Webview_Group_1_4(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// ValueColor+=ColorArray ("," ValueColor+=ColorArray)* "]"
protected class Webview_Group_1_6_1 extends GroupToken {
	
	public Webview_Group_1_6_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getWebviewAccess().getGroup_1_6_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Webview_RightSquareBracketKeyword_1_6_1_2(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// ValueColor+=ColorArray
protected class Webview_ValueColorAssignment_1_6_1_0 extends AssignmentToken  {
	
	public Webview_ValueColorAssignment_1_6_1_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getWebviewAccess().getValueColorAssignment_1_6_1_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ColorArray_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("ValueColor",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("ValueColor");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getColorArrayRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getWebviewAccess().getValueColorColorArrayParserRuleCall_1_6_1_0_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new Webview_ValuecolorKeyword_1_6_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// ("," ValueColor+=ColorArray)*
protected class Webview_Group_1_6_1_1 extends GroupToken {
	
	public Webview_Group_1_6_1_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getWebviewAccess().getGroup_1_6_1_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Webview_ValueColorAssignment_1_6_1_1_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// ","
protected class Webview_CommaKeyword_1_6_1_1_0 extends KeywordToken  {
	
	public Webview_CommaKeyword_1_6_1_1_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getWebviewAccess().getCommaKeyword_1_6_1_1_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Webview_Group_1_6_1_1(lastRuleCallOrigin, this, 0, inst);
			case 1: return new Webview_ValueColorAssignment_1_6_1_0(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// ValueColor+=ColorArray
protected class Webview_ValueColorAssignment_1_6_1_1_1 extends AssignmentToken  {
	
	public Webview_ValueColorAssignment_1_6_1_1_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getWebviewAccess().getValueColorAssignment_1_6_1_1_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ColorArray_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("ValueColor",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("ValueColor");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getColorArrayRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getWebviewAccess().getValueColorColorArrayParserRuleCall_1_6_1_1_1_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new Webview_CommaKeyword_1_6_1_1_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}


// "]"
protected class Webview_RightSquareBracketKeyword_1_6_1_2 extends KeywordToken  {
	
	public Webview_RightSquareBracketKeyword_1_6_1_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getWebviewAccess().getRightSquareBracketKeyword_1_6_1_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Webview_Group_1_6_1_1(lastRuleCallOrigin, this, 0, inst);
			case 1: return new Webview_ValueColorAssignment_1_6_1_0(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}



// ("visibility=[" (Visibility+=VisibilityRule ("," Visibility+=VisibilityRule)* "]"))?
protected class Webview_Group_1_7 extends GroupToken {
	
	public Webview_Group_1_7(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getWebviewAccess().getGroup_1_7();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Webview_Group_1_7_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "visibility=["
protected class Webview_VisibilityKeyword_1_7_0 extends KeywordToken  {
	
	public Webview_VisibilityKeyword_1_7_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getWebviewAccess().getVisibilityKeyword_1_7_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Webview_Group_1_6(lastRuleCallOrigin, this, 0, inst);
			case 1: return new Webview_Group_1_5(lastRuleCallOrigin, this, 1, inst);
			case 2: return new Webview_Group_1_4(lastRuleCallOrigin, this, 2, inst);
			default: return null;
		}	
	}

}

// Visibility+=VisibilityRule ("," Visibility+=VisibilityRule)* "]"
protected class Webview_Group_1_7_1 extends GroupToken {
	
	public Webview_Group_1_7_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getWebviewAccess().getGroup_1_7_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Webview_RightSquareBracketKeyword_1_7_1_2(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// Visibility+=VisibilityRule
protected class Webview_VisibilityAssignment_1_7_1_0 extends AssignmentToken  {
	
	public Webview_VisibilityAssignment_1_7_1_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getWebviewAccess().getVisibilityAssignment_1_7_1_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new VisibilityRule_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("Visibility",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("Visibility");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getVisibilityRuleRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getWebviewAccess().getVisibilityVisibilityRuleParserRuleCall_1_7_1_0_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new Webview_VisibilityKeyword_1_7_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// ("," Visibility+=VisibilityRule)*
protected class Webview_Group_1_7_1_1 extends GroupToken {
	
	public Webview_Group_1_7_1_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getWebviewAccess().getGroup_1_7_1_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Webview_VisibilityAssignment_1_7_1_1_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// ","
protected class Webview_CommaKeyword_1_7_1_1_0 extends KeywordToken  {
	
	public Webview_CommaKeyword_1_7_1_1_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getWebviewAccess().getCommaKeyword_1_7_1_1_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Webview_Group_1_7_1_1(lastRuleCallOrigin, this, 0, inst);
			case 1: return new Webview_VisibilityAssignment_1_7_1_0(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// Visibility+=VisibilityRule
protected class Webview_VisibilityAssignment_1_7_1_1_1 extends AssignmentToken  {
	
	public Webview_VisibilityAssignment_1_7_1_1_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getWebviewAccess().getVisibilityAssignment_1_7_1_1_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new VisibilityRule_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("Visibility",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("Visibility");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getVisibilityRuleRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getWebviewAccess().getVisibilityVisibilityRuleParserRuleCall_1_7_1_1_1_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new Webview_CommaKeyword_1_7_1_1_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}


// "]"
protected class Webview_RightSquareBracketKeyword_1_7_1_2 extends KeywordToken  {
	
	public Webview_RightSquareBracketKeyword_1_7_1_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getWebviewAccess().getRightSquareBracketKeyword_1_7_1_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Webview_Group_1_7_1_1(lastRuleCallOrigin, this, 0, inst);
			case 1: return new Webview_VisibilityAssignment_1_7_1_0(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}





/************ end Rule Webview ****************/


/************ begin Rule Switch ****************
 *
 * Switch:
 * 
 * 	"Switch" ("item=" item=ItemRef & ("label=" label=(ID | STRING))? & ("icon=" icon=Icon)? & ("mappings=["
 * 
 * 	mappings+=Mapping ("," mappings+=Mapping)* "]")? & ("labelcolor=[" (LabelColor+=ColorArray (","
 * 
 * 	LabelColor+=ColorArray)* "]"))? & ("valuecolor=[" (ValueColor+=ColorArray ("," ValueColor+=ColorArray)* "]"))? &
 * 
 * 	("visibility=[" (Visibility+=VisibilityRule ("," Visibility+=VisibilityRule)* "]"))?);
 *
 **/

// "Switch" ("item=" item=ItemRef & ("label=" label=(ID | STRING))? & ("icon=" icon=Icon)? & ("mappings=["
// 
// mappings+=Mapping ("," mappings+=Mapping)* "]")? & ("labelcolor=[" (LabelColor+=ColorArray (","
// 
// LabelColor+=ColorArray)* "]"))? & ("valuecolor=[" (ValueColor+=ColorArray ("," ValueColor+=ColorArray)* "]"))? &
// 
// ("visibility=[" (Visibility+=VisibilityRule ("," Visibility+=VisibilityRule)* "]"))?)
protected class Switch_Group extends GroupToken {
	
	public Switch_Group(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getSwitchAccess().getGroup();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Switch_UnorderedGroup_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getSwitchRule().getType().getClassifier())
			return null;
		return eObjectConsumer;
	}

}

// "Switch"
protected class Switch_SwitchKeyword_0 extends KeywordToken  {
	
	public Switch_SwitchKeyword_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getSwitchAccess().getSwitchKeyword_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

}

// "item=" item=ItemRef & ("label=" label=(ID | STRING))? & ("icon=" icon=Icon)? & ("mappings=[" mappings+=Mapping (","
// 
// mappings+=Mapping)* "]")? & ("labelcolor=[" (LabelColor+=ColorArray ("," LabelColor+=ColorArray)* "]"))? &
// 
// ("valuecolor=[" (ValueColor+=ColorArray ("," ValueColor+=ColorArray)* "]"))? & ("visibility=["
// 
// (Visibility+=VisibilityRule ("," Visibility+=VisibilityRule)* "]"))?
protected class Switch_UnorderedGroup_1 extends UnorderedGroupToken {
	
	public Switch_UnorderedGroup_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public UnorderedGroup getGrammarElement() {
		return grammarAccess.getSwitchAccess().getUnorderedGroup_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Switch_Group_1_6(lastRuleCallOrigin, this, 0, inst);
			case 1: return new Switch_Group_1_5(lastRuleCallOrigin, this, 1, inst);
			case 2: return new Switch_Group_1_4(lastRuleCallOrigin, this, 2, inst);
			case 3: return new Switch_Group_1_3(lastRuleCallOrigin, this, 3, inst);
			case 4: return new Switch_Group_1_2(lastRuleCallOrigin, this, 4, inst);
			case 5: return new Switch_Group_1_1(lastRuleCallOrigin, this, 5, inst);
			case 6: return new Switch_Group_1_0(lastRuleCallOrigin, this, 6, inst);
			default: return null;
		}	
	}

}

// "item=" item=ItemRef
protected class Switch_Group_1_0 extends GroupToken {
	
	public Switch_Group_1_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getSwitchAccess().getGroup_1_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Switch_ItemAssignment_1_0_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "item="
protected class Switch_ItemKeyword_1_0_0 extends KeywordToken  {
	
	public Switch_ItemKeyword_1_0_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getSwitchAccess().getItemKeyword_1_0_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Switch_SwitchKeyword_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// item=ItemRef
protected class Switch_ItemAssignment_1_0_1 extends AssignmentToken  {
	
	public Switch_ItemAssignment_1_0_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getSwitchAccess().getItemAssignment_1_0_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Switch_ItemKeyword_1_0_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("item",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("item");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getSwitchAccess().getItemItemRefParserRuleCall_1_0_1_0(), value, null)) {
			type = AssignmentType.DATATYPE_RULE_CALL;
			element = grammarAccess.getSwitchAccess().getItemItemRefParserRuleCall_1_0_1_0();
			return obj;
		}
		return null;
	}

}


// ("label=" label=(ID | STRING))?
protected class Switch_Group_1_1 extends GroupToken {
	
	public Switch_Group_1_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getSwitchAccess().getGroup_1_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Switch_LabelAssignment_1_1_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "label="
protected class Switch_LabelKeyword_1_1_0 extends KeywordToken  {
	
	public Switch_LabelKeyword_1_1_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getSwitchAccess().getLabelKeyword_1_1_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Switch_Group_1_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// label=(ID | STRING)
protected class Switch_LabelAssignment_1_1_1 extends AssignmentToken  {
	
	public Switch_LabelAssignment_1_1_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getSwitchAccess().getLabelAssignment_1_1_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Switch_LabelKeyword_1_1_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("label",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("label");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getSwitchAccess().getLabelIDTerminalRuleCall_1_1_1_0_0(), value, null)) {
			type = AssignmentType.TERMINAL_RULE_CALL;
			element = grammarAccess.getSwitchAccess().getLabelIDTerminalRuleCall_1_1_1_0_0();
			return obj;
		}
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getSwitchAccess().getLabelSTRINGTerminalRuleCall_1_1_1_0_1(), value, null)) {
			type = AssignmentType.TERMINAL_RULE_CALL;
			element = grammarAccess.getSwitchAccess().getLabelSTRINGTerminalRuleCall_1_1_1_0_1();
			return obj;
		}
		return null;
	}

}


// ("icon=" icon=Icon)?
protected class Switch_Group_1_2 extends GroupToken {
	
	public Switch_Group_1_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getSwitchAccess().getGroup_1_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Switch_IconAssignment_1_2_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "icon="
protected class Switch_IconKeyword_1_2_0 extends KeywordToken  {
	
	public Switch_IconKeyword_1_2_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getSwitchAccess().getIconKeyword_1_2_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Switch_Group_1_1(lastRuleCallOrigin, this, 0, inst);
			case 1: return new Switch_Group_1_0(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// icon=Icon
protected class Switch_IconAssignment_1_2_1 extends AssignmentToken  {
	
	public Switch_IconAssignment_1_2_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getSwitchAccess().getIconAssignment_1_2_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Switch_IconKeyword_1_2_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("icon",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("icon");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getSwitchAccess().getIconIconParserRuleCall_1_2_1_0(), value, null)) {
			type = AssignmentType.DATATYPE_RULE_CALL;
			element = grammarAccess.getSwitchAccess().getIconIconParserRuleCall_1_2_1_0();
			return obj;
		}
		return null;
	}

}


// ("mappings=[" mappings+=Mapping ("," mappings+=Mapping)* "]")?
protected class Switch_Group_1_3 extends GroupToken {
	
	public Switch_Group_1_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getSwitchAccess().getGroup_1_3();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Switch_RightSquareBracketKeyword_1_3_3(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "mappings=["
protected class Switch_MappingsKeyword_1_3_0 extends KeywordToken  {
	
	public Switch_MappingsKeyword_1_3_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getSwitchAccess().getMappingsKeyword_1_3_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Switch_Group_1_2(lastRuleCallOrigin, this, 0, inst);
			case 1: return new Switch_Group_1_1(lastRuleCallOrigin, this, 1, inst);
			case 2: return new Switch_Group_1_0(lastRuleCallOrigin, this, 2, inst);
			default: return null;
		}	
	}

}

// mappings+=Mapping
protected class Switch_MappingsAssignment_1_3_1 extends AssignmentToken  {
	
	public Switch_MappingsAssignment_1_3_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getSwitchAccess().getMappingsAssignment_1_3_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Mapping_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("mappings",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("mappings");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getMappingRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getSwitchAccess().getMappingsMappingParserRuleCall_1_3_1_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new Switch_MappingsKeyword_1_3_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// ("," mappings+=Mapping)*
protected class Switch_Group_1_3_2 extends GroupToken {
	
	public Switch_Group_1_3_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getSwitchAccess().getGroup_1_3_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Switch_MappingsAssignment_1_3_2_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// ","
protected class Switch_CommaKeyword_1_3_2_0 extends KeywordToken  {
	
	public Switch_CommaKeyword_1_3_2_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getSwitchAccess().getCommaKeyword_1_3_2_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Switch_Group_1_3_2(lastRuleCallOrigin, this, 0, inst);
			case 1: return new Switch_MappingsAssignment_1_3_1(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// mappings+=Mapping
protected class Switch_MappingsAssignment_1_3_2_1 extends AssignmentToken  {
	
	public Switch_MappingsAssignment_1_3_2_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getSwitchAccess().getMappingsAssignment_1_3_2_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Mapping_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("mappings",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("mappings");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getMappingRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getSwitchAccess().getMappingsMappingParserRuleCall_1_3_2_1_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new Switch_CommaKeyword_1_3_2_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}


// "]"
protected class Switch_RightSquareBracketKeyword_1_3_3 extends KeywordToken  {
	
	public Switch_RightSquareBracketKeyword_1_3_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getSwitchAccess().getRightSquareBracketKeyword_1_3_3();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Switch_Group_1_3_2(lastRuleCallOrigin, this, 0, inst);
			case 1: return new Switch_MappingsAssignment_1_3_1(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}


// ("labelcolor=[" (LabelColor+=ColorArray ("," LabelColor+=ColorArray)* "]"))?
protected class Switch_Group_1_4 extends GroupToken {
	
	public Switch_Group_1_4(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getSwitchAccess().getGroup_1_4();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Switch_Group_1_4_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "labelcolor=["
protected class Switch_LabelcolorKeyword_1_4_0 extends KeywordToken  {
	
	public Switch_LabelcolorKeyword_1_4_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getSwitchAccess().getLabelcolorKeyword_1_4_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Switch_Group_1_3(lastRuleCallOrigin, this, 0, inst);
			case 1: return new Switch_Group_1_2(lastRuleCallOrigin, this, 1, inst);
			case 2: return new Switch_Group_1_1(lastRuleCallOrigin, this, 2, inst);
			case 3: return new Switch_Group_1_0(lastRuleCallOrigin, this, 3, inst);
			default: return null;
		}	
	}

}

// LabelColor+=ColorArray ("," LabelColor+=ColorArray)* "]"
protected class Switch_Group_1_4_1 extends GroupToken {
	
	public Switch_Group_1_4_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getSwitchAccess().getGroup_1_4_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Switch_RightSquareBracketKeyword_1_4_1_2(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// LabelColor+=ColorArray
protected class Switch_LabelColorAssignment_1_4_1_0 extends AssignmentToken  {
	
	public Switch_LabelColorAssignment_1_4_1_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getSwitchAccess().getLabelColorAssignment_1_4_1_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ColorArray_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("LabelColor",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("LabelColor");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getColorArrayRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getSwitchAccess().getLabelColorColorArrayParserRuleCall_1_4_1_0_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new Switch_LabelcolorKeyword_1_4_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// ("," LabelColor+=ColorArray)*
protected class Switch_Group_1_4_1_1 extends GroupToken {
	
	public Switch_Group_1_4_1_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getSwitchAccess().getGroup_1_4_1_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Switch_LabelColorAssignment_1_4_1_1_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// ","
protected class Switch_CommaKeyword_1_4_1_1_0 extends KeywordToken  {
	
	public Switch_CommaKeyword_1_4_1_1_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getSwitchAccess().getCommaKeyword_1_4_1_1_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Switch_Group_1_4_1_1(lastRuleCallOrigin, this, 0, inst);
			case 1: return new Switch_LabelColorAssignment_1_4_1_0(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// LabelColor+=ColorArray
protected class Switch_LabelColorAssignment_1_4_1_1_1 extends AssignmentToken  {
	
	public Switch_LabelColorAssignment_1_4_1_1_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getSwitchAccess().getLabelColorAssignment_1_4_1_1_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ColorArray_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("LabelColor",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("LabelColor");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getColorArrayRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getSwitchAccess().getLabelColorColorArrayParserRuleCall_1_4_1_1_1_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new Switch_CommaKeyword_1_4_1_1_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}


// "]"
protected class Switch_RightSquareBracketKeyword_1_4_1_2 extends KeywordToken  {
	
	public Switch_RightSquareBracketKeyword_1_4_1_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getSwitchAccess().getRightSquareBracketKeyword_1_4_1_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Switch_Group_1_4_1_1(lastRuleCallOrigin, this, 0, inst);
			case 1: return new Switch_LabelColorAssignment_1_4_1_0(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}



// ("valuecolor=[" (ValueColor+=ColorArray ("," ValueColor+=ColorArray)* "]"))?
protected class Switch_Group_1_5 extends GroupToken {
	
	public Switch_Group_1_5(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getSwitchAccess().getGroup_1_5();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Switch_Group_1_5_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "valuecolor=["
protected class Switch_ValuecolorKeyword_1_5_0 extends KeywordToken  {
	
	public Switch_ValuecolorKeyword_1_5_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getSwitchAccess().getValuecolorKeyword_1_5_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Switch_Group_1_4(lastRuleCallOrigin, this, 0, inst);
			case 1: return new Switch_Group_1_3(lastRuleCallOrigin, this, 1, inst);
			case 2: return new Switch_Group_1_2(lastRuleCallOrigin, this, 2, inst);
			case 3: return new Switch_Group_1_1(lastRuleCallOrigin, this, 3, inst);
			case 4: return new Switch_Group_1_0(lastRuleCallOrigin, this, 4, inst);
			default: return null;
		}	
	}

}

// ValueColor+=ColorArray ("," ValueColor+=ColorArray)* "]"
protected class Switch_Group_1_5_1 extends GroupToken {
	
	public Switch_Group_1_5_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getSwitchAccess().getGroup_1_5_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Switch_RightSquareBracketKeyword_1_5_1_2(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// ValueColor+=ColorArray
protected class Switch_ValueColorAssignment_1_5_1_0 extends AssignmentToken  {
	
	public Switch_ValueColorAssignment_1_5_1_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getSwitchAccess().getValueColorAssignment_1_5_1_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ColorArray_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("ValueColor",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("ValueColor");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getColorArrayRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getSwitchAccess().getValueColorColorArrayParserRuleCall_1_5_1_0_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new Switch_ValuecolorKeyword_1_5_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// ("," ValueColor+=ColorArray)*
protected class Switch_Group_1_5_1_1 extends GroupToken {
	
	public Switch_Group_1_5_1_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getSwitchAccess().getGroup_1_5_1_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Switch_ValueColorAssignment_1_5_1_1_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// ","
protected class Switch_CommaKeyword_1_5_1_1_0 extends KeywordToken  {
	
	public Switch_CommaKeyword_1_5_1_1_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getSwitchAccess().getCommaKeyword_1_5_1_1_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Switch_Group_1_5_1_1(lastRuleCallOrigin, this, 0, inst);
			case 1: return new Switch_ValueColorAssignment_1_5_1_0(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// ValueColor+=ColorArray
protected class Switch_ValueColorAssignment_1_5_1_1_1 extends AssignmentToken  {
	
	public Switch_ValueColorAssignment_1_5_1_1_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getSwitchAccess().getValueColorAssignment_1_5_1_1_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ColorArray_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("ValueColor",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("ValueColor");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getColorArrayRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getSwitchAccess().getValueColorColorArrayParserRuleCall_1_5_1_1_1_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new Switch_CommaKeyword_1_5_1_1_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}


// "]"
protected class Switch_RightSquareBracketKeyword_1_5_1_2 extends KeywordToken  {
	
	public Switch_RightSquareBracketKeyword_1_5_1_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getSwitchAccess().getRightSquareBracketKeyword_1_5_1_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Switch_Group_1_5_1_1(lastRuleCallOrigin, this, 0, inst);
			case 1: return new Switch_ValueColorAssignment_1_5_1_0(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}



// ("visibility=[" (Visibility+=VisibilityRule ("," Visibility+=VisibilityRule)* "]"))?
protected class Switch_Group_1_6 extends GroupToken {
	
	public Switch_Group_1_6(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getSwitchAccess().getGroup_1_6();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Switch_Group_1_6_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "visibility=["
protected class Switch_VisibilityKeyword_1_6_0 extends KeywordToken  {
	
	public Switch_VisibilityKeyword_1_6_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getSwitchAccess().getVisibilityKeyword_1_6_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Switch_Group_1_5(lastRuleCallOrigin, this, 0, inst);
			case 1: return new Switch_Group_1_4(lastRuleCallOrigin, this, 1, inst);
			case 2: return new Switch_Group_1_3(lastRuleCallOrigin, this, 2, inst);
			case 3: return new Switch_Group_1_2(lastRuleCallOrigin, this, 3, inst);
			case 4: return new Switch_Group_1_1(lastRuleCallOrigin, this, 4, inst);
			case 5: return new Switch_Group_1_0(lastRuleCallOrigin, this, 5, inst);
			default: return null;
		}	
	}

}

// Visibility+=VisibilityRule ("," Visibility+=VisibilityRule)* "]"
protected class Switch_Group_1_6_1 extends GroupToken {
	
	public Switch_Group_1_6_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getSwitchAccess().getGroup_1_6_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Switch_RightSquareBracketKeyword_1_6_1_2(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// Visibility+=VisibilityRule
protected class Switch_VisibilityAssignment_1_6_1_0 extends AssignmentToken  {
	
	public Switch_VisibilityAssignment_1_6_1_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getSwitchAccess().getVisibilityAssignment_1_6_1_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new VisibilityRule_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("Visibility",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("Visibility");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getVisibilityRuleRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getSwitchAccess().getVisibilityVisibilityRuleParserRuleCall_1_6_1_0_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new Switch_VisibilityKeyword_1_6_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// ("," Visibility+=VisibilityRule)*
protected class Switch_Group_1_6_1_1 extends GroupToken {
	
	public Switch_Group_1_6_1_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getSwitchAccess().getGroup_1_6_1_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Switch_VisibilityAssignment_1_6_1_1_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// ","
protected class Switch_CommaKeyword_1_6_1_1_0 extends KeywordToken  {
	
	public Switch_CommaKeyword_1_6_1_1_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getSwitchAccess().getCommaKeyword_1_6_1_1_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Switch_Group_1_6_1_1(lastRuleCallOrigin, this, 0, inst);
			case 1: return new Switch_VisibilityAssignment_1_6_1_0(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// Visibility+=VisibilityRule
protected class Switch_VisibilityAssignment_1_6_1_1_1 extends AssignmentToken  {
	
	public Switch_VisibilityAssignment_1_6_1_1_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getSwitchAccess().getVisibilityAssignment_1_6_1_1_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new VisibilityRule_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("Visibility",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("Visibility");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getVisibilityRuleRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getSwitchAccess().getVisibilityVisibilityRuleParserRuleCall_1_6_1_1_1_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new Switch_CommaKeyword_1_6_1_1_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}


// "]"
protected class Switch_RightSquareBracketKeyword_1_6_1_2 extends KeywordToken  {
	
	public Switch_RightSquareBracketKeyword_1_6_1_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getSwitchAccess().getRightSquareBracketKeyword_1_6_1_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Switch_Group_1_6_1_1(lastRuleCallOrigin, this, 0, inst);
			case 1: return new Switch_VisibilityAssignment_1_6_1_0(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}





/************ end Rule Switch ****************/


/************ begin Rule Slider ****************
 *
 * Slider:
 * 
 * 	"Slider" ("item=" item=ItemRef & ("label=" label=(ID | STRING))? & ("icon=" icon=Icon)? & ("sendFrequency="
 * 
 * 	frequency=INT)? & switchEnabled?="switchSupport"? & ("labelcolor=[" (LabelColor+=ColorArray (","
 * 
 * 	LabelColor+=ColorArray)* "]"))? & ("valuecolor=[" (ValueColor+=ColorArray ("," ValueColor+=ColorArray)* "]"))? &
 * 
 * 	("visibility=[" (Visibility+=VisibilityRule ("," Visibility+=VisibilityRule)* "]"))?);
 *
 **/

// "Slider" ("item=" item=ItemRef & ("label=" label=(ID | STRING))? & ("icon=" icon=Icon)? & ("sendFrequency="
// 
// frequency=INT)? & switchEnabled?="switchSupport"? & ("labelcolor=[" (LabelColor+=ColorArray (","
// 
// LabelColor+=ColorArray)* "]"))? & ("valuecolor=[" (ValueColor+=ColorArray ("," ValueColor+=ColorArray)* "]"))? &
// 
// ("visibility=[" (Visibility+=VisibilityRule ("," Visibility+=VisibilityRule)* "]"))?)
protected class Slider_Group extends GroupToken {
	
	public Slider_Group(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getSliderAccess().getGroup();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Slider_UnorderedGroup_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getSliderRule().getType().getClassifier())
			return null;
		return eObjectConsumer;
	}

}

// "Slider"
protected class Slider_SliderKeyword_0 extends KeywordToken  {
	
	public Slider_SliderKeyword_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getSliderAccess().getSliderKeyword_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

}

// "item=" item=ItemRef & ("label=" label=(ID | STRING))? & ("icon=" icon=Icon)? & ("sendFrequency=" frequency=INT)? &
// 
// switchEnabled?="switchSupport"? & ("labelcolor=[" (LabelColor+=ColorArray ("," LabelColor+=ColorArray)* "]"))? &
// 
// ("valuecolor=[" (ValueColor+=ColorArray ("," ValueColor+=ColorArray)* "]"))? & ("visibility=["
// 
// (Visibility+=VisibilityRule ("," Visibility+=VisibilityRule)* "]"))?
protected class Slider_UnorderedGroup_1 extends UnorderedGroupToken {
	
	public Slider_UnorderedGroup_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public UnorderedGroup getGrammarElement() {
		return grammarAccess.getSliderAccess().getUnorderedGroup_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Slider_Group_1_7(lastRuleCallOrigin, this, 0, inst);
			case 1: return new Slider_Group_1_6(lastRuleCallOrigin, this, 1, inst);
			case 2: return new Slider_Group_1_5(lastRuleCallOrigin, this, 2, inst);
			case 3: return new Slider_SwitchEnabledAssignment_1_4(lastRuleCallOrigin, this, 3, inst);
			case 4: return new Slider_Group_1_3(lastRuleCallOrigin, this, 4, inst);
			case 5: return new Slider_Group_1_2(lastRuleCallOrigin, this, 5, inst);
			case 6: return new Slider_Group_1_1(lastRuleCallOrigin, this, 6, inst);
			case 7: return new Slider_Group_1_0(lastRuleCallOrigin, this, 7, inst);
			default: return null;
		}	
	}

}

// "item=" item=ItemRef
protected class Slider_Group_1_0 extends GroupToken {
	
	public Slider_Group_1_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getSliderAccess().getGroup_1_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Slider_ItemAssignment_1_0_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "item="
protected class Slider_ItemKeyword_1_0_0 extends KeywordToken  {
	
	public Slider_ItemKeyword_1_0_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getSliderAccess().getItemKeyword_1_0_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Slider_SliderKeyword_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// item=ItemRef
protected class Slider_ItemAssignment_1_0_1 extends AssignmentToken  {
	
	public Slider_ItemAssignment_1_0_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getSliderAccess().getItemAssignment_1_0_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Slider_ItemKeyword_1_0_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("item",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("item");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getSliderAccess().getItemItemRefParserRuleCall_1_0_1_0(), value, null)) {
			type = AssignmentType.DATATYPE_RULE_CALL;
			element = grammarAccess.getSliderAccess().getItemItemRefParserRuleCall_1_0_1_0();
			return obj;
		}
		return null;
	}

}


// ("label=" label=(ID | STRING))?
protected class Slider_Group_1_1 extends GroupToken {
	
	public Slider_Group_1_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getSliderAccess().getGroup_1_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Slider_LabelAssignment_1_1_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "label="
protected class Slider_LabelKeyword_1_1_0 extends KeywordToken  {
	
	public Slider_LabelKeyword_1_1_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getSliderAccess().getLabelKeyword_1_1_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Slider_Group_1_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// label=(ID | STRING)
protected class Slider_LabelAssignment_1_1_1 extends AssignmentToken  {
	
	public Slider_LabelAssignment_1_1_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getSliderAccess().getLabelAssignment_1_1_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Slider_LabelKeyword_1_1_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("label",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("label");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getSliderAccess().getLabelIDTerminalRuleCall_1_1_1_0_0(), value, null)) {
			type = AssignmentType.TERMINAL_RULE_CALL;
			element = grammarAccess.getSliderAccess().getLabelIDTerminalRuleCall_1_1_1_0_0();
			return obj;
		}
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getSliderAccess().getLabelSTRINGTerminalRuleCall_1_1_1_0_1(), value, null)) {
			type = AssignmentType.TERMINAL_RULE_CALL;
			element = grammarAccess.getSliderAccess().getLabelSTRINGTerminalRuleCall_1_1_1_0_1();
			return obj;
		}
		return null;
	}

}


// ("icon=" icon=Icon)?
protected class Slider_Group_1_2 extends GroupToken {
	
	public Slider_Group_1_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getSliderAccess().getGroup_1_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Slider_IconAssignment_1_2_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "icon="
protected class Slider_IconKeyword_1_2_0 extends KeywordToken  {
	
	public Slider_IconKeyword_1_2_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getSliderAccess().getIconKeyword_1_2_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Slider_Group_1_1(lastRuleCallOrigin, this, 0, inst);
			case 1: return new Slider_Group_1_0(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// icon=Icon
protected class Slider_IconAssignment_1_2_1 extends AssignmentToken  {
	
	public Slider_IconAssignment_1_2_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getSliderAccess().getIconAssignment_1_2_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Slider_IconKeyword_1_2_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("icon",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("icon");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getSliderAccess().getIconIconParserRuleCall_1_2_1_0(), value, null)) {
			type = AssignmentType.DATATYPE_RULE_CALL;
			element = grammarAccess.getSliderAccess().getIconIconParserRuleCall_1_2_1_0();
			return obj;
		}
		return null;
	}

}


// ("sendFrequency=" frequency=INT)?
protected class Slider_Group_1_3 extends GroupToken {
	
	public Slider_Group_1_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getSliderAccess().getGroup_1_3();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Slider_FrequencyAssignment_1_3_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "sendFrequency="
protected class Slider_SendFrequencyKeyword_1_3_0 extends KeywordToken  {
	
	public Slider_SendFrequencyKeyword_1_3_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getSliderAccess().getSendFrequencyKeyword_1_3_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Slider_Group_1_2(lastRuleCallOrigin, this, 0, inst);
			case 1: return new Slider_Group_1_1(lastRuleCallOrigin, this, 1, inst);
			case 2: return new Slider_Group_1_0(lastRuleCallOrigin, this, 2, inst);
			default: return null;
		}	
	}

}

// frequency=INT
protected class Slider_FrequencyAssignment_1_3_1 extends AssignmentToken  {
	
	public Slider_FrequencyAssignment_1_3_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getSliderAccess().getFrequencyAssignment_1_3_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Slider_SendFrequencyKeyword_1_3_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("frequency",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("frequency");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getSliderAccess().getFrequencyINTTerminalRuleCall_1_3_1_0(), value, null)) {
			type = AssignmentType.TERMINAL_RULE_CALL;
			element = grammarAccess.getSliderAccess().getFrequencyINTTerminalRuleCall_1_3_1_0();
			return obj;
		}
		return null;
	}

}


// switchEnabled?="switchSupport"?
protected class Slider_SwitchEnabledAssignment_1_4 extends AssignmentToken  {
	
	public Slider_SwitchEnabledAssignment_1_4(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getSliderAccess().getSwitchEnabledAssignment_1_4();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Slider_Group_1_3(lastRuleCallOrigin, this, 0, inst);
			case 1: return new Slider_Group_1_2(lastRuleCallOrigin, this, 1, inst);
			case 2: return new Slider_Group_1_1(lastRuleCallOrigin, this, 2, inst);
			case 3: return new Slider_Group_1_0(lastRuleCallOrigin, this, 3, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("switchEnabled",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("switchEnabled");
		if(Boolean.TRUE.equals(value)) { // org::eclipse::xtext::impl::KeywordImpl
			type = AssignmentType.KEYWORD;
			element = grammarAccess.getSliderAccess().getSwitchEnabledSwitchSupportKeyword_1_4_0();
			return obj;
		}
		return null;
	}

}

// ("labelcolor=[" (LabelColor+=ColorArray ("," LabelColor+=ColorArray)* "]"))?
protected class Slider_Group_1_5 extends GroupToken {
	
	public Slider_Group_1_5(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getSliderAccess().getGroup_1_5();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Slider_Group_1_5_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "labelcolor=["
protected class Slider_LabelcolorKeyword_1_5_0 extends KeywordToken  {
	
	public Slider_LabelcolorKeyword_1_5_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getSliderAccess().getLabelcolorKeyword_1_5_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Slider_SwitchEnabledAssignment_1_4(lastRuleCallOrigin, this, 0, inst);
			case 1: return new Slider_Group_1_3(lastRuleCallOrigin, this, 1, inst);
			case 2: return new Slider_Group_1_2(lastRuleCallOrigin, this, 2, inst);
			case 3: return new Slider_Group_1_1(lastRuleCallOrigin, this, 3, inst);
			case 4: return new Slider_Group_1_0(lastRuleCallOrigin, this, 4, inst);
			default: return null;
		}	
	}

}

// LabelColor+=ColorArray ("," LabelColor+=ColorArray)* "]"
protected class Slider_Group_1_5_1 extends GroupToken {
	
	public Slider_Group_1_5_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getSliderAccess().getGroup_1_5_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Slider_RightSquareBracketKeyword_1_5_1_2(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// LabelColor+=ColorArray
protected class Slider_LabelColorAssignment_1_5_1_0 extends AssignmentToken  {
	
	public Slider_LabelColorAssignment_1_5_1_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getSliderAccess().getLabelColorAssignment_1_5_1_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ColorArray_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("LabelColor",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("LabelColor");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getColorArrayRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getSliderAccess().getLabelColorColorArrayParserRuleCall_1_5_1_0_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new Slider_LabelcolorKeyword_1_5_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// ("," LabelColor+=ColorArray)*
protected class Slider_Group_1_5_1_1 extends GroupToken {
	
	public Slider_Group_1_5_1_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getSliderAccess().getGroup_1_5_1_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Slider_LabelColorAssignment_1_5_1_1_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// ","
protected class Slider_CommaKeyword_1_5_1_1_0 extends KeywordToken  {
	
	public Slider_CommaKeyword_1_5_1_1_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getSliderAccess().getCommaKeyword_1_5_1_1_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Slider_Group_1_5_1_1(lastRuleCallOrigin, this, 0, inst);
			case 1: return new Slider_LabelColorAssignment_1_5_1_0(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// LabelColor+=ColorArray
protected class Slider_LabelColorAssignment_1_5_1_1_1 extends AssignmentToken  {
	
	public Slider_LabelColorAssignment_1_5_1_1_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getSliderAccess().getLabelColorAssignment_1_5_1_1_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ColorArray_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("LabelColor",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("LabelColor");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getColorArrayRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getSliderAccess().getLabelColorColorArrayParserRuleCall_1_5_1_1_1_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new Slider_CommaKeyword_1_5_1_1_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}


// "]"
protected class Slider_RightSquareBracketKeyword_1_5_1_2 extends KeywordToken  {
	
	public Slider_RightSquareBracketKeyword_1_5_1_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getSliderAccess().getRightSquareBracketKeyword_1_5_1_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Slider_Group_1_5_1_1(lastRuleCallOrigin, this, 0, inst);
			case 1: return new Slider_LabelColorAssignment_1_5_1_0(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}



// ("valuecolor=[" (ValueColor+=ColorArray ("," ValueColor+=ColorArray)* "]"))?
protected class Slider_Group_1_6 extends GroupToken {
	
	public Slider_Group_1_6(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getSliderAccess().getGroup_1_6();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Slider_Group_1_6_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "valuecolor=["
protected class Slider_ValuecolorKeyword_1_6_0 extends KeywordToken  {
	
	public Slider_ValuecolorKeyword_1_6_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getSliderAccess().getValuecolorKeyword_1_6_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Slider_Group_1_5(lastRuleCallOrigin, this, 0, inst);
			case 1: return new Slider_SwitchEnabledAssignment_1_4(lastRuleCallOrigin, this, 1, inst);
			case 2: return new Slider_Group_1_3(lastRuleCallOrigin, this, 2, inst);
			case 3: return new Slider_Group_1_2(lastRuleCallOrigin, this, 3, inst);
			case 4: return new Slider_Group_1_1(lastRuleCallOrigin, this, 4, inst);
			case 5: return new Slider_Group_1_0(lastRuleCallOrigin, this, 5, inst);
			default: return null;
		}	
	}

}

// ValueColor+=ColorArray ("," ValueColor+=ColorArray)* "]"
protected class Slider_Group_1_6_1 extends GroupToken {
	
	public Slider_Group_1_6_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getSliderAccess().getGroup_1_6_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Slider_RightSquareBracketKeyword_1_6_1_2(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// ValueColor+=ColorArray
protected class Slider_ValueColorAssignment_1_6_1_0 extends AssignmentToken  {
	
	public Slider_ValueColorAssignment_1_6_1_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getSliderAccess().getValueColorAssignment_1_6_1_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ColorArray_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("ValueColor",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("ValueColor");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getColorArrayRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getSliderAccess().getValueColorColorArrayParserRuleCall_1_6_1_0_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new Slider_ValuecolorKeyword_1_6_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// ("," ValueColor+=ColorArray)*
protected class Slider_Group_1_6_1_1 extends GroupToken {
	
	public Slider_Group_1_6_1_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getSliderAccess().getGroup_1_6_1_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Slider_ValueColorAssignment_1_6_1_1_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// ","
protected class Slider_CommaKeyword_1_6_1_1_0 extends KeywordToken  {
	
	public Slider_CommaKeyword_1_6_1_1_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getSliderAccess().getCommaKeyword_1_6_1_1_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Slider_Group_1_6_1_1(lastRuleCallOrigin, this, 0, inst);
			case 1: return new Slider_ValueColorAssignment_1_6_1_0(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// ValueColor+=ColorArray
protected class Slider_ValueColorAssignment_1_6_1_1_1 extends AssignmentToken  {
	
	public Slider_ValueColorAssignment_1_6_1_1_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getSliderAccess().getValueColorAssignment_1_6_1_1_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ColorArray_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("ValueColor",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("ValueColor");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getColorArrayRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getSliderAccess().getValueColorColorArrayParserRuleCall_1_6_1_1_1_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new Slider_CommaKeyword_1_6_1_1_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}


// "]"
protected class Slider_RightSquareBracketKeyword_1_6_1_2 extends KeywordToken  {
	
	public Slider_RightSquareBracketKeyword_1_6_1_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getSliderAccess().getRightSquareBracketKeyword_1_6_1_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Slider_Group_1_6_1_1(lastRuleCallOrigin, this, 0, inst);
			case 1: return new Slider_ValueColorAssignment_1_6_1_0(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}



// ("visibility=[" (Visibility+=VisibilityRule ("," Visibility+=VisibilityRule)* "]"))?
protected class Slider_Group_1_7 extends GroupToken {
	
	public Slider_Group_1_7(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getSliderAccess().getGroup_1_7();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Slider_Group_1_7_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "visibility=["
protected class Slider_VisibilityKeyword_1_7_0 extends KeywordToken  {
	
	public Slider_VisibilityKeyword_1_7_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getSliderAccess().getVisibilityKeyword_1_7_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Slider_Group_1_6(lastRuleCallOrigin, this, 0, inst);
			case 1: return new Slider_Group_1_5(lastRuleCallOrigin, this, 1, inst);
			case 2: return new Slider_SwitchEnabledAssignment_1_4(lastRuleCallOrigin, this, 2, inst);
			case 3: return new Slider_Group_1_3(lastRuleCallOrigin, this, 3, inst);
			case 4: return new Slider_Group_1_2(lastRuleCallOrigin, this, 4, inst);
			case 5: return new Slider_Group_1_1(lastRuleCallOrigin, this, 5, inst);
			case 6: return new Slider_Group_1_0(lastRuleCallOrigin, this, 6, inst);
			default: return null;
		}	
	}

}

// Visibility+=VisibilityRule ("," Visibility+=VisibilityRule)* "]"
protected class Slider_Group_1_7_1 extends GroupToken {
	
	public Slider_Group_1_7_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getSliderAccess().getGroup_1_7_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Slider_RightSquareBracketKeyword_1_7_1_2(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// Visibility+=VisibilityRule
protected class Slider_VisibilityAssignment_1_7_1_0 extends AssignmentToken  {
	
	public Slider_VisibilityAssignment_1_7_1_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getSliderAccess().getVisibilityAssignment_1_7_1_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new VisibilityRule_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("Visibility",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("Visibility");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getVisibilityRuleRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getSliderAccess().getVisibilityVisibilityRuleParserRuleCall_1_7_1_0_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new Slider_VisibilityKeyword_1_7_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// ("," Visibility+=VisibilityRule)*
protected class Slider_Group_1_7_1_1 extends GroupToken {
	
	public Slider_Group_1_7_1_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getSliderAccess().getGroup_1_7_1_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Slider_VisibilityAssignment_1_7_1_1_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// ","
protected class Slider_CommaKeyword_1_7_1_1_0 extends KeywordToken  {
	
	public Slider_CommaKeyword_1_7_1_1_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getSliderAccess().getCommaKeyword_1_7_1_1_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Slider_Group_1_7_1_1(lastRuleCallOrigin, this, 0, inst);
			case 1: return new Slider_VisibilityAssignment_1_7_1_0(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// Visibility+=VisibilityRule
protected class Slider_VisibilityAssignment_1_7_1_1_1 extends AssignmentToken  {
	
	public Slider_VisibilityAssignment_1_7_1_1_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getSliderAccess().getVisibilityAssignment_1_7_1_1_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new VisibilityRule_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("Visibility",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("Visibility");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getVisibilityRuleRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getSliderAccess().getVisibilityVisibilityRuleParserRuleCall_1_7_1_1_1_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new Slider_CommaKeyword_1_7_1_1_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}


// "]"
protected class Slider_RightSquareBracketKeyword_1_7_1_2 extends KeywordToken  {
	
	public Slider_RightSquareBracketKeyword_1_7_1_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getSliderAccess().getRightSquareBracketKeyword_1_7_1_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Slider_Group_1_7_1_1(lastRuleCallOrigin, this, 0, inst);
			case 1: return new Slider_VisibilityAssignment_1_7_1_0(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}





/************ end Rule Slider ****************/


/************ begin Rule Selection ****************
 *
 * Selection:
 * 
 * 	"Selection" ("item=" item=ItemRef & ("label=" label=(ID | STRING))? & ("icon=" icon=Icon)? & ("mappings=["
 * 
 * 	mappings+=Mapping ("," mappings+=Mapping)* "]")? & ("labelcolor=[" (LabelColor+=ColorArray (","
 * 
 * 	LabelColor+=ColorArray)* "]"))? & ("valuecolor=[" (ValueColor+=ColorArray ("," ValueColor+=ColorArray)* "]"))? &
 * 
 * 	("visibility=[" (Visibility+=VisibilityRule ("," Visibility+=VisibilityRule)* "]"))?);
 *
 **/

// "Selection" ("item=" item=ItemRef & ("label=" label=(ID | STRING))? & ("icon=" icon=Icon)? & ("mappings=["
// 
// mappings+=Mapping ("," mappings+=Mapping)* "]")? & ("labelcolor=[" (LabelColor+=ColorArray (","
// 
// LabelColor+=ColorArray)* "]"))? & ("valuecolor=[" (ValueColor+=ColorArray ("," ValueColor+=ColorArray)* "]"))? &
// 
// ("visibility=[" (Visibility+=VisibilityRule ("," Visibility+=VisibilityRule)* "]"))?)
protected class Selection_Group extends GroupToken {
	
	public Selection_Group(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getSelectionAccess().getGroup();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Selection_UnorderedGroup_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getSelectionRule().getType().getClassifier())
			return null;
		return eObjectConsumer;
	}

}

// "Selection"
protected class Selection_SelectionKeyword_0 extends KeywordToken  {
	
	public Selection_SelectionKeyword_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getSelectionAccess().getSelectionKeyword_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

}

// "item=" item=ItemRef & ("label=" label=(ID | STRING))? & ("icon=" icon=Icon)? & ("mappings=[" mappings+=Mapping (","
// 
// mappings+=Mapping)* "]")? & ("labelcolor=[" (LabelColor+=ColorArray ("," LabelColor+=ColorArray)* "]"))? &
// 
// ("valuecolor=[" (ValueColor+=ColorArray ("," ValueColor+=ColorArray)* "]"))? & ("visibility=["
// 
// (Visibility+=VisibilityRule ("," Visibility+=VisibilityRule)* "]"))?
protected class Selection_UnorderedGroup_1 extends UnorderedGroupToken {
	
	public Selection_UnorderedGroup_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public UnorderedGroup getGrammarElement() {
		return grammarAccess.getSelectionAccess().getUnorderedGroup_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Selection_Group_1_6(lastRuleCallOrigin, this, 0, inst);
			case 1: return new Selection_Group_1_5(lastRuleCallOrigin, this, 1, inst);
			case 2: return new Selection_Group_1_4(lastRuleCallOrigin, this, 2, inst);
			case 3: return new Selection_Group_1_3(lastRuleCallOrigin, this, 3, inst);
			case 4: return new Selection_Group_1_2(lastRuleCallOrigin, this, 4, inst);
			case 5: return new Selection_Group_1_1(lastRuleCallOrigin, this, 5, inst);
			case 6: return new Selection_Group_1_0(lastRuleCallOrigin, this, 6, inst);
			default: return null;
		}	
	}

}

// "item=" item=ItemRef
protected class Selection_Group_1_0 extends GroupToken {
	
	public Selection_Group_1_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getSelectionAccess().getGroup_1_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Selection_ItemAssignment_1_0_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "item="
protected class Selection_ItemKeyword_1_0_0 extends KeywordToken  {
	
	public Selection_ItemKeyword_1_0_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getSelectionAccess().getItemKeyword_1_0_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Selection_SelectionKeyword_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// item=ItemRef
protected class Selection_ItemAssignment_1_0_1 extends AssignmentToken  {
	
	public Selection_ItemAssignment_1_0_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getSelectionAccess().getItemAssignment_1_0_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Selection_ItemKeyword_1_0_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("item",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("item");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getSelectionAccess().getItemItemRefParserRuleCall_1_0_1_0(), value, null)) {
			type = AssignmentType.DATATYPE_RULE_CALL;
			element = grammarAccess.getSelectionAccess().getItemItemRefParserRuleCall_1_0_1_0();
			return obj;
		}
		return null;
	}

}


// ("label=" label=(ID | STRING))?
protected class Selection_Group_1_1 extends GroupToken {
	
	public Selection_Group_1_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getSelectionAccess().getGroup_1_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Selection_LabelAssignment_1_1_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "label="
protected class Selection_LabelKeyword_1_1_0 extends KeywordToken  {
	
	public Selection_LabelKeyword_1_1_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getSelectionAccess().getLabelKeyword_1_1_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Selection_Group_1_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// label=(ID | STRING)
protected class Selection_LabelAssignment_1_1_1 extends AssignmentToken  {
	
	public Selection_LabelAssignment_1_1_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getSelectionAccess().getLabelAssignment_1_1_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Selection_LabelKeyword_1_1_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("label",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("label");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getSelectionAccess().getLabelIDTerminalRuleCall_1_1_1_0_0(), value, null)) {
			type = AssignmentType.TERMINAL_RULE_CALL;
			element = grammarAccess.getSelectionAccess().getLabelIDTerminalRuleCall_1_1_1_0_0();
			return obj;
		}
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getSelectionAccess().getLabelSTRINGTerminalRuleCall_1_1_1_0_1(), value, null)) {
			type = AssignmentType.TERMINAL_RULE_CALL;
			element = grammarAccess.getSelectionAccess().getLabelSTRINGTerminalRuleCall_1_1_1_0_1();
			return obj;
		}
		return null;
	}

}


// ("icon=" icon=Icon)?
protected class Selection_Group_1_2 extends GroupToken {
	
	public Selection_Group_1_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getSelectionAccess().getGroup_1_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Selection_IconAssignment_1_2_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "icon="
protected class Selection_IconKeyword_1_2_0 extends KeywordToken  {
	
	public Selection_IconKeyword_1_2_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getSelectionAccess().getIconKeyword_1_2_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Selection_Group_1_1(lastRuleCallOrigin, this, 0, inst);
			case 1: return new Selection_Group_1_0(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// icon=Icon
protected class Selection_IconAssignment_1_2_1 extends AssignmentToken  {
	
	public Selection_IconAssignment_1_2_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getSelectionAccess().getIconAssignment_1_2_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Selection_IconKeyword_1_2_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("icon",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("icon");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getSelectionAccess().getIconIconParserRuleCall_1_2_1_0(), value, null)) {
			type = AssignmentType.DATATYPE_RULE_CALL;
			element = grammarAccess.getSelectionAccess().getIconIconParserRuleCall_1_2_1_0();
			return obj;
		}
		return null;
	}

}


// ("mappings=[" mappings+=Mapping ("," mappings+=Mapping)* "]")?
protected class Selection_Group_1_3 extends GroupToken {
	
	public Selection_Group_1_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getSelectionAccess().getGroup_1_3();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Selection_RightSquareBracketKeyword_1_3_3(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "mappings=["
protected class Selection_MappingsKeyword_1_3_0 extends KeywordToken  {
	
	public Selection_MappingsKeyword_1_3_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getSelectionAccess().getMappingsKeyword_1_3_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Selection_Group_1_2(lastRuleCallOrigin, this, 0, inst);
			case 1: return new Selection_Group_1_1(lastRuleCallOrigin, this, 1, inst);
			case 2: return new Selection_Group_1_0(lastRuleCallOrigin, this, 2, inst);
			default: return null;
		}	
	}

}

// mappings+=Mapping
protected class Selection_MappingsAssignment_1_3_1 extends AssignmentToken  {
	
	public Selection_MappingsAssignment_1_3_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getSelectionAccess().getMappingsAssignment_1_3_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Mapping_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("mappings",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("mappings");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getMappingRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getSelectionAccess().getMappingsMappingParserRuleCall_1_3_1_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new Selection_MappingsKeyword_1_3_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// ("," mappings+=Mapping)*
protected class Selection_Group_1_3_2 extends GroupToken {
	
	public Selection_Group_1_3_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getSelectionAccess().getGroup_1_3_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Selection_MappingsAssignment_1_3_2_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// ","
protected class Selection_CommaKeyword_1_3_2_0 extends KeywordToken  {
	
	public Selection_CommaKeyword_1_3_2_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getSelectionAccess().getCommaKeyword_1_3_2_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Selection_Group_1_3_2(lastRuleCallOrigin, this, 0, inst);
			case 1: return new Selection_MappingsAssignment_1_3_1(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// mappings+=Mapping
protected class Selection_MappingsAssignment_1_3_2_1 extends AssignmentToken  {
	
	public Selection_MappingsAssignment_1_3_2_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getSelectionAccess().getMappingsAssignment_1_3_2_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Mapping_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("mappings",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("mappings");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getMappingRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getSelectionAccess().getMappingsMappingParserRuleCall_1_3_2_1_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new Selection_CommaKeyword_1_3_2_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}


// "]"
protected class Selection_RightSquareBracketKeyword_1_3_3 extends KeywordToken  {
	
	public Selection_RightSquareBracketKeyword_1_3_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getSelectionAccess().getRightSquareBracketKeyword_1_3_3();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Selection_Group_1_3_2(lastRuleCallOrigin, this, 0, inst);
			case 1: return new Selection_MappingsAssignment_1_3_1(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}


// ("labelcolor=[" (LabelColor+=ColorArray ("," LabelColor+=ColorArray)* "]"))?
protected class Selection_Group_1_4 extends GroupToken {
	
	public Selection_Group_1_4(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getSelectionAccess().getGroup_1_4();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Selection_Group_1_4_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "labelcolor=["
protected class Selection_LabelcolorKeyword_1_4_0 extends KeywordToken  {
	
	public Selection_LabelcolorKeyword_1_4_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getSelectionAccess().getLabelcolorKeyword_1_4_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Selection_Group_1_3(lastRuleCallOrigin, this, 0, inst);
			case 1: return new Selection_Group_1_2(lastRuleCallOrigin, this, 1, inst);
			case 2: return new Selection_Group_1_1(lastRuleCallOrigin, this, 2, inst);
			case 3: return new Selection_Group_1_0(lastRuleCallOrigin, this, 3, inst);
			default: return null;
		}	
	}

}

// LabelColor+=ColorArray ("," LabelColor+=ColorArray)* "]"
protected class Selection_Group_1_4_1 extends GroupToken {
	
	public Selection_Group_1_4_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getSelectionAccess().getGroup_1_4_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Selection_RightSquareBracketKeyword_1_4_1_2(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// LabelColor+=ColorArray
protected class Selection_LabelColorAssignment_1_4_1_0 extends AssignmentToken  {
	
	public Selection_LabelColorAssignment_1_4_1_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getSelectionAccess().getLabelColorAssignment_1_4_1_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ColorArray_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("LabelColor",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("LabelColor");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getColorArrayRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getSelectionAccess().getLabelColorColorArrayParserRuleCall_1_4_1_0_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new Selection_LabelcolorKeyword_1_4_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// ("," LabelColor+=ColorArray)*
protected class Selection_Group_1_4_1_1 extends GroupToken {
	
	public Selection_Group_1_4_1_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getSelectionAccess().getGroup_1_4_1_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Selection_LabelColorAssignment_1_4_1_1_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// ","
protected class Selection_CommaKeyword_1_4_1_1_0 extends KeywordToken  {
	
	public Selection_CommaKeyword_1_4_1_1_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getSelectionAccess().getCommaKeyword_1_4_1_1_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Selection_Group_1_4_1_1(lastRuleCallOrigin, this, 0, inst);
			case 1: return new Selection_LabelColorAssignment_1_4_1_0(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// LabelColor+=ColorArray
protected class Selection_LabelColorAssignment_1_4_1_1_1 extends AssignmentToken  {
	
	public Selection_LabelColorAssignment_1_4_1_1_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getSelectionAccess().getLabelColorAssignment_1_4_1_1_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ColorArray_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("LabelColor",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("LabelColor");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getColorArrayRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getSelectionAccess().getLabelColorColorArrayParserRuleCall_1_4_1_1_1_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new Selection_CommaKeyword_1_4_1_1_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}


// "]"
protected class Selection_RightSquareBracketKeyword_1_4_1_2 extends KeywordToken  {
	
	public Selection_RightSquareBracketKeyword_1_4_1_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getSelectionAccess().getRightSquareBracketKeyword_1_4_1_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Selection_Group_1_4_1_1(lastRuleCallOrigin, this, 0, inst);
			case 1: return new Selection_LabelColorAssignment_1_4_1_0(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}



// ("valuecolor=[" (ValueColor+=ColorArray ("," ValueColor+=ColorArray)* "]"))?
protected class Selection_Group_1_5 extends GroupToken {
	
	public Selection_Group_1_5(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getSelectionAccess().getGroup_1_5();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Selection_Group_1_5_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "valuecolor=["
protected class Selection_ValuecolorKeyword_1_5_0 extends KeywordToken  {
	
	public Selection_ValuecolorKeyword_1_5_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getSelectionAccess().getValuecolorKeyword_1_5_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Selection_Group_1_4(lastRuleCallOrigin, this, 0, inst);
			case 1: return new Selection_Group_1_3(lastRuleCallOrigin, this, 1, inst);
			case 2: return new Selection_Group_1_2(lastRuleCallOrigin, this, 2, inst);
			case 3: return new Selection_Group_1_1(lastRuleCallOrigin, this, 3, inst);
			case 4: return new Selection_Group_1_0(lastRuleCallOrigin, this, 4, inst);
			default: return null;
		}	
	}

}

// ValueColor+=ColorArray ("," ValueColor+=ColorArray)* "]"
protected class Selection_Group_1_5_1 extends GroupToken {
	
	public Selection_Group_1_5_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getSelectionAccess().getGroup_1_5_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Selection_RightSquareBracketKeyword_1_5_1_2(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// ValueColor+=ColorArray
protected class Selection_ValueColorAssignment_1_5_1_0 extends AssignmentToken  {
	
	public Selection_ValueColorAssignment_1_5_1_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getSelectionAccess().getValueColorAssignment_1_5_1_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ColorArray_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("ValueColor",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("ValueColor");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getColorArrayRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getSelectionAccess().getValueColorColorArrayParserRuleCall_1_5_1_0_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new Selection_ValuecolorKeyword_1_5_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// ("," ValueColor+=ColorArray)*
protected class Selection_Group_1_5_1_1 extends GroupToken {
	
	public Selection_Group_1_5_1_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getSelectionAccess().getGroup_1_5_1_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Selection_ValueColorAssignment_1_5_1_1_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// ","
protected class Selection_CommaKeyword_1_5_1_1_0 extends KeywordToken  {
	
	public Selection_CommaKeyword_1_5_1_1_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getSelectionAccess().getCommaKeyword_1_5_1_1_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Selection_Group_1_5_1_1(lastRuleCallOrigin, this, 0, inst);
			case 1: return new Selection_ValueColorAssignment_1_5_1_0(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// ValueColor+=ColorArray
protected class Selection_ValueColorAssignment_1_5_1_1_1 extends AssignmentToken  {
	
	public Selection_ValueColorAssignment_1_5_1_1_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getSelectionAccess().getValueColorAssignment_1_5_1_1_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ColorArray_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("ValueColor",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("ValueColor");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getColorArrayRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getSelectionAccess().getValueColorColorArrayParserRuleCall_1_5_1_1_1_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new Selection_CommaKeyword_1_5_1_1_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}


// "]"
protected class Selection_RightSquareBracketKeyword_1_5_1_2 extends KeywordToken  {
	
	public Selection_RightSquareBracketKeyword_1_5_1_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getSelectionAccess().getRightSquareBracketKeyword_1_5_1_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Selection_Group_1_5_1_1(lastRuleCallOrigin, this, 0, inst);
			case 1: return new Selection_ValueColorAssignment_1_5_1_0(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}



// ("visibility=[" (Visibility+=VisibilityRule ("," Visibility+=VisibilityRule)* "]"))?
protected class Selection_Group_1_6 extends GroupToken {
	
	public Selection_Group_1_6(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getSelectionAccess().getGroup_1_6();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Selection_Group_1_6_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "visibility=["
protected class Selection_VisibilityKeyword_1_6_0 extends KeywordToken  {
	
	public Selection_VisibilityKeyword_1_6_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getSelectionAccess().getVisibilityKeyword_1_6_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Selection_Group_1_5(lastRuleCallOrigin, this, 0, inst);
			case 1: return new Selection_Group_1_4(lastRuleCallOrigin, this, 1, inst);
			case 2: return new Selection_Group_1_3(lastRuleCallOrigin, this, 2, inst);
			case 3: return new Selection_Group_1_2(lastRuleCallOrigin, this, 3, inst);
			case 4: return new Selection_Group_1_1(lastRuleCallOrigin, this, 4, inst);
			case 5: return new Selection_Group_1_0(lastRuleCallOrigin, this, 5, inst);
			default: return null;
		}	
	}

}

// Visibility+=VisibilityRule ("," Visibility+=VisibilityRule)* "]"
protected class Selection_Group_1_6_1 extends GroupToken {
	
	public Selection_Group_1_6_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getSelectionAccess().getGroup_1_6_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Selection_RightSquareBracketKeyword_1_6_1_2(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// Visibility+=VisibilityRule
protected class Selection_VisibilityAssignment_1_6_1_0 extends AssignmentToken  {
	
	public Selection_VisibilityAssignment_1_6_1_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getSelectionAccess().getVisibilityAssignment_1_6_1_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new VisibilityRule_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("Visibility",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("Visibility");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getVisibilityRuleRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getSelectionAccess().getVisibilityVisibilityRuleParserRuleCall_1_6_1_0_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new Selection_VisibilityKeyword_1_6_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// ("," Visibility+=VisibilityRule)*
protected class Selection_Group_1_6_1_1 extends GroupToken {
	
	public Selection_Group_1_6_1_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getSelectionAccess().getGroup_1_6_1_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Selection_VisibilityAssignment_1_6_1_1_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// ","
protected class Selection_CommaKeyword_1_6_1_1_0 extends KeywordToken  {
	
	public Selection_CommaKeyword_1_6_1_1_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getSelectionAccess().getCommaKeyword_1_6_1_1_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Selection_Group_1_6_1_1(lastRuleCallOrigin, this, 0, inst);
			case 1: return new Selection_VisibilityAssignment_1_6_1_0(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// Visibility+=VisibilityRule
protected class Selection_VisibilityAssignment_1_6_1_1_1 extends AssignmentToken  {
	
	public Selection_VisibilityAssignment_1_6_1_1_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getSelectionAccess().getVisibilityAssignment_1_6_1_1_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new VisibilityRule_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("Visibility",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("Visibility");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getVisibilityRuleRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getSelectionAccess().getVisibilityVisibilityRuleParserRuleCall_1_6_1_1_1_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new Selection_CommaKeyword_1_6_1_1_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}


// "]"
protected class Selection_RightSquareBracketKeyword_1_6_1_2 extends KeywordToken  {
	
	public Selection_RightSquareBracketKeyword_1_6_1_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getSelectionAccess().getRightSquareBracketKeyword_1_6_1_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Selection_Group_1_6_1_1(lastRuleCallOrigin, this, 0, inst);
			case 1: return new Selection_VisibilityAssignment_1_6_1_0(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}





/************ end Rule Selection ****************/


/************ begin Rule List ****************
 *
 * List:
 * 
 * 	"List" ("item=" item=ItemRef & ("label=" label=(ID | STRING))? & ("icon=" icon=Icon)? ("separator=" separator=STRING)
 * 
 * 	& ("labelcolor=[" (LabelColor+=ColorArray ("," LabelColor+=ColorArray)* "]"))? & ("valuecolor=["
 * 
 * 	(ValueColor+=ColorArray ("," ValueColor+=ColorArray)* "]"))? & ("visibility=[" (Visibility+=VisibilityRule (","
 * 
 * 	Visibility+=VisibilityRule)* "]"))?);
 *
 **/

// "List" ("item=" item=ItemRef & ("label=" label=(ID | STRING))? & ("icon=" icon=Icon)? ("separator=" separator=STRING) &
// 
// ("labelcolor=[" (LabelColor+=ColorArray ("," LabelColor+=ColorArray)* "]"))? & ("valuecolor=[" (ValueColor+=ColorArray
// 
// ("," ValueColor+=ColorArray)* "]"))? & ("visibility=[" (Visibility+=VisibilityRule ("," Visibility+=VisibilityRule)*
// 
// "]"))?)
protected class List_Group extends GroupToken {
	
	public List_Group(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getListAccess().getGroup();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new List_UnorderedGroup_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getListRule().getType().getClassifier())
			return null;
		return eObjectConsumer;
	}

}

// "List"
protected class List_ListKeyword_0 extends KeywordToken  {
	
	public List_ListKeyword_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getListAccess().getListKeyword_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

}

// "item=" item=ItemRef & ("label=" label=(ID | STRING))? & ("icon=" icon=Icon)? ("separator=" separator=STRING) &
// 
// ("labelcolor=[" (LabelColor+=ColorArray ("," LabelColor+=ColorArray)* "]"))? & ("valuecolor=[" (ValueColor+=ColorArray
// 
// ("," ValueColor+=ColorArray)* "]"))? & ("visibility=[" (Visibility+=VisibilityRule ("," Visibility+=VisibilityRule)*
// 
// "]"))?
protected class List_UnorderedGroup_1 extends UnorderedGroupToken {
	
	public List_UnorderedGroup_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public UnorderedGroup getGrammarElement() {
		return grammarAccess.getListAccess().getUnorderedGroup_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new List_Group_1_5(lastRuleCallOrigin, this, 0, inst);
			case 1: return new List_Group_1_4(lastRuleCallOrigin, this, 1, inst);
			case 2: return new List_Group_1_3(lastRuleCallOrigin, this, 2, inst);
			case 3: return new List_Group_1_2(lastRuleCallOrigin, this, 3, inst);
			default: return null;
		}	
	}

}

// "item=" item=ItemRef
protected class List_Group_1_0 extends GroupToken {
	
	public List_Group_1_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getListAccess().getGroup_1_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new List_ItemAssignment_1_0_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "item="
protected class List_ItemKeyword_1_0_0 extends KeywordToken  {
	
	public List_ItemKeyword_1_0_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getListAccess().getItemKeyword_1_0_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new List_ListKeyword_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// item=ItemRef
protected class List_ItemAssignment_1_0_1 extends AssignmentToken  {
	
	public List_ItemAssignment_1_0_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getListAccess().getItemAssignment_1_0_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new List_ItemKeyword_1_0_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("item",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("item");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getListAccess().getItemItemRefParserRuleCall_1_0_1_0(), value, null)) {
			type = AssignmentType.DATATYPE_RULE_CALL;
			element = grammarAccess.getListAccess().getItemItemRefParserRuleCall_1_0_1_0();
			return obj;
		}
		return null;
	}

}


// ("label=" label=(ID | STRING))?
protected class List_Group_1_1 extends GroupToken {
	
	public List_Group_1_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getListAccess().getGroup_1_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new List_LabelAssignment_1_1_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "label="
protected class List_LabelKeyword_1_1_0 extends KeywordToken  {
	
	public List_LabelKeyword_1_1_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getListAccess().getLabelKeyword_1_1_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new List_Group_1_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// label=(ID | STRING)
protected class List_LabelAssignment_1_1_1 extends AssignmentToken  {
	
	public List_LabelAssignment_1_1_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getListAccess().getLabelAssignment_1_1_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new List_LabelKeyword_1_1_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("label",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("label");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getListAccess().getLabelIDTerminalRuleCall_1_1_1_0_0(), value, null)) {
			type = AssignmentType.TERMINAL_RULE_CALL;
			element = grammarAccess.getListAccess().getLabelIDTerminalRuleCall_1_1_1_0_0();
			return obj;
		}
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getListAccess().getLabelSTRINGTerminalRuleCall_1_1_1_0_1(), value, null)) {
			type = AssignmentType.TERMINAL_RULE_CALL;
			element = grammarAccess.getListAccess().getLabelSTRINGTerminalRuleCall_1_1_1_0_1();
			return obj;
		}
		return null;
	}

}


// ("icon=" icon=Icon)? ("separator=" separator=STRING)
protected class List_Group_1_2 extends GroupToken {
	
	public List_Group_1_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getListAccess().getGroup_1_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new List_Group_1_2_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// ("icon=" icon=Icon)?
protected class List_Group_1_2_0 extends GroupToken {
	
	public List_Group_1_2_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getListAccess().getGroup_1_2_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new List_IconAssignment_1_2_0_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "icon="
protected class List_IconKeyword_1_2_0_0 extends KeywordToken  {
	
	public List_IconKeyword_1_2_0_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getListAccess().getIconKeyword_1_2_0_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new List_Group_1_1(lastRuleCallOrigin, this, 0, inst);
			case 1: return new List_Group_1_0(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// icon=Icon
protected class List_IconAssignment_1_2_0_1 extends AssignmentToken  {
	
	public List_IconAssignment_1_2_0_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getListAccess().getIconAssignment_1_2_0_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new List_IconKeyword_1_2_0_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("icon",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("icon");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getListAccess().getIconIconParserRuleCall_1_2_0_1_0(), value, null)) {
			type = AssignmentType.DATATYPE_RULE_CALL;
			element = grammarAccess.getListAccess().getIconIconParserRuleCall_1_2_0_1_0();
			return obj;
		}
		return null;
	}

}


// "separator=" separator=STRING
protected class List_Group_1_2_1 extends GroupToken {
	
	public List_Group_1_2_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getListAccess().getGroup_1_2_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new List_SeparatorAssignment_1_2_1_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "separator="
protected class List_SeparatorKeyword_1_2_1_0 extends KeywordToken  {
	
	public List_SeparatorKeyword_1_2_1_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getListAccess().getSeparatorKeyword_1_2_1_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new List_Group_1_2_0(lastRuleCallOrigin, this, 0, inst);
			case 1: return new List_Group_1_1(lastRuleCallOrigin, this, 1, inst);
			case 2: return new List_Group_1_0(lastRuleCallOrigin, this, 2, inst);
			default: return null;
		}	
	}

}

// separator=STRING
protected class List_SeparatorAssignment_1_2_1_1 extends AssignmentToken  {
	
	public List_SeparatorAssignment_1_2_1_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getListAccess().getSeparatorAssignment_1_2_1_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new List_SeparatorKeyword_1_2_1_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("separator",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("separator");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getListAccess().getSeparatorSTRINGTerminalRuleCall_1_2_1_1_0(), value, null)) {
			type = AssignmentType.TERMINAL_RULE_CALL;
			element = grammarAccess.getListAccess().getSeparatorSTRINGTerminalRuleCall_1_2_1_1_0();
			return obj;
		}
		return null;
	}

}



// ("labelcolor=[" (LabelColor+=ColorArray ("," LabelColor+=ColorArray)* "]"))?
protected class List_Group_1_3 extends GroupToken {
	
	public List_Group_1_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getListAccess().getGroup_1_3();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new List_Group_1_3_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "labelcolor=["
protected class List_LabelcolorKeyword_1_3_0 extends KeywordToken  {
	
	public List_LabelcolorKeyword_1_3_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getListAccess().getLabelcolorKeyword_1_3_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new List_Group_1_2(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// LabelColor+=ColorArray ("," LabelColor+=ColorArray)* "]"
protected class List_Group_1_3_1 extends GroupToken {
	
	public List_Group_1_3_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getListAccess().getGroup_1_3_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new List_RightSquareBracketKeyword_1_3_1_2(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// LabelColor+=ColorArray
protected class List_LabelColorAssignment_1_3_1_0 extends AssignmentToken  {
	
	public List_LabelColorAssignment_1_3_1_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getListAccess().getLabelColorAssignment_1_3_1_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ColorArray_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("LabelColor",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("LabelColor");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getColorArrayRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getListAccess().getLabelColorColorArrayParserRuleCall_1_3_1_0_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new List_LabelcolorKeyword_1_3_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// ("," LabelColor+=ColorArray)*
protected class List_Group_1_3_1_1 extends GroupToken {
	
	public List_Group_1_3_1_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getListAccess().getGroup_1_3_1_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new List_LabelColorAssignment_1_3_1_1_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// ","
protected class List_CommaKeyword_1_3_1_1_0 extends KeywordToken  {
	
	public List_CommaKeyword_1_3_1_1_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getListAccess().getCommaKeyword_1_3_1_1_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new List_Group_1_3_1_1(lastRuleCallOrigin, this, 0, inst);
			case 1: return new List_LabelColorAssignment_1_3_1_0(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// LabelColor+=ColorArray
protected class List_LabelColorAssignment_1_3_1_1_1 extends AssignmentToken  {
	
	public List_LabelColorAssignment_1_3_1_1_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getListAccess().getLabelColorAssignment_1_3_1_1_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ColorArray_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("LabelColor",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("LabelColor");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getColorArrayRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getListAccess().getLabelColorColorArrayParserRuleCall_1_3_1_1_1_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new List_CommaKeyword_1_3_1_1_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}


// "]"
protected class List_RightSquareBracketKeyword_1_3_1_2 extends KeywordToken  {
	
	public List_RightSquareBracketKeyword_1_3_1_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getListAccess().getRightSquareBracketKeyword_1_3_1_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new List_Group_1_3_1_1(lastRuleCallOrigin, this, 0, inst);
			case 1: return new List_LabelColorAssignment_1_3_1_0(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}



// ("valuecolor=[" (ValueColor+=ColorArray ("," ValueColor+=ColorArray)* "]"))?
protected class List_Group_1_4 extends GroupToken {
	
	public List_Group_1_4(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getListAccess().getGroup_1_4();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new List_Group_1_4_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "valuecolor=["
protected class List_ValuecolorKeyword_1_4_0 extends KeywordToken  {
	
	public List_ValuecolorKeyword_1_4_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getListAccess().getValuecolorKeyword_1_4_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new List_Group_1_3(lastRuleCallOrigin, this, 0, inst);
			case 1: return new List_Group_1_2(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// ValueColor+=ColorArray ("," ValueColor+=ColorArray)* "]"
protected class List_Group_1_4_1 extends GroupToken {
	
	public List_Group_1_4_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getListAccess().getGroup_1_4_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new List_RightSquareBracketKeyword_1_4_1_2(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// ValueColor+=ColorArray
protected class List_ValueColorAssignment_1_4_1_0 extends AssignmentToken  {
	
	public List_ValueColorAssignment_1_4_1_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getListAccess().getValueColorAssignment_1_4_1_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ColorArray_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("ValueColor",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("ValueColor");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getColorArrayRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getListAccess().getValueColorColorArrayParserRuleCall_1_4_1_0_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new List_ValuecolorKeyword_1_4_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// ("," ValueColor+=ColorArray)*
protected class List_Group_1_4_1_1 extends GroupToken {
	
	public List_Group_1_4_1_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getListAccess().getGroup_1_4_1_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new List_ValueColorAssignment_1_4_1_1_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// ","
protected class List_CommaKeyword_1_4_1_1_0 extends KeywordToken  {
	
	public List_CommaKeyword_1_4_1_1_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getListAccess().getCommaKeyword_1_4_1_1_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new List_Group_1_4_1_1(lastRuleCallOrigin, this, 0, inst);
			case 1: return new List_ValueColorAssignment_1_4_1_0(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// ValueColor+=ColorArray
protected class List_ValueColorAssignment_1_4_1_1_1 extends AssignmentToken  {
	
	public List_ValueColorAssignment_1_4_1_1_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getListAccess().getValueColorAssignment_1_4_1_1_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ColorArray_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("ValueColor",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("ValueColor");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getColorArrayRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getListAccess().getValueColorColorArrayParserRuleCall_1_4_1_1_1_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new List_CommaKeyword_1_4_1_1_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}


// "]"
protected class List_RightSquareBracketKeyword_1_4_1_2 extends KeywordToken  {
	
	public List_RightSquareBracketKeyword_1_4_1_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getListAccess().getRightSquareBracketKeyword_1_4_1_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new List_Group_1_4_1_1(lastRuleCallOrigin, this, 0, inst);
			case 1: return new List_ValueColorAssignment_1_4_1_0(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}



// ("visibility=[" (Visibility+=VisibilityRule ("," Visibility+=VisibilityRule)* "]"))?
protected class List_Group_1_5 extends GroupToken {
	
	public List_Group_1_5(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getListAccess().getGroup_1_5();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new List_Group_1_5_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "visibility=["
protected class List_VisibilityKeyword_1_5_0 extends KeywordToken  {
	
	public List_VisibilityKeyword_1_5_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getListAccess().getVisibilityKeyword_1_5_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new List_Group_1_4(lastRuleCallOrigin, this, 0, inst);
			case 1: return new List_Group_1_3(lastRuleCallOrigin, this, 1, inst);
			case 2: return new List_Group_1_2(lastRuleCallOrigin, this, 2, inst);
			default: return null;
		}	
	}

}

// Visibility+=VisibilityRule ("," Visibility+=VisibilityRule)* "]"
protected class List_Group_1_5_1 extends GroupToken {
	
	public List_Group_1_5_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getListAccess().getGroup_1_5_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new List_RightSquareBracketKeyword_1_5_1_2(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// Visibility+=VisibilityRule
protected class List_VisibilityAssignment_1_5_1_0 extends AssignmentToken  {
	
	public List_VisibilityAssignment_1_5_1_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getListAccess().getVisibilityAssignment_1_5_1_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new VisibilityRule_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("Visibility",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("Visibility");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getVisibilityRuleRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getListAccess().getVisibilityVisibilityRuleParserRuleCall_1_5_1_0_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new List_VisibilityKeyword_1_5_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// ("," Visibility+=VisibilityRule)*
protected class List_Group_1_5_1_1 extends GroupToken {
	
	public List_Group_1_5_1_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getListAccess().getGroup_1_5_1_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new List_VisibilityAssignment_1_5_1_1_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// ","
protected class List_CommaKeyword_1_5_1_1_0 extends KeywordToken  {
	
	public List_CommaKeyword_1_5_1_1_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getListAccess().getCommaKeyword_1_5_1_1_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new List_Group_1_5_1_1(lastRuleCallOrigin, this, 0, inst);
			case 1: return new List_VisibilityAssignment_1_5_1_0(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// Visibility+=VisibilityRule
protected class List_VisibilityAssignment_1_5_1_1_1 extends AssignmentToken  {
	
	public List_VisibilityAssignment_1_5_1_1_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getListAccess().getVisibilityAssignment_1_5_1_1_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new VisibilityRule_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("Visibility",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("Visibility");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getVisibilityRuleRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getListAccess().getVisibilityVisibilityRuleParserRuleCall_1_5_1_1_1_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new List_CommaKeyword_1_5_1_1_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}


// "]"
protected class List_RightSquareBracketKeyword_1_5_1_2 extends KeywordToken  {
	
	public List_RightSquareBracketKeyword_1_5_1_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getListAccess().getRightSquareBracketKeyword_1_5_1_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new List_Group_1_5_1_1(lastRuleCallOrigin, this, 0, inst);
			case 1: return new List_VisibilityAssignment_1_5_1_0(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}





/************ end Rule List ****************/


/************ begin Rule Setpoint ****************
 *
 * Setpoint:
 * 
 * 	"Setpoint" ("item=" item=ItemRef & ("label=" label=(ID | STRING))? & ("icon=" icon=Icon)? & ("minValue="
 * 
 * 	minValue=Number)? & ("maxValue=" maxValue=Number)? & ("step=" step=Number)? & ("labelcolor=[" (LabelColor+=ColorArray
 * 
 * 	("," LabelColor+=ColorArray)* "]"))? & ("valuecolor=[" (ValueColor+=ColorArray ("," ValueColor+=ColorArray)* "]"))? &
 * 
 * 	("visibility=[" (Visibility+=VisibilityRule ("," Visibility+=VisibilityRule)* "]"))?);
 *
 **/

// "Setpoint" ("item=" item=ItemRef & ("label=" label=(ID | STRING))? & ("icon=" icon=Icon)? & ("minValue="
// 
// minValue=Number)? & ("maxValue=" maxValue=Number)? & ("step=" step=Number)? & ("labelcolor=[" (LabelColor+=ColorArray
// 
// ("," LabelColor+=ColorArray)* "]"))? & ("valuecolor=[" (ValueColor+=ColorArray ("," ValueColor+=ColorArray)* "]"))? &
// 
// ("visibility=[" (Visibility+=VisibilityRule ("," Visibility+=VisibilityRule)* "]"))?)
protected class Setpoint_Group extends GroupToken {
	
	public Setpoint_Group(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getSetpointAccess().getGroup();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Setpoint_UnorderedGroup_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getSetpointRule().getType().getClassifier())
			return null;
		return eObjectConsumer;
	}

}

// "Setpoint"
protected class Setpoint_SetpointKeyword_0 extends KeywordToken  {
	
	public Setpoint_SetpointKeyword_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getSetpointAccess().getSetpointKeyword_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

}

// "item=" item=ItemRef & ("label=" label=(ID | STRING))? & ("icon=" icon=Icon)? & ("minValue=" minValue=Number)? &
// 
// ("maxValue=" maxValue=Number)? & ("step=" step=Number)? & ("labelcolor=[" (LabelColor+=ColorArray (","
// 
// LabelColor+=ColorArray)* "]"))? & ("valuecolor=[" (ValueColor+=ColorArray ("," ValueColor+=ColorArray)* "]"))? &
// 
// ("visibility=[" (Visibility+=VisibilityRule ("," Visibility+=VisibilityRule)* "]"))?
protected class Setpoint_UnorderedGroup_1 extends UnorderedGroupToken {
	
	public Setpoint_UnorderedGroup_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public UnorderedGroup getGrammarElement() {
		return grammarAccess.getSetpointAccess().getUnorderedGroup_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Setpoint_Group_1_8(lastRuleCallOrigin, this, 0, inst);
			case 1: return new Setpoint_Group_1_7(lastRuleCallOrigin, this, 1, inst);
			case 2: return new Setpoint_Group_1_6(lastRuleCallOrigin, this, 2, inst);
			case 3: return new Setpoint_Group_1_5(lastRuleCallOrigin, this, 3, inst);
			case 4: return new Setpoint_Group_1_4(lastRuleCallOrigin, this, 4, inst);
			case 5: return new Setpoint_Group_1_3(lastRuleCallOrigin, this, 5, inst);
			case 6: return new Setpoint_Group_1_2(lastRuleCallOrigin, this, 6, inst);
			case 7: return new Setpoint_Group_1_1(lastRuleCallOrigin, this, 7, inst);
			case 8: return new Setpoint_Group_1_0(lastRuleCallOrigin, this, 8, inst);
			default: return null;
		}	
	}

}

// "item=" item=ItemRef
protected class Setpoint_Group_1_0 extends GroupToken {
	
	public Setpoint_Group_1_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getSetpointAccess().getGroup_1_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Setpoint_ItemAssignment_1_0_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "item="
protected class Setpoint_ItemKeyword_1_0_0 extends KeywordToken  {
	
	public Setpoint_ItemKeyword_1_0_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getSetpointAccess().getItemKeyword_1_0_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Setpoint_SetpointKeyword_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// item=ItemRef
protected class Setpoint_ItemAssignment_1_0_1 extends AssignmentToken  {
	
	public Setpoint_ItemAssignment_1_0_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getSetpointAccess().getItemAssignment_1_0_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Setpoint_ItemKeyword_1_0_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("item",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("item");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getSetpointAccess().getItemItemRefParserRuleCall_1_0_1_0(), value, null)) {
			type = AssignmentType.DATATYPE_RULE_CALL;
			element = grammarAccess.getSetpointAccess().getItemItemRefParserRuleCall_1_0_1_0();
			return obj;
		}
		return null;
	}

}


// ("label=" label=(ID | STRING))?
protected class Setpoint_Group_1_1 extends GroupToken {
	
	public Setpoint_Group_1_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getSetpointAccess().getGroup_1_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Setpoint_LabelAssignment_1_1_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "label="
protected class Setpoint_LabelKeyword_1_1_0 extends KeywordToken  {
	
	public Setpoint_LabelKeyword_1_1_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getSetpointAccess().getLabelKeyword_1_1_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Setpoint_Group_1_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// label=(ID | STRING)
protected class Setpoint_LabelAssignment_1_1_1 extends AssignmentToken  {
	
	public Setpoint_LabelAssignment_1_1_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getSetpointAccess().getLabelAssignment_1_1_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Setpoint_LabelKeyword_1_1_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("label",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("label");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getSetpointAccess().getLabelIDTerminalRuleCall_1_1_1_0_0(), value, null)) {
			type = AssignmentType.TERMINAL_RULE_CALL;
			element = grammarAccess.getSetpointAccess().getLabelIDTerminalRuleCall_1_1_1_0_0();
			return obj;
		}
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getSetpointAccess().getLabelSTRINGTerminalRuleCall_1_1_1_0_1(), value, null)) {
			type = AssignmentType.TERMINAL_RULE_CALL;
			element = grammarAccess.getSetpointAccess().getLabelSTRINGTerminalRuleCall_1_1_1_0_1();
			return obj;
		}
		return null;
	}

}


// ("icon=" icon=Icon)?
protected class Setpoint_Group_1_2 extends GroupToken {
	
	public Setpoint_Group_1_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getSetpointAccess().getGroup_1_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Setpoint_IconAssignment_1_2_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "icon="
protected class Setpoint_IconKeyword_1_2_0 extends KeywordToken  {
	
	public Setpoint_IconKeyword_1_2_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getSetpointAccess().getIconKeyword_1_2_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Setpoint_Group_1_1(lastRuleCallOrigin, this, 0, inst);
			case 1: return new Setpoint_Group_1_0(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// icon=Icon
protected class Setpoint_IconAssignment_1_2_1 extends AssignmentToken  {
	
	public Setpoint_IconAssignment_1_2_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getSetpointAccess().getIconAssignment_1_2_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Setpoint_IconKeyword_1_2_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("icon",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("icon");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getSetpointAccess().getIconIconParserRuleCall_1_2_1_0(), value, null)) {
			type = AssignmentType.DATATYPE_RULE_CALL;
			element = grammarAccess.getSetpointAccess().getIconIconParserRuleCall_1_2_1_0();
			return obj;
		}
		return null;
	}

}


// ("minValue=" minValue=Number)?
protected class Setpoint_Group_1_3 extends GroupToken {
	
	public Setpoint_Group_1_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getSetpointAccess().getGroup_1_3();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Setpoint_MinValueAssignment_1_3_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "minValue="
protected class Setpoint_MinValueKeyword_1_3_0 extends KeywordToken  {
	
	public Setpoint_MinValueKeyword_1_3_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getSetpointAccess().getMinValueKeyword_1_3_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Setpoint_Group_1_2(lastRuleCallOrigin, this, 0, inst);
			case 1: return new Setpoint_Group_1_1(lastRuleCallOrigin, this, 1, inst);
			case 2: return new Setpoint_Group_1_0(lastRuleCallOrigin, this, 2, inst);
			default: return null;
		}	
	}

}

// minValue=Number
protected class Setpoint_MinValueAssignment_1_3_1 extends AssignmentToken  {
	
	public Setpoint_MinValueAssignment_1_3_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getSetpointAccess().getMinValueAssignment_1_3_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Setpoint_MinValueKeyword_1_3_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("minValue",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("minValue");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getSetpointAccess().getMinValueNumberParserRuleCall_1_3_1_0(), value, null)) {
			type = AssignmentType.DATATYPE_RULE_CALL;
			element = grammarAccess.getSetpointAccess().getMinValueNumberParserRuleCall_1_3_1_0();
			return obj;
		}
		return null;
	}

}


// ("maxValue=" maxValue=Number)?
protected class Setpoint_Group_1_4 extends GroupToken {
	
	public Setpoint_Group_1_4(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getSetpointAccess().getGroup_1_4();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Setpoint_MaxValueAssignment_1_4_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "maxValue="
protected class Setpoint_MaxValueKeyword_1_4_0 extends KeywordToken  {
	
	public Setpoint_MaxValueKeyword_1_4_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getSetpointAccess().getMaxValueKeyword_1_4_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Setpoint_Group_1_3(lastRuleCallOrigin, this, 0, inst);
			case 1: return new Setpoint_Group_1_2(lastRuleCallOrigin, this, 1, inst);
			case 2: return new Setpoint_Group_1_1(lastRuleCallOrigin, this, 2, inst);
			case 3: return new Setpoint_Group_1_0(lastRuleCallOrigin, this, 3, inst);
			default: return null;
		}	
	}

}

// maxValue=Number
protected class Setpoint_MaxValueAssignment_1_4_1 extends AssignmentToken  {
	
	public Setpoint_MaxValueAssignment_1_4_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getSetpointAccess().getMaxValueAssignment_1_4_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Setpoint_MaxValueKeyword_1_4_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("maxValue",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("maxValue");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getSetpointAccess().getMaxValueNumberParserRuleCall_1_4_1_0(), value, null)) {
			type = AssignmentType.DATATYPE_RULE_CALL;
			element = grammarAccess.getSetpointAccess().getMaxValueNumberParserRuleCall_1_4_1_0();
			return obj;
		}
		return null;
	}

}


// ("step=" step=Number)?
protected class Setpoint_Group_1_5 extends GroupToken {
	
	public Setpoint_Group_1_5(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getSetpointAccess().getGroup_1_5();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Setpoint_StepAssignment_1_5_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "step="
protected class Setpoint_StepKeyword_1_5_0 extends KeywordToken  {
	
	public Setpoint_StepKeyword_1_5_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getSetpointAccess().getStepKeyword_1_5_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Setpoint_Group_1_4(lastRuleCallOrigin, this, 0, inst);
			case 1: return new Setpoint_Group_1_3(lastRuleCallOrigin, this, 1, inst);
			case 2: return new Setpoint_Group_1_2(lastRuleCallOrigin, this, 2, inst);
			case 3: return new Setpoint_Group_1_1(lastRuleCallOrigin, this, 3, inst);
			case 4: return new Setpoint_Group_1_0(lastRuleCallOrigin, this, 4, inst);
			default: return null;
		}	
	}

}

// step=Number
protected class Setpoint_StepAssignment_1_5_1 extends AssignmentToken  {
	
	public Setpoint_StepAssignment_1_5_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getSetpointAccess().getStepAssignment_1_5_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Setpoint_StepKeyword_1_5_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("step",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("step");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getSetpointAccess().getStepNumberParserRuleCall_1_5_1_0(), value, null)) {
			type = AssignmentType.DATATYPE_RULE_CALL;
			element = grammarAccess.getSetpointAccess().getStepNumberParserRuleCall_1_5_1_0();
			return obj;
		}
		return null;
	}

}


// ("labelcolor=[" (LabelColor+=ColorArray ("," LabelColor+=ColorArray)* "]"))?
protected class Setpoint_Group_1_6 extends GroupToken {
	
	public Setpoint_Group_1_6(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getSetpointAccess().getGroup_1_6();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Setpoint_Group_1_6_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "labelcolor=["
protected class Setpoint_LabelcolorKeyword_1_6_0 extends KeywordToken  {
	
	public Setpoint_LabelcolorKeyword_1_6_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getSetpointAccess().getLabelcolorKeyword_1_6_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Setpoint_Group_1_5(lastRuleCallOrigin, this, 0, inst);
			case 1: return new Setpoint_Group_1_4(lastRuleCallOrigin, this, 1, inst);
			case 2: return new Setpoint_Group_1_3(lastRuleCallOrigin, this, 2, inst);
			case 3: return new Setpoint_Group_1_2(lastRuleCallOrigin, this, 3, inst);
			case 4: return new Setpoint_Group_1_1(lastRuleCallOrigin, this, 4, inst);
			case 5: return new Setpoint_Group_1_0(lastRuleCallOrigin, this, 5, inst);
			default: return null;
		}	
	}

}

// LabelColor+=ColorArray ("," LabelColor+=ColorArray)* "]"
protected class Setpoint_Group_1_6_1 extends GroupToken {
	
	public Setpoint_Group_1_6_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getSetpointAccess().getGroup_1_6_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Setpoint_RightSquareBracketKeyword_1_6_1_2(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// LabelColor+=ColorArray
protected class Setpoint_LabelColorAssignment_1_6_1_0 extends AssignmentToken  {
	
	public Setpoint_LabelColorAssignment_1_6_1_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getSetpointAccess().getLabelColorAssignment_1_6_1_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ColorArray_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("LabelColor",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("LabelColor");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getColorArrayRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getSetpointAccess().getLabelColorColorArrayParserRuleCall_1_6_1_0_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new Setpoint_LabelcolorKeyword_1_6_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// ("," LabelColor+=ColorArray)*
protected class Setpoint_Group_1_6_1_1 extends GroupToken {
	
	public Setpoint_Group_1_6_1_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getSetpointAccess().getGroup_1_6_1_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Setpoint_LabelColorAssignment_1_6_1_1_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// ","
protected class Setpoint_CommaKeyword_1_6_1_1_0 extends KeywordToken  {
	
	public Setpoint_CommaKeyword_1_6_1_1_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getSetpointAccess().getCommaKeyword_1_6_1_1_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Setpoint_Group_1_6_1_1(lastRuleCallOrigin, this, 0, inst);
			case 1: return new Setpoint_LabelColorAssignment_1_6_1_0(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// LabelColor+=ColorArray
protected class Setpoint_LabelColorAssignment_1_6_1_1_1 extends AssignmentToken  {
	
	public Setpoint_LabelColorAssignment_1_6_1_1_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getSetpointAccess().getLabelColorAssignment_1_6_1_1_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ColorArray_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("LabelColor",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("LabelColor");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getColorArrayRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getSetpointAccess().getLabelColorColorArrayParserRuleCall_1_6_1_1_1_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new Setpoint_CommaKeyword_1_6_1_1_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}


// "]"
protected class Setpoint_RightSquareBracketKeyword_1_6_1_2 extends KeywordToken  {
	
	public Setpoint_RightSquareBracketKeyword_1_6_1_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getSetpointAccess().getRightSquareBracketKeyword_1_6_1_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Setpoint_Group_1_6_1_1(lastRuleCallOrigin, this, 0, inst);
			case 1: return new Setpoint_LabelColorAssignment_1_6_1_0(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}



// ("valuecolor=[" (ValueColor+=ColorArray ("," ValueColor+=ColorArray)* "]"))?
protected class Setpoint_Group_1_7 extends GroupToken {
	
	public Setpoint_Group_1_7(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getSetpointAccess().getGroup_1_7();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Setpoint_Group_1_7_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "valuecolor=["
protected class Setpoint_ValuecolorKeyword_1_7_0 extends KeywordToken  {
	
	public Setpoint_ValuecolorKeyword_1_7_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getSetpointAccess().getValuecolorKeyword_1_7_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Setpoint_Group_1_6(lastRuleCallOrigin, this, 0, inst);
			case 1: return new Setpoint_Group_1_5(lastRuleCallOrigin, this, 1, inst);
			case 2: return new Setpoint_Group_1_4(lastRuleCallOrigin, this, 2, inst);
			case 3: return new Setpoint_Group_1_3(lastRuleCallOrigin, this, 3, inst);
			case 4: return new Setpoint_Group_1_2(lastRuleCallOrigin, this, 4, inst);
			case 5: return new Setpoint_Group_1_1(lastRuleCallOrigin, this, 5, inst);
			case 6: return new Setpoint_Group_1_0(lastRuleCallOrigin, this, 6, inst);
			default: return null;
		}	
	}

}

// ValueColor+=ColorArray ("," ValueColor+=ColorArray)* "]"
protected class Setpoint_Group_1_7_1 extends GroupToken {
	
	public Setpoint_Group_1_7_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getSetpointAccess().getGroup_1_7_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Setpoint_RightSquareBracketKeyword_1_7_1_2(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// ValueColor+=ColorArray
protected class Setpoint_ValueColorAssignment_1_7_1_0 extends AssignmentToken  {
	
	public Setpoint_ValueColorAssignment_1_7_1_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getSetpointAccess().getValueColorAssignment_1_7_1_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ColorArray_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("ValueColor",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("ValueColor");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getColorArrayRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getSetpointAccess().getValueColorColorArrayParserRuleCall_1_7_1_0_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new Setpoint_ValuecolorKeyword_1_7_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// ("," ValueColor+=ColorArray)*
protected class Setpoint_Group_1_7_1_1 extends GroupToken {
	
	public Setpoint_Group_1_7_1_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getSetpointAccess().getGroup_1_7_1_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Setpoint_ValueColorAssignment_1_7_1_1_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// ","
protected class Setpoint_CommaKeyword_1_7_1_1_0 extends KeywordToken  {
	
	public Setpoint_CommaKeyword_1_7_1_1_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getSetpointAccess().getCommaKeyword_1_7_1_1_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Setpoint_Group_1_7_1_1(lastRuleCallOrigin, this, 0, inst);
			case 1: return new Setpoint_ValueColorAssignment_1_7_1_0(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// ValueColor+=ColorArray
protected class Setpoint_ValueColorAssignment_1_7_1_1_1 extends AssignmentToken  {
	
	public Setpoint_ValueColorAssignment_1_7_1_1_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getSetpointAccess().getValueColorAssignment_1_7_1_1_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ColorArray_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("ValueColor",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("ValueColor");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getColorArrayRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getSetpointAccess().getValueColorColorArrayParserRuleCall_1_7_1_1_1_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new Setpoint_CommaKeyword_1_7_1_1_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}


// "]"
protected class Setpoint_RightSquareBracketKeyword_1_7_1_2 extends KeywordToken  {
	
	public Setpoint_RightSquareBracketKeyword_1_7_1_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getSetpointAccess().getRightSquareBracketKeyword_1_7_1_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Setpoint_Group_1_7_1_1(lastRuleCallOrigin, this, 0, inst);
			case 1: return new Setpoint_ValueColorAssignment_1_7_1_0(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}



// ("visibility=[" (Visibility+=VisibilityRule ("," Visibility+=VisibilityRule)* "]"))?
protected class Setpoint_Group_1_8 extends GroupToken {
	
	public Setpoint_Group_1_8(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getSetpointAccess().getGroup_1_8();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Setpoint_Group_1_8_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "visibility=["
protected class Setpoint_VisibilityKeyword_1_8_0 extends KeywordToken  {
	
	public Setpoint_VisibilityKeyword_1_8_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getSetpointAccess().getVisibilityKeyword_1_8_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Setpoint_Group_1_7(lastRuleCallOrigin, this, 0, inst);
			case 1: return new Setpoint_Group_1_6(lastRuleCallOrigin, this, 1, inst);
			case 2: return new Setpoint_Group_1_5(lastRuleCallOrigin, this, 2, inst);
			case 3: return new Setpoint_Group_1_4(lastRuleCallOrigin, this, 3, inst);
			case 4: return new Setpoint_Group_1_3(lastRuleCallOrigin, this, 4, inst);
			case 5: return new Setpoint_Group_1_2(lastRuleCallOrigin, this, 5, inst);
			case 6: return new Setpoint_Group_1_1(lastRuleCallOrigin, this, 6, inst);
			case 7: return new Setpoint_Group_1_0(lastRuleCallOrigin, this, 7, inst);
			default: return null;
		}	
	}

}

// Visibility+=VisibilityRule ("," Visibility+=VisibilityRule)* "]"
protected class Setpoint_Group_1_8_1 extends GroupToken {
	
	public Setpoint_Group_1_8_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getSetpointAccess().getGroup_1_8_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Setpoint_RightSquareBracketKeyword_1_8_1_2(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// Visibility+=VisibilityRule
protected class Setpoint_VisibilityAssignment_1_8_1_0 extends AssignmentToken  {
	
	public Setpoint_VisibilityAssignment_1_8_1_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getSetpointAccess().getVisibilityAssignment_1_8_1_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new VisibilityRule_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("Visibility",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("Visibility");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getVisibilityRuleRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getSetpointAccess().getVisibilityVisibilityRuleParserRuleCall_1_8_1_0_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new Setpoint_VisibilityKeyword_1_8_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// ("," Visibility+=VisibilityRule)*
protected class Setpoint_Group_1_8_1_1 extends GroupToken {
	
	public Setpoint_Group_1_8_1_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getSetpointAccess().getGroup_1_8_1_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Setpoint_VisibilityAssignment_1_8_1_1_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// ","
protected class Setpoint_CommaKeyword_1_8_1_1_0 extends KeywordToken  {
	
	public Setpoint_CommaKeyword_1_8_1_1_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getSetpointAccess().getCommaKeyword_1_8_1_1_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Setpoint_Group_1_8_1_1(lastRuleCallOrigin, this, 0, inst);
			case 1: return new Setpoint_VisibilityAssignment_1_8_1_0(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// Visibility+=VisibilityRule
protected class Setpoint_VisibilityAssignment_1_8_1_1_1 extends AssignmentToken  {
	
	public Setpoint_VisibilityAssignment_1_8_1_1_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getSetpointAccess().getVisibilityAssignment_1_8_1_1_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new VisibilityRule_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("Visibility",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("Visibility");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getVisibilityRuleRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getSetpointAccess().getVisibilityVisibilityRuleParserRuleCall_1_8_1_1_1_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new Setpoint_CommaKeyword_1_8_1_1_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}


// "]"
protected class Setpoint_RightSquareBracketKeyword_1_8_1_2 extends KeywordToken  {
	
	public Setpoint_RightSquareBracketKeyword_1_8_1_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getSetpointAccess().getRightSquareBracketKeyword_1_8_1_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Setpoint_Group_1_8_1_1(lastRuleCallOrigin, this, 0, inst);
			case 1: return new Setpoint_VisibilityAssignment_1_8_1_0(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}





/************ end Rule Setpoint ****************/


/************ begin Rule Colorpicker ****************
 *
 * Colorpicker:
 * 
 * 	"Colorpicker" ("item=" item=ItemRef & ("label=" label=(ID | STRING))? & ("icon=" icon=Icon)? & ("sendFrequency="
 * 
 * 	frequency=INT)? & ("labelcolor=[" (LabelColor+=ColorArray ("," LabelColor+=ColorArray)* "]"))? & ("valuecolor=["
 * 
 * 	(ValueColor+=ColorArray ("," ValueColor+=ColorArray)* "]"))? & ("visibility=[" (Visibility+=VisibilityRule (","
 * 
 * 	Visibility+=VisibilityRule)* "]"))?);
 *
 **/

// "Colorpicker" ("item=" item=ItemRef & ("label=" label=(ID | STRING))? & ("icon=" icon=Icon)? & ("sendFrequency="
// 
// frequency=INT)? & ("labelcolor=[" (LabelColor+=ColorArray ("," LabelColor+=ColorArray)* "]"))? & ("valuecolor=["
// 
// (ValueColor+=ColorArray ("," ValueColor+=ColorArray)* "]"))? & ("visibility=[" (Visibility+=VisibilityRule (","
// 
// Visibility+=VisibilityRule)* "]"))?)
protected class Colorpicker_Group extends GroupToken {
	
	public Colorpicker_Group(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getColorpickerAccess().getGroup();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Colorpicker_UnorderedGroup_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getColorpickerRule().getType().getClassifier())
			return null;
		return eObjectConsumer;
	}

}

// "Colorpicker"
protected class Colorpicker_ColorpickerKeyword_0 extends KeywordToken  {
	
	public Colorpicker_ColorpickerKeyword_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getColorpickerAccess().getColorpickerKeyword_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

}

// "item=" item=ItemRef & ("label=" label=(ID | STRING))? & ("icon=" icon=Icon)? & ("sendFrequency=" frequency=INT)? &
// 
// ("labelcolor=[" (LabelColor+=ColorArray ("," LabelColor+=ColorArray)* "]"))? & ("valuecolor=[" (ValueColor+=ColorArray
// 
// ("," ValueColor+=ColorArray)* "]"))? & ("visibility=[" (Visibility+=VisibilityRule ("," Visibility+=VisibilityRule)*
// 
// "]"))?
protected class Colorpicker_UnorderedGroup_1 extends UnorderedGroupToken {
	
	public Colorpicker_UnorderedGroup_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public UnorderedGroup getGrammarElement() {
		return grammarAccess.getColorpickerAccess().getUnorderedGroup_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Colorpicker_Group_1_6(lastRuleCallOrigin, this, 0, inst);
			case 1: return new Colorpicker_Group_1_5(lastRuleCallOrigin, this, 1, inst);
			case 2: return new Colorpicker_Group_1_4(lastRuleCallOrigin, this, 2, inst);
			case 3: return new Colorpicker_Group_1_3(lastRuleCallOrigin, this, 3, inst);
			case 4: return new Colorpicker_Group_1_2(lastRuleCallOrigin, this, 4, inst);
			case 5: return new Colorpicker_Group_1_1(lastRuleCallOrigin, this, 5, inst);
			case 6: return new Colorpicker_Group_1_0(lastRuleCallOrigin, this, 6, inst);
			default: return null;
		}	
	}

}

// "item=" item=ItemRef
protected class Colorpicker_Group_1_0 extends GroupToken {
	
	public Colorpicker_Group_1_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getColorpickerAccess().getGroup_1_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Colorpicker_ItemAssignment_1_0_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "item="
protected class Colorpicker_ItemKeyword_1_0_0 extends KeywordToken  {
	
	public Colorpicker_ItemKeyword_1_0_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getColorpickerAccess().getItemKeyword_1_0_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Colorpicker_ColorpickerKeyword_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// item=ItemRef
protected class Colorpicker_ItemAssignment_1_0_1 extends AssignmentToken  {
	
	public Colorpicker_ItemAssignment_1_0_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getColorpickerAccess().getItemAssignment_1_0_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Colorpicker_ItemKeyword_1_0_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("item",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("item");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getColorpickerAccess().getItemItemRefParserRuleCall_1_0_1_0(), value, null)) {
			type = AssignmentType.DATATYPE_RULE_CALL;
			element = grammarAccess.getColorpickerAccess().getItemItemRefParserRuleCall_1_0_1_0();
			return obj;
		}
		return null;
	}

}


// ("label=" label=(ID | STRING))?
protected class Colorpicker_Group_1_1 extends GroupToken {
	
	public Colorpicker_Group_1_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getColorpickerAccess().getGroup_1_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Colorpicker_LabelAssignment_1_1_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "label="
protected class Colorpicker_LabelKeyword_1_1_0 extends KeywordToken  {
	
	public Colorpicker_LabelKeyword_1_1_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getColorpickerAccess().getLabelKeyword_1_1_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Colorpicker_Group_1_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// label=(ID | STRING)
protected class Colorpicker_LabelAssignment_1_1_1 extends AssignmentToken  {
	
	public Colorpicker_LabelAssignment_1_1_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getColorpickerAccess().getLabelAssignment_1_1_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Colorpicker_LabelKeyword_1_1_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("label",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("label");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getColorpickerAccess().getLabelIDTerminalRuleCall_1_1_1_0_0(), value, null)) {
			type = AssignmentType.TERMINAL_RULE_CALL;
			element = grammarAccess.getColorpickerAccess().getLabelIDTerminalRuleCall_1_1_1_0_0();
			return obj;
		}
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getColorpickerAccess().getLabelSTRINGTerminalRuleCall_1_1_1_0_1(), value, null)) {
			type = AssignmentType.TERMINAL_RULE_CALL;
			element = grammarAccess.getColorpickerAccess().getLabelSTRINGTerminalRuleCall_1_1_1_0_1();
			return obj;
		}
		return null;
	}

}


// ("icon=" icon=Icon)?
protected class Colorpicker_Group_1_2 extends GroupToken {
	
	public Colorpicker_Group_1_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getColorpickerAccess().getGroup_1_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Colorpicker_IconAssignment_1_2_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "icon="
protected class Colorpicker_IconKeyword_1_2_0 extends KeywordToken  {
	
	public Colorpicker_IconKeyword_1_2_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getColorpickerAccess().getIconKeyword_1_2_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Colorpicker_Group_1_1(lastRuleCallOrigin, this, 0, inst);
			case 1: return new Colorpicker_Group_1_0(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// icon=Icon
protected class Colorpicker_IconAssignment_1_2_1 extends AssignmentToken  {
	
	public Colorpicker_IconAssignment_1_2_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getColorpickerAccess().getIconAssignment_1_2_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Colorpicker_IconKeyword_1_2_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("icon",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("icon");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getColorpickerAccess().getIconIconParserRuleCall_1_2_1_0(), value, null)) {
			type = AssignmentType.DATATYPE_RULE_CALL;
			element = grammarAccess.getColorpickerAccess().getIconIconParserRuleCall_1_2_1_0();
			return obj;
		}
		return null;
	}

}


// ("sendFrequency=" frequency=INT)?
protected class Colorpicker_Group_1_3 extends GroupToken {
	
	public Colorpicker_Group_1_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getColorpickerAccess().getGroup_1_3();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Colorpicker_FrequencyAssignment_1_3_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "sendFrequency="
protected class Colorpicker_SendFrequencyKeyword_1_3_0 extends KeywordToken  {
	
	public Colorpicker_SendFrequencyKeyword_1_3_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getColorpickerAccess().getSendFrequencyKeyword_1_3_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Colorpicker_Group_1_2(lastRuleCallOrigin, this, 0, inst);
			case 1: return new Colorpicker_Group_1_1(lastRuleCallOrigin, this, 1, inst);
			case 2: return new Colorpicker_Group_1_0(lastRuleCallOrigin, this, 2, inst);
			default: return null;
		}	
	}

}

// frequency=INT
protected class Colorpicker_FrequencyAssignment_1_3_1 extends AssignmentToken  {
	
	public Colorpicker_FrequencyAssignment_1_3_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getColorpickerAccess().getFrequencyAssignment_1_3_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Colorpicker_SendFrequencyKeyword_1_3_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("frequency",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("frequency");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getColorpickerAccess().getFrequencyINTTerminalRuleCall_1_3_1_0(), value, null)) {
			type = AssignmentType.TERMINAL_RULE_CALL;
			element = grammarAccess.getColorpickerAccess().getFrequencyINTTerminalRuleCall_1_3_1_0();
			return obj;
		}
		return null;
	}

}


// ("labelcolor=[" (LabelColor+=ColorArray ("," LabelColor+=ColorArray)* "]"))?
protected class Colorpicker_Group_1_4 extends GroupToken {
	
	public Colorpicker_Group_1_4(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getColorpickerAccess().getGroup_1_4();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Colorpicker_Group_1_4_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "labelcolor=["
protected class Colorpicker_LabelcolorKeyword_1_4_0 extends KeywordToken  {
	
	public Colorpicker_LabelcolorKeyword_1_4_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getColorpickerAccess().getLabelcolorKeyword_1_4_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Colorpicker_Group_1_3(lastRuleCallOrigin, this, 0, inst);
			case 1: return new Colorpicker_Group_1_2(lastRuleCallOrigin, this, 1, inst);
			case 2: return new Colorpicker_Group_1_1(lastRuleCallOrigin, this, 2, inst);
			case 3: return new Colorpicker_Group_1_0(lastRuleCallOrigin, this, 3, inst);
			default: return null;
		}	
	}

}

// LabelColor+=ColorArray ("," LabelColor+=ColorArray)* "]"
protected class Colorpicker_Group_1_4_1 extends GroupToken {
	
	public Colorpicker_Group_1_4_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getColorpickerAccess().getGroup_1_4_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Colorpicker_RightSquareBracketKeyword_1_4_1_2(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// LabelColor+=ColorArray
protected class Colorpicker_LabelColorAssignment_1_4_1_0 extends AssignmentToken  {
	
	public Colorpicker_LabelColorAssignment_1_4_1_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getColorpickerAccess().getLabelColorAssignment_1_4_1_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ColorArray_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("LabelColor",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("LabelColor");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getColorArrayRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getColorpickerAccess().getLabelColorColorArrayParserRuleCall_1_4_1_0_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new Colorpicker_LabelcolorKeyword_1_4_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// ("," LabelColor+=ColorArray)*
protected class Colorpicker_Group_1_4_1_1 extends GroupToken {
	
	public Colorpicker_Group_1_4_1_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getColorpickerAccess().getGroup_1_4_1_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Colorpicker_LabelColorAssignment_1_4_1_1_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// ","
protected class Colorpicker_CommaKeyword_1_4_1_1_0 extends KeywordToken  {
	
	public Colorpicker_CommaKeyword_1_4_1_1_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getColorpickerAccess().getCommaKeyword_1_4_1_1_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Colorpicker_Group_1_4_1_1(lastRuleCallOrigin, this, 0, inst);
			case 1: return new Colorpicker_LabelColorAssignment_1_4_1_0(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// LabelColor+=ColorArray
protected class Colorpicker_LabelColorAssignment_1_4_1_1_1 extends AssignmentToken  {
	
	public Colorpicker_LabelColorAssignment_1_4_1_1_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getColorpickerAccess().getLabelColorAssignment_1_4_1_1_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ColorArray_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("LabelColor",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("LabelColor");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getColorArrayRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getColorpickerAccess().getLabelColorColorArrayParserRuleCall_1_4_1_1_1_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new Colorpicker_CommaKeyword_1_4_1_1_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}


// "]"
protected class Colorpicker_RightSquareBracketKeyword_1_4_1_2 extends KeywordToken  {
	
	public Colorpicker_RightSquareBracketKeyword_1_4_1_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getColorpickerAccess().getRightSquareBracketKeyword_1_4_1_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Colorpicker_Group_1_4_1_1(lastRuleCallOrigin, this, 0, inst);
			case 1: return new Colorpicker_LabelColorAssignment_1_4_1_0(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}



// ("valuecolor=[" (ValueColor+=ColorArray ("," ValueColor+=ColorArray)* "]"))?
protected class Colorpicker_Group_1_5 extends GroupToken {
	
	public Colorpicker_Group_1_5(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getColorpickerAccess().getGroup_1_5();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Colorpicker_Group_1_5_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "valuecolor=["
protected class Colorpicker_ValuecolorKeyword_1_5_0 extends KeywordToken  {
	
	public Colorpicker_ValuecolorKeyword_1_5_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getColorpickerAccess().getValuecolorKeyword_1_5_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Colorpicker_Group_1_4(lastRuleCallOrigin, this, 0, inst);
			case 1: return new Colorpicker_Group_1_3(lastRuleCallOrigin, this, 1, inst);
			case 2: return new Colorpicker_Group_1_2(lastRuleCallOrigin, this, 2, inst);
			case 3: return new Colorpicker_Group_1_1(lastRuleCallOrigin, this, 3, inst);
			case 4: return new Colorpicker_Group_1_0(lastRuleCallOrigin, this, 4, inst);
			default: return null;
		}	
	}

}

// ValueColor+=ColorArray ("," ValueColor+=ColorArray)* "]"
protected class Colorpicker_Group_1_5_1 extends GroupToken {
	
	public Colorpicker_Group_1_5_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getColorpickerAccess().getGroup_1_5_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Colorpicker_RightSquareBracketKeyword_1_5_1_2(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// ValueColor+=ColorArray
protected class Colorpicker_ValueColorAssignment_1_5_1_0 extends AssignmentToken  {
	
	public Colorpicker_ValueColorAssignment_1_5_1_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getColorpickerAccess().getValueColorAssignment_1_5_1_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ColorArray_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("ValueColor",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("ValueColor");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getColorArrayRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getColorpickerAccess().getValueColorColorArrayParserRuleCall_1_5_1_0_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new Colorpicker_ValuecolorKeyword_1_5_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// ("," ValueColor+=ColorArray)*
protected class Colorpicker_Group_1_5_1_1 extends GroupToken {
	
	public Colorpicker_Group_1_5_1_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getColorpickerAccess().getGroup_1_5_1_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Colorpicker_ValueColorAssignment_1_5_1_1_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// ","
protected class Colorpicker_CommaKeyword_1_5_1_1_0 extends KeywordToken  {
	
	public Colorpicker_CommaKeyword_1_5_1_1_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getColorpickerAccess().getCommaKeyword_1_5_1_1_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Colorpicker_Group_1_5_1_1(lastRuleCallOrigin, this, 0, inst);
			case 1: return new Colorpicker_ValueColorAssignment_1_5_1_0(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// ValueColor+=ColorArray
protected class Colorpicker_ValueColorAssignment_1_5_1_1_1 extends AssignmentToken  {
	
	public Colorpicker_ValueColorAssignment_1_5_1_1_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getColorpickerAccess().getValueColorAssignment_1_5_1_1_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ColorArray_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("ValueColor",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("ValueColor");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getColorArrayRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getColorpickerAccess().getValueColorColorArrayParserRuleCall_1_5_1_1_1_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new Colorpicker_CommaKeyword_1_5_1_1_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}


// "]"
protected class Colorpicker_RightSquareBracketKeyword_1_5_1_2 extends KeywordToken  {
	
	public Colorpicker_RightSquareBracketKeyword_1_5_1_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getColorpickerAccess().getRightSquareBracketKeyword_1_5_1_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Colorpicker_Group_1_5_1_1(lastRuleCallOrigin, this, 0, inst);
			case 1: return new Colorpicker_ValueColorAssignment_1_5_1_0(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}



// ("visibility=[" (Visibility+=VisibilityRule ("," Visibility+=VisibilityRule)* "]"))?
protected class Colorpicker_Group_1_6 extends GroupToken {
	
	public Colorpicker_Group_1_6(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getColorpickerAccess().getGroup_1_6();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Colorpicker_Group_1_6_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "visibility=["
protected class Colorpicker_VisibilityKeyword_1_6_0 extends KeywordToken  {
	
	public Colorpicker_VisibilityKeyword_1_6_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getColorpickerAccess().getVisibilityKeyword_1_6_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Colorpicker_Group_1_5(lastRuleCallOrigin, this, 0, inst);
			case 1: return new Colorpicker_Group_1_4(lastRuleCallOrigin, this, 1, inst);
			case 2: return new Colorpicker_Group_1_3(lastRuleCallOrigin, this, 2, inst);
			case 3: return new Colorpicker_Group_1_2(lastRuleCallOrigin, this, 3, inst);
			case 4: return new Colorpicker_Group_1_1(lastRuleCallOrigin, this, 4, inst);
			case 5: return new Colorpicker_Group_1_0(lastRuleCallOrigin, this, 5, inst);
			default: return null;
		}	
	}

}

// Visibility+=VisibilityRule ("," Visibility+=VisibilityRule)* "]"
protected class Colorpicker_Group_1_6_1 extends GroupToken {
	
	public Colorpicker_Group_1_6_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getColorpickerAccess().getGroup_1_6_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Colorpicker_RightSquareBracketKeyword_1_6_1_2(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// Visibility+=VisibilityRule
protected class Colorpicker_VisibilityAssignment_1_6_1_0 extends AssignmentToken  {
	
	public Colorpicker_VisibilityAssignment_1_6_1_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getColorpickerAccess().getVisibilityAssignment_1_6_1_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new VisibilityRule_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("Visibility",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("Visibility");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getVisibilityRuleRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getColorpickerAccess().getVisibilityVisibilityRuleParserRuleCall_1_6_1_0_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new Colorpicker_VisibilityKeyword_1_6_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// ("," Visibility+=VisibilityRule)*
protected class Colorpicker_Group_1_6_1_1 extends GroupToken {
	
	public Colorpicker_Group_1_6_1_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getColorpickerAccess().getGroup_1_6_1_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Colorpicker_VisibilityAssignment_1_6_1_1_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// ","
protected class Colorpicker_CommaKeyword_1_6_1_1_0 extends KeywordToken  {
	
	public Colorpicker_CommaKeyword_1_6_1_1_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getColorpickerAccess().getCommaKeyword_1_6_1_1_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Colorpicker_Group_1_6_1_1(lastRuleCallOrigin, this, 0, inst);
			case 1: return new Colorpicker_VisibilityAssignment_1_6_1_0(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// Visibility+=VisibilityRule
protected class Colorpicker_VisibilityAssignment_1_6_1_1_1 extends AssignmentToken  {
	
	public Colorpicker_VisibilityAssignment_1_6_1_1_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getColorpickerAccess().getVisibilityAssignment_1_6_1_1_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new VisibilityRule_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("Visibility",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("Visibility");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getVisibilityRuleRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getColorpickerAccess().getVisibilityVisibilityRuleParserRuleCall_1_6_1_1_1_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new Colorpicker_CommaKeyword_1_6_1_1_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}


// "]"
protected class Colorpicker_RightSquareBracketKeyword_1_6_1_2 extends KeywordToken  {
	
	public Colorpicker_RightSquareBracketKeyword_1_6_1_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getColorpickerAccess().getRightSquareBracketKeyword_1_6_1_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Colorpicker_Group_1_6_1_1(lastRuleCallOrigin, this, 0, inst);
			case 1: return new Colorpicker_VisibilityAssignment_1_6_1_0(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}





/************ end Rule Colorpicker ****************/


/************ begin Rule Mapping ****************
 *
 * Mapping:
 * 
 * 	cmd=Command "=" label=(ID | STRING);
 *
 **/

// cmd=Command "=" label=(ID | STRING)
protected class Mapping_Group extends GroupToken {
	
	public Mapping_Group(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getMappingAccess().getGroup();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Mapping_LabelAssignment_2(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getMappingRule().getType().getClassifier())
			return null;
		return eObjectConsumer;
	}

}

// cmd=Command
protected class Mapping_CmdAssignment_0 extends AssignmentToken  {
	
	public Mapping_CmdAssignment_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getMappingAccess().getCmdAssignment_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("cmd",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("cmd");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getMappingAccess().getCmdCommandParserRuleCall_0_0(), value, null)) {
			type = AssignmentType.DATATYPE_RULE_CALL;
			element = grammarAccess.getMappingAccess().getCmdCommandParserRuleCall_0_0();
			return obj;
		}
		return null;
	}

}

// "="
protected class Mapping_EqualsSignKeyword_1 extends KeywordToken  {
	
	public Mapping_EqualsSignKeyword_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getMappingAccess().getEqualsSignKeyword_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Mapping_CmdAssignment_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// label=(ID | STRING)
protected class Mapping_LabelAssignment_2 extends AssignmentToken  {
	
	public Mapping_LabelAssignment_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getMappingAccess().getLabelAssignment_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Mapping_EqualsSignKeyword_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("label",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("label");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getMappingAccess().getLabelIDTerminalRuleCall_2_0_0(), value, null)) {
			type = AssignmentType.TERMINAL_RULE_CALL;
			element = grammarAccess.getMappingAccess().getLabelIDTerminalRuleCall_2_0_0();
			return obj;
		}
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getMappingAccess().getLabelSTRINGTerminalRuleCall_2_0_1(), value, null)) {
			type = AssignmentType.TERMINAL_RULE_CALL;
			element = grammarAccess.getMappingAccess().getLabelSTRINGTerminalRuleCall_2_0_1();
			return obj;
		}
		return null;
	}

}


/************ end Rule Mapping ****************/


/************ begin Rule VisibilityRule ****************
 *
 * VisibilityRule:
 * 
 * 	item=ID condition=("==" | ">" | "<" | ">=" | "<=" | "!=") sign=("-" | "+")? state=XState;
 *
 **/

// item=ID condition=("==" | ">" | "<" | ">=" | "<=" | "!=") sign=("-" | "+")? state=XState
protected class VisibilityRule_Group extends GroupToken {
	
	public VisibilityRule_Group(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getVisibilityRuleAccess().getGroup();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new VisibilityRule_StateAssignment_3(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getVisibilityRuleRule().getType().getClassifier())
			return null;
		return eObjectConsumer;
	}

}

// item=ID
protected class VisibilityRule_ItemAssignment_0 extends AssignmentToken  {
	
	public VisibilityRule_ItemAssignment_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getVisibilityRuleAccess().getItemAssignment_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("item",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("item");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getVisibilityRuleAccess().getItemIDTerminalRuleCall_0_0(), value, null)) {
			type = AssignmentType.TERMINAL_RULE_CALL;
			element = grammarAccess.getVisibilityRuleAccess().getItemIDTerminalRuleCall_0_0();
			return obj;
		}
		return null;
	}

}

// condition=("==" | ">" | "<" | ">=" | "<=" | "!=")
protected class VisibilityRule_ConditionAssignment_1 extends AssignmentToken  {
	
	public VisibilityRule_ConditionAssignment_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getVisibilityRuleAccess().getConditionAssignment_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new VisibilityRule_ItemAssignment_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("condition",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("condition");
		if(keywordSerializer.isValid(obj.getEObject(), grammarAccess.getVisibilityRuleAccess().getConditionEqualsSignEqualsSignKeyword_1_0_0(), value, null)) {
			type = AssignmentType.KEYWORD;
			element = grammarAccess.getVisibilityRuleAccess().getConditionEqualsSignEqualsSignKeyword_1_0_0();
			return obj;
		}
		if(keywordSerializer.isValid(obj.getEObject(), grammarAccess.getVisibilityRuleAccess().getConditionGreaterThanSignKeyword_1_0_1(), value, null)) {
			type = AssignmentType.KEYWORD;
			element = grammarAccess.getVisibilityRuleAccess().getConditionGreaterThanSignKeyword_1_0_1();
			return obj;
		}
		if(keywordSerializer.isValid(obj.getEObject(), grammarAccess.getVisibilityRuleAccess().getConditionLessThanSignKeyword_1_0_2(), value, null)) {
			type = AssignmentType.KEYWORD;
			element = grammarAccess.getVisibilityRuleAccess().getConditionLessThanSignKeyword_1_0_2();
			return obj;
		}
		if(keywordSerializer.isValid(obj.getEObject(), grammarAccess.getVisibilityRuleAccess().getConditionGreaterThanSignEqualsSignKeyword_1_0_3(), value, null)) {
			type = AssignmentType.KEYWORD;
			element = grammarAccess.getVisibilityRuleAccess().getConditionGreaterThanSignEqualsSignKeyword_1_0_3();
			return obj;
		}
		if(keywordSerializer.isValid(obj.getEObject(), grammarAccess.getVisibilityRuleAccess().getConditionLessThanSignEqualsSignKeyword_1_0_4(), value, null)) {
			type = AssignmentType.KEYWORD;
			element = grammarAccess.getVisibilityRuleAccess().getConditionLessThanSignEqualsSignKeyword_1_0_4();
			return obj;
		}
		if(keywordSerializer.isValid(obj.getEObject(), grammarAccess.getVisibilityRuleAccess().getConditionExclamationMarkEqualsSignKeyword_1_0_5(), value, null)) {
			type = AssignmentType.KEYWORD;
			element = grammarAccess.getVisibilityRuleAccess().getConditionExclamationMarkEqualsSignKeyword_1_0_5();
			return obj;
		}
		return null;
	}

}

// sign=("-" | "+")?
protected class VisibilityRule_SignAssignment_2 extends AssignmentToken  {
	
	public VisibilityRule_SignAssignment_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getVisibilityRuleAccess().getSignAssignment_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new VisibilityRule_ConditionAssignment_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("sign",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("sign");
		if(keywordSerializer.isValid(obj.getEObject(), grammarAccess.getVisibilityRuleAccess().getSignHyphenMinusKeyword_2_0_0(), value, null)) {
			type = AssignmentType.KEYWORD;
			element = grammarAccess.getVisibilityRuleAccess().getSignHyphenMinusKeyword_2_0_0();
			return obj;
		}
		if(keywordSerializer.isValid(obj.getEObject(), grammarAccess.getVisibilityRuleAccess().getSignPlusSignKeyword_2_0_1(), value, null)) {
			type = AssignmentType.KEYWORD;
			element = grammarAccess.getVisibilityRuleAccess().getSignPlusSignKeyword_2_0_1();
			return obj;
		}
		return null;
	}

}

// state=XState
protected class VisibilityRule_StateAssignment_3 extends AssignmentToken  {
	
	public VisibilityRule_StateAssignment_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getVisibilityRuleAccess().getStateAssignment_3();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new VisibilityRule_SignAssignment_2(lastRuleCallOrigin, this, 0, inst);
			case 1: return new VisibilityRule_ConditionAssignment_1(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("state",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("state");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getVisibilityRuleAccess().getStateXStateParserRuleCall_3_0(), value, null)) {
			type = AssignmentType.DATATYPE_RULE_CALL;
			element = grammarAccess.getVisibilityRuleAccess().getStateXStateParserRuleCall_3_0();
			return obj;
		}
		return null;
	}

}


/************ end Rule VisibilityRule ****************/





/************ begin Rule ColorArray ****************
 *
 * ColorArray:
 * 
 * 	(item=ID? condition=("==" | ">" | "<" | ">=" | "<=" | "!=")? sign=("-" | "+")? state=XState "=")? arg=STRING;
 *
 **/

// (item=ID? condition=("==" | ">" | "<" | ">=" | "<=" | "!=")? sign=("-" | "+")? state=XState "=")? arg=STRING
protected class ColorArray_Group extends GroupToken {
	
	public ColorArray_Group(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getColorArrayAccess().getGroup();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ColorArray_ArgAssignment_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getColorArrayRule().getType().getClassifier())
			return null;
		return eObjectConsumer;
	}

}

// (item=ID? condition=("==" | ">" | "<" | ">=" | "<=" | "!=")? sign=("-" | "+")? state=XState "=")?
protected class ColorArray_Group_0 extends GroupToken {
	
	public ColorArray_Group_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getColorArrayAccess().getGroup_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ColorArray_EqualsSignKeyword_0_4(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// item=ID?
protected class ColorArray_ItemAssignment_0_0 extends AssignmentToken  {
	
	public ColorArray_ItemAssignment_0_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getColorArrayAccess().getItemAssignment_0_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("item",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("item");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getColorArrayAccess().getItemIDTerminalRuleCall_0_0_0(), value, null)) {
			type = AssignmentType.TERMINAL_RULE_CALL;
			element = grammarAccess.getColorArrayAccess().getItemIDTerminalRuleCall_0_0_0();
			return obj;
		}
		return null;
	}

}

// condition=("==" | ">" | "<" | ">=" | "<=" | "!=")?
protected class ColorArray_ConditionAssignment_0_1 extends AssignmentToken  {
	
	public ColorArray_ConditionAssignment_0_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getColorArrayAccess().getConditionAssignment_0_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ColorArray_ItemAssignment_0_0(lastRuleCallOrigin, this, 0, inst);
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index - 1, inst);
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("condition",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("condition");
		if(keywordSerializer.isValid(obj.getEObject(), grammarAccess.getColorArrayAccess().getConditionEqualsSignEqualsSignKeyword_0_1_0_0(), value, null)) {
			type = AssignmentType.KEYWORD;
			element = grammarAccess.getColorArrayAccess().getConditionEqualsSignEqualsSignKeyword_0_1_0_0();
			return obj;
		}
		if(keywordSerializer.isValid(obj.getEObject(), grammarAccess.getColorArrayAccess().getConditionGreaterThanSignKeyword_0_1_0_1(), value, null)) {
			type = AssignmentType.KEYWORD;
			element = grammarAccess.getColorArrayAccess().getConditionGreaterThanSignKeyword_0_1_0_1();
			return obj;
		}
		if(keywordSerializer.isValid(obj.getEObject(), grammarAccess.getColorArrayAccess().getConditionLessThanSignKeyword_0_1_0_2(), value, null)) {
			type = AssignmentType.KEYWORD;
			element = grammarAccess.getColorArrayAccess().getConditionLessThanSignKeyword_0_1_0_2();
			return obj;
		}
		if(keywordSerializer.isValid(obj.getEObject(), grammarAccess.getColorArrayAccess().getConditionGreaterThanSignEqualsSignKeyword_0_1_0_3(), value, null)) {
			type = AssignmentType.KEYWORD;
			element = grammarAccess.getColorArrayAccess().getConditionGreaterThanSignEqualsSignKeyword_0_1_0_3();
			return obj;
		}
		if(keywordSerializer.isValid(obj.getEObject(), grammarAccess.getColorArrayAccess().getConditionLessThanSignEqualsSignKeyword_0_1_0_4(), value, null)) {
			type = AssignmentType.KEYWORD;
			element = grammarAccess.getColorArrayAccess().getConditionLessThanSignEqualsSignKeyword_0_1_0_4();
			return obj;
		}
		if(keywordSerializer.isValid(obj.getEObject(), grammarAccess.getColorArrayAccess().getConditionExclamationMarkEqualsSignKeyword_0_1_0_5(), value, null)) {
			type = AssignmentType.KEYWORD;
			element = grammarAccess.getColorArrayAccess().getConditionExclamationMarkEqualsSignKeyword_0_1_0_5();
			return obj;
		}
		return null;
	}

}

// sign=("-" | "+")?
protected class ColorArray_SignAssignment_0_2 extends AssignmentToken  {
	
	public ColorArray_SignAssignment_0_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getColorArrayAccess().getSignAssignment_0_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ColorArray_ConditionAssignment_0_1(lastRuleCallOrigin, this, 0, inst);
			case 1: return new ColorArray_ItemAssignment_0_0(lastRuleCallOrigin, this, 1, inst);
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index - 2, inst);
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("sign",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("sign");
		if(keywordSerializer.isValid(obj.getEObject(), grammarAccess.getColorArrayAccess().getSignHyphenMinusKeyword_0_2_0_0(), value, null)) {
			type = AssignmentType.KEYWORD;
			element = grammarAccess.getColorArrayAccess().getSignHyphenMinusKeyword_0_2_0_0();
			return obj;
		}
		if(keywordSerializer.isValid(obj.getEObject(), grammarAccess.getColorArrayAccess().getSignPlusSignKeyword_0_2_0_1(), value, null)) {
			type = AssignmentType.KEYWORD;
			element = grammarAccess.getColorArrayAccess().getSignPlusSignKeyword_0_2_0_1();
			return obj;
		}
		return null;
	}

}

// state=XState
protected class ColorArray_StateAssignment_0_3 extends AssignmentToken  {
	
	public ColorArray_StateAssignment_0_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getColorArrayAccess().getStateAssignment_0_3();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ColorArray_SignAssignment_0_2(lastRuleCallOrigin, this, 0, inst);
			case 1: return new ColorArray_ConditionAssignment_0_1(lastRuleCallOrigin, this, 1, inst);
			case 2: return new ColorArray_ItemAssignment_0_0(lastRuleCallOrigin, this, 2, inst);
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index - 3, inst);
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("state",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("state");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getColorArrayAccess().getStateXStateParserRuleCall_0_3_0(), value, null)) {
			type = AssignmentType.DATATYPE_RULE_CALL;
			element = grammarAccess.getColorArrayAccess().getStateXStateParserRuleCall_0_3_0();
			return obj;
		}
		return null;
	}

}

// "="
protected class ColorArray_EqualsSignKeyword_0_4 extends KeywordToken  {
	
	public ColorArray_EqualsSignKeyword_0_4(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getColorArrayAccess().getEqualsSignKeyword_0_4();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ColorArray_StateAssignment_0_3(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}


// arg=STRING
protected class ColorArray_ArgAssignment_1 extends AssignmentToken  {
	
	public ColorArray_ArgAssignment_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getColorArrayAccess().getArgAssignment_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ColorArray_Group_0(lastRuleCallOrigin, this, 0, inst);
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index - 1, inst);
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("arg",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("arg");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getColorArrayAccess().getArgSTRINGTerminalRuleCall_1_0(), value, null)) {
			type = AssignmentType.TERMINAL_RULE_CALL;
			element = grammarAccess.getColorArrayAccess().getArgSTRINGTerminalRuleCall_1_0();
			return obj;
		}
		return null;
	}

}


/************ end Rule ColorArray ****************/




}
