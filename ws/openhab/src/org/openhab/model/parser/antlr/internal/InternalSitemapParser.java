package org.openhab.model.parser.antlr.internal; 

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import org.openhab.model.services.SitemapGrammarAccess;



import org.antlr.runtime.*;
import java.util.Stack;
import java.util.List;
import java.util.ArrayList;

@SuppressWarnings("all")
public class InternalSitemapParser extends AbstractInternalAntlrParser {
    public static final String[] tokenNames = new String[] {
        "<invalid>", "<EOR>", "<DOWN>", "<UP>", "RULE_ID", "RULE_STRING", "RULE_INT", "RULE_FLOAT", "RULE_ML_COMMENT", "RULE_SL_COMMENT", "RULE_WS", "RULE_ANY_OTHER", "'sitemap'", "'label='", "'icon='", "'{'", "'}'", "'Frame'", "'item='", "'labelcolor=['", "','", "']'", "'valuecolor=['", "'visibility=['", "'Text'", "'Group'", "'Image'", "'url='", "'refresh='", "'iconcolor=['", "'Video'", "'encoding='", "'Chart'", "'service='", "'period='", "'Webview'", "'height='", "'Switch'", "'mappings=['", "'Slider'", "'sendFrequency='", "'switchSupport'", "'Selection'", "'List'", "'separator='", "'Setpoint'", "'minValue='", "'maxValue='", "'step='", "'Colorpicker'", "'='", "'=='", "'>'", "'<'", "'>='", "'<='", "'!='", "'-'", "'+'"
    };
    public static final int RULE_ID=4;
    public static final int T__29=29;
    public static final int T__28=28;
    public static final int T__27=27;
    public static final int T__26=26;
    public static final int T__25=25;
    public static final int T__24=24;
    public static final int T__23=23;
    public static final int T__22=22;
    public static final int RULE_ANY_OTHER=11;
    public static final int T__21=21;
    public static final int T__20=20;
    public static final int EOF=-1;
    public static final int T__55=55;
    public static final int T__56=56;
    public static final int T__19=19;
    public static final int T__57=57;
    public static final int T__58=58;
    public static final int T__51=51;
    public static final int T__16=16;
    public static final int T__52=52;
    public static final int T__15=15;
    public static final int T__53=53;
    public static final int T__18=18;
    public static final int T__54=54;
    public static final int T__17=17;
    public static final int T__12=12;
    public static final int T__14=14;
    public static final int T__13=13;
    public static final int RULE_INT=6;
    public static final int T__50=50;
    public static final int T__42=42;
    public static final int T__43=43;
    public static final int T__40=40;
    public static final int T__41=41;
    public static final int T__46=46;
    public static final int T__47=47;
    public static final int T__44=44;
    public static final int T__45=45;
    public static final int T__48=48;
    public static final int T__49=49;
    public static final int RULE_FLOAT=7;
    public static final int RULE_SL_COMMENT=9;
    public static final int RULE_ML_COMMENT=8;
    public static final int T__30=30;
    public static final int T__31=31;
    public static final int RULE_STRING=5;
    public static final int T__32=32;
    public static final int T__33=33;
    public static final int T__34=34;
    public static final int T__35=35;
    public static final int T__36=36;
    public static final int T__37=37;
    public static final int T__38=38;
    public static final int T__39=39;
    public static final int RULE_WS=10;

    // delegates
    // delegators


        public InternalSitemapParser(TokenStream input) {
            this(input, new RecognizerSharedState());
        }
        public InternalSitemapParser(TokenStream input, RecognizerSharedState state) {
            super(input, state);
             
        }
        

    public String[] getTokenNames() { return InternalSitemapParser.tokenNames; }
    public String getGrammarFileName() { return "../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g"; }



     	private SitemapGrammarAccess grammarAccess;
     	
        public InternalSitemapParser(TokenStream input, SitemapGrammarAccess grammarAccess) {
            this(input);
            this.grammarAccess = grammarAccess;
            registerRules(grammarAccess.getGrammar());
        }
        
        @Override
        protected String getFirstRuleName() {
        	return "SitemapModel";	
       	}
       	
       	@Override
       	protected SitemapGrammarAccess getGrammarAccess() {
       		return grammarAccess;
       	}



    // $ANTLR start "entryRuleSitemapModel"
    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:67:1: entryRuleSitemapModel returns [EObject current=null] : iv_ruleSitemapModel= ruleSitemapModel EOF ;
    public final EObject entryRuleSitemapModel() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleSitemapModel = null;


        try {
            // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:68:2: (iv_ruleSitemapModel= ruleSitemapModel EOF )
            // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:69:2: iv_ruleSitemapModel= ruleSitemapModel EOF
            {
             newCompositeNode(grammarAccess.getSitemapModelRule()); 
            pushFollow(FOLLOW_ruleSitemapModel_in_entryRuleSitemapModel75);
            iv_ruleSitemapModel=ruleSitemapModel();

            state._fsp--;

             current =iv_ruleSitemapModel; 
            match(input,EOF,FOLLOW_EOF_in_entryRuleSitemapModel85); 

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleSitemapModel"


    // $ANTLR start "ruleSitemapModel"
    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:76:1: ruleSitemapModel returns [EObject current=null] : (otherlv_0= 'sitemap' this_Sitemap_1= ruleSitemap ) ;
    public final EObject ruleSitemapModel() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        EObject this_Sitemap_1 = null;


         enterRule(); 
            
        try {
            // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:79:28: ( (otherlv_0= 'sitemap' this_Sitemap_1= ruleSitemap ) )
            // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:80:1: (otherlv_0= 'sitemap' this_Sitemap_1= ruleSitemap )
            {
            // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:80:1: (otherlv_0= 'sitemap' this_Sitemap_1= ruleSitemap )
            // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:80:3: otherlv_0= 'sitemap' this_Sitemap_1= ruleSitemap
            {
            otherlv_0=(Token)match(input,12,FOLLOW_12_in_ruleSitemapModel122); 

                	newLeafNode(otherlv_0, grammarAccess.getSitemapModelAccess().getSitemapKeyword_0());
                
             
                    newCompositeNode(grammarAccess.getSitemapModelAccess().getSitemapParserRuleCall_1()); 
                
            pushFollow(FOLLOW_ruleSitemap_in_ruleSitemapModel144);
            this_Sitemap_1=ruleSitemap();

            state._fsp--;

             
                    current = this_Sitemap_1; 
                    afterParserOrEnumRuleCall();
                

            }


            }

             leaveRule(); 
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleSitemapModel"


    // $ANTLR start "entryRuleSitemap"
    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:101:1: entryRuleSitemap returns [EObject current=null] : iv_ruleSitemap= ruleSitemap EOF ;
    public final EObject entryRuleSitemap() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleSitemap = null;


        try {
            // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:102:2: (iv_ruleSitemap= ruleSitemap EOF )
            // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:103:2: iv_ruleSitemap= ruleSitemap EOF
            {
             newCompositeNode(grammarAccess.getSitemapRule()); 
            pushFollow(FOLLOW_ruleSitemap_in_entryRuleSitemap179);
            iv_ruleSitemap=ruleSitemap();

            state._fsp--;

             current =iv_ruleSitemap; 
            match(input,EOF,FOLLOW_EOF_in_entryRuleSitemap189); 

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleSitemap"


    // $ANTLR start "ruleSitemap"
    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:110:1: ruleSitemap returns [EObject current=null] : ( ( (lv_name_0_0= RULE_ID ) ) (otherlv_1= 'label=' ( (lv_label_2_0= RULE_STRING ) ) )? (otherlv_3= 'icon=' ( (lv_icon_4_0= RULE_STRING ) ) )? otherlv_5= '{' ( (lv_children_6_0= ruleWidget ) )+ otherlv_7= '}' ) ;
    public final EObject ruleSitemap() throws RecognitionException {
        EObject current = null;

        Token lv_name_0_0=null;
        Token otherlv_1=null;
        Token lv_label_2_0=null;
        Token otherlv_3=null;
        Token lv_icon_4_0=null;
        Token otherlv_5=null;
        Token otherlv_7=null;
        EObject lv_children_6_0 = null;


         enterRule(); 
            
        try {
            // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:113:28: ( ( ( (lv_name_0_0= RULE_ID ) ) (otherlv_1= 'label=' ( (lv_label_2_0= RULE_STRING ) ) )? (otherlv_3= 'icon=' ( (lv_icon_4_0= RULE_STRING ) ) )? otherlv_5= '{' ( (lv_children_6_0= ruleWidget ) )+ otherlv_7= '}' ) )
            // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:114:1: ( ( (lv_name_0_0= RULE_ID ) ) (otherlv_1= 'label=' ( (lv_label_2_0= RULE_STRING ) ) )? (otherlv_3= 'icon=' ( (lv_icon_4_0= RULE_STRING ) ) )? otherlv_5= '{' ( (lv_children_6_0= ruleWidget ) )+ otherlv_7= '}' )
            {
            // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:114:1: ( ( (lv_name_0_0= RULE_ID ) ) (otherlv_1= 'label=' ( (lv_label_2_0= RULE_STRING ) ) )? (otherlv_3= 'icon=' ( (lv_icon_4_0= RULE_STRING ) ) )? otherlv_5= '{' ( (lv_children_6_0= ruleWidget ) )+ otherlv_7= '}' )
            // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:114:2: ( (lv_name_0_0= RULE_ID ) ) (otherlv_1= 'label=' ( (lv_label_2_0= RULE_STRING ) ) )? (otherlv_3= 'icon=' ( (lv_icon_4_0= RULE_STRING ) ) )? otherlv_5= '{' ( (lv_children_6_0= ruleWidget ) )+ otherlv_7= '}'
            {
            // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:114:2: ( (lv_name_0_0= RULE_ID ) )
            // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:115:1: (lv_name_0_0= RULE_ID )
            {
            // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:115:1: (lv_name_0_0= RULE_ID )
            // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:116:3: lv_name_0_0= RULE_ID
            {
            lv_name_0_0=(Token)match(input,RULE_ID,FOLLOW_RULE_ID_in_ruleSitemap231); 

            			newLeafNode(lv_name_0_0, grammarAccess.getSitemapAccess().getNameIDTerminalRuleCall_0_0()); 
            		

            	        if (current==null) {
            	            current = createModelElement(grammarAccess.getSitemapRule());
            	        }
                   		setWithLastConsumed(
                   			current, 
                   			"name",
                    		lv_name_0_0, 
                    		"ID");
            	    

            }


            }

            // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:132:2: (otherlv_1= 'label=' ( (lv_label_2_0= RULE_STRING ) ) )?
            int alt1=2;
            int LA1_0 = input.LA(1);

            if ( (LA1_0==13) ) {
                alt1=1;
            }
            switch (alt1) {
                case 1 :
                    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:132:4: otherlv_1= 'label=' ( (lv_label_2_0= RULE_STRING ) )
                    {
                    otherlv_1=(Token)match(input,13,FOLLOW_13_in_ruleSitemap249); 

                        	newLeafNode(otherlv_1, grammarAccess.getSitemapAccess().getLabelKeyword_1_0());
                        
                    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:136:1: ( (lv_label_2_0= RULE_STRING ) )
                    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:137:1: (lv_label_2_0= RULE_STRING )
                    {
                    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:137:1: (lv_label_2_0= RULE_STRING )
                    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:138:3: lv_label_2_0= RULE_STRING
                    {
                    lv_label_2_0=(Token)match(input,RULE_STRING,FOLLOW_RULE_STRING_in_ruleSitemap266); 

                    			newLeafNode(lv_label_2_0, grammarAccess.getSitemapAccess().getLabelSTRINGTerminalRuleCall_1_1_0()); 
                    		

                    	        if (current==null) {
                    	            current = createModelElement(grammarAccess.getSitemapRule());
                    	        }
                           		setWithLastConsumed(
                           			current, 
                           			"label",
                            		lv_label_2_0, 
                            		"STRING");
                    	    

                    }


                    }


                    }
                    break;

            }

            // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:154:4: (otherlv_3= 'icon=' ( (lv_icon_4_0= RULE_STRING ) ) )?
            int alt2=2;
            int LA2_0 = input.LA(1);

            if ( (LA2_0==14) ) {
                alt2=1;
            }
            switch (alt2) {
                case 1 :
                    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:154:6: otherlv_3= 'icon=' ( (lv_icon_4_0= RULE_STRING ) )
                    {
                    otherlv_3=(Token)match(input,14,FOLLOW_14_in_ruleSitemap286); 

                        	newLeafNode(otherlv_3, grammarAccess.getSitemapAccess().getIconKeyword_2_0());
                        
                    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:158:1: ( (lv_icon_4_0= RULE_STRING ) )
                    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:159:1: (lv_icon_4_0= RULE_STRING )
                    {
                    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:159:1: (lv_icon_4_0= RULE_STRING )
                    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:160:3: lv_icon_4_0= RULE_STRING
                    {
                    lv_icon_4_0=(Token)match(input,RULE_STRING,FOLLOW_RULE_STRING_in_ruleSitemap303); 

                    			newLeafNode(lv_icon_4_0, grammarAccess.getSitemapAccess().getIconSTRINGTerminalRuleCall_2_1_0()); 
                    		

                    	        if (current==null) {
                    	            current = createModelElement(grammarAccess.getSitemapRule());
                    	        }
                           		setWithLastConsumed(
                           			current, 
                           			"icon",
                            		lv_icon_4_0, 
                            		"STRING");
                    	    

                    }


                    }


                    }
                    break;

            }

            otherlv_5=(Token)match(input,15,FOLLOW_15_in_ruleSitemap322); 

                	newLeafNode(otherlv_5, grammarAccess.getSitemapAccess().getLeftCurlyBracketKeyword_3());
                
            // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:180:1: ( (lv_children_6_0= ruleWidget ) )+
            int cnt3=0;
            loop3:
            do {
                int alt3=2;
                int LA3_0 = input.LA(1);

                if ( (LA3_0==17||(LA3_0>=24 && LA3_0<=26)||LA3_0==30||LA3_0==32||LA3_0==35||LA3_0==37||LA3_0==39||(LA3_0>=42 && LA3_0<=43)||LA3_0==45||LA3_0==49) ) {
                    alt3=1;
                }


                switch (alt3) {
            	case 1 :
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:181:1: (lv_children_6_0= ruleWidget )
            	    {
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:181:1: (lv_children_6_0= ruleWidget )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:182:3: lv_children_6_0= ruleWidget
            	    {
            	     
            	    	        newCompositeNode(grammarAccess.getSitemapAccess().getChildrenWidgetParserRuleCall_4_0()); 
            	    	    
            	    pushFollow(FOLLOW_ruleWidget_in_ruleSitemap343);
            	    lv_children_6_0=ruleWidget();

            	    state._fsp--;


            	    	        if (current==null) {
            	    	            current = createModelElementForParent(grammarAccess.getSitemapRule());
            	    	        }
            	           		add(
            	           			current, 
            	           			"children",
            	            		lv_children_6_0, 
            	            		"Widget");
            	    	        afterParserOrEnumRuleCall();
            	    	    

            	    }


            	    }
            	    break;

            	default :
            	    if ( cnt3 >= 1 ) break loop3;
                        EarlyExitException eee =
                            new EarlyExitException(3, input);
                        throw eee;
                }
                cnt3++;
            } while (true);

            otherlv_7=(Token)match(input,16,FOLLOW_16_in_ruleSitemap356); 

                	newLeafNode(otherlv_7, grammarAccess.getSitemapAccess().getRightCurlyBracketKeyword_5());
                

            }


            }

             leaveRule(); 
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleSitemap"


    // $ANTLR start "entryRuleWidget"
    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:210:1: entryRuleWidget returns [EObject current=null] : iv_ruleWidget= ruleWidget EOF ;
    public final EObject entryRuleWidget() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleWidget = null;


        try {
            // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:211:2: (iv_ruleWidget= ruleWidget EOF )
            // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:212:2: iv_ruleWidget= ruleWidget EOF
            {
             newCompositeNode(grammarAccess.getWidgetRule()); 
            pushFollow(FOLLOW_ruleWidget_in_entryRuleWidget392);
            iv_ruleWidget=ruleWidget();

            state._fsp--;

             current =iv_ruleWidget; 
            match(input,EOF,FOLLOW_EOF_in_entryRuleWidget402); 

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleWidget"


    // $ANTLR start "ruleWidget"
    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:219:1: ruleWidget returns [EObject current=null] : (this_LinkableWidget_0= ruleLinkableWidget | this_NonLinkableWidget_1= ruleNonLinkableWidget ) ;
    public final EObject ruleWidget() throws RecognitionException {
        EObject current = null;

        EObject this_LinkableWidget_0 = null;

        EObject this_NonLinkableWidget_1 = null;


         enterRule(); 
            
        try {
            // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:222:28: ( (this_LinkableWidget_0= ruleLinkableWidget | this_NonLinkableWidget_1= ruleNonLinkableWidget ) )
            // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:223:1: (this_LinkableWidget_0= ruleLinkableWidget | this_NonLinkableWidget_1= ruleNonLinkableWidget )
            {
            // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:223:1: (this_LinkableWidget_0= ruleLinkableWidget | this_NonLinkableWidget_1= ruleNonLinkableWidget )
            int alt4=2;
            int LA4_0 = input.LA(1);

            if ( (LA4_0==17||(LA4_0>=24 && LA4_0<=26)) ) {
                alt4=1;
            }
            else if ( (LA4_0==30||LA4_0==32||LA4_0==35||LA4_0==37||LA4_0==39||(LA4_0>=42 && LA4_0<=43)||LA4_0==45||LA4_0==49) ) {
                alt4=2;
            }
            else {
                NoViableAltException nvae =
                    new NoViableAltException("", 4, 0, input);

                throw nvae;
            }
            switch (alt4) {
                case 1 :
                    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:224:5: this_LinkableWidget_0= ruleLinkableWidget
                    {
                     
                            newCompositeNode(grammarAccess.getWidgetAccess().getLinkableWidgetParserRuleCall_0()); 
                        
                    pushFollow(FOLLOW_ruleLinkableWidget_in_ruleWidget449);
                    this_LinkableWidget_0=ruleLinkableWidget();

                    state._fsp--;

                     
                            current = this_LinkableWidget_0; 
                            afterParserOrEnumRuleCall();
                        

                    }
                    break;
                case 2 :
                    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:234:5: this_NonLinkableWidget_1= ruleNonLinkableWidget
                    {
                     
                            newCompositeNode(grammarAccess.getWidgetAccess().getNonLinkableWidgetParserRuleCall_1()); 
                        
                    pushFollow(FOLLOW_ruleNonLinkableWidget_in_ruleWidget476);
                    this_NonLinkableWidget_1=ruleNonLinkableWidget();

                    state._fsp--;

                     
                            current = this_NonLinkableWidget_1; 
                            afterParserOrEnumRuleCall();
                        

                    }
                    break;

            }


            }

             leaveRule(); 
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleWidget"


    // $ANTLR start "entryRuleNonLinkableWidget"
    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:250:1: entryRuleNonLinkableWidget returns [EObject current=null] : iv_ruleNonLinkableWidget= ruleNonLinkableWidget EOF ;
    public final EObject entryRuleNonLinkableWidget() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleNonLinkableWidget = null;


        try {
            // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:251:2: (iv_ruleNonLinkableWidget= ruleNonLinkableWidget EOF )
            // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:252:2: iv_ruleNonLinkableWidget= ruleNonLinkableWidget EOF
            {
             newCompositeNode(grammarAccess.getNonLinkableWidgetRule()); 
            pushFollow(FOLLOW_ruleNonLinkableWidget_in_entryRuleNonLinkableWidget511);
            iv_ruleNonLinkableWidget=ruleNonLinkableWidget();

            state._fsp--;

             current =iv_ruleNonLinkableWidget; 
            match(input,EOF,FOLLOW_EOF_in_entryRuleNonLinkableWidget521); 

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleNonLinkableWidget"


    // $ANTLR start "ruleNonLinkableWidget"
    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:259:1: ruleNonLinkableWidget returns [EObject current=null] : (this_Switch_0= ruleSwitch | this_Selection_1= ruleSelection | this_Slider_2= ruleSlider | this_List_3= ruleList | this_Setpoint_4= ruleSetpoint | this_Video_5= ruleVideo | this_Chart_6= ruleChart | this_Webview_7= ruleWebview | this_Colorpicker_8= ruleColorpicker ) ;
    public final EObject ruleNonLinkableWidget() throws RecognitionException {
        EObject current = null;

        EObject this_Switch_0 = null;

        EObject this_Selection_1 = null;

        EObject this_Slider_2 = null;

        EObject this_List_3 = null;

        EObject this_Setpoint_4 = null;

        EObject this_Video_5 = null;

        EObject this_Chart_6 = null;

        EObject this_Webview_7 = null;

        EObject this_Colorpicker_8 = null;


         enterRule(); 
            
        try {
            // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:262:28: ( (this_Switch_0= ruleSwitch | this_Selection_1= ruleSelection | this_Slider_2= ruleSlider | this_List_3= ruleList | this_Setpoint_4= ruleSetpoint | this_Video_5= ruleVideo | this_Chart_6= ruleChart | this_Webview_7= ruleWebview | this_Colorpicker_8= ruleColorpicker ) )
            // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:263:1: (this_Switch_0= ruleSwitch | this_Selection_1= ruleSelection | this_Slider_2= ruleSlider | this_List_3= ruleList | this_Setpoint_4= ruleSetpoint | this_Video_5= ruleVideo | this_Chart_6= ruleChart | this_Webview_7= ruleWebview | this_Colorpicker_8= ruleColorpicker )
            {
            // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:263:1: (this_Switch_0= ruleSwitch | this_Selection_1= ruleSelection | this_Slider_2= ruleSlider | this_List_3= ruleList | this_Setpoint_4= ruleSetpoint | this_Video_5= ruleVideo | this_Chart_6= ruleChart | this_Webview_7= ruleWebview | this_Colorpicker_8= ruleColorpicker )
            int alt5=9;
            switch ( input.LA(1) ) {
            case 37:
                {
                alt5=1;
                }
                break;
            case 42:
                {
                alt5=2;
                }
                break;
            case 39:
                {
                alt5=3;
                }
                break;
            case 43:
                {
                alt5=4;
                }
                break;
            case 45:
                {
                alt5=5;
                }
                break;
            case 30:
                {
                alt5=6;
                }
                break;
            case 32:
                {
                alt5=7;
                }
                break;
            case 35:
                {
                alt5=8;
                }
                break;
            case 49:
                {
                alt5=9;
                }
                break;
            default:
                NoViableAltException nvae =
                    new NoViableAltException("", 5, 0, input);

                throw nvae;
            }

            switch (alt5) {
                case 1 :
                    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:264:5: this_Switch_0= ruleSwitch
                    {
                     
                            newCompositeNode(grammarAccess.getNonLinkableWidgetAccess().getSwitchParserRuleCall_0()); 
                        
                    pushFollow(FOLLOW_ruleSwitch_in_ruleNonLinkableWidget568);
                    this_Switch_0=ruleSwitch();

                    state._fsp--;

                     
                            current = this_Switch_0; 
                            afterParserOrEnumRuleCall();
                        

                    }
                    break;
                case 2 :
                    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:274:5: this_Selection_1= ruleSelection
                    {
                     
                            newCompositeNode(grammarAccess.getNonLinkableWidgetAccess().getSelectionParserRuleCall_1()); 
                        
                    pushFollow(FOLLOW_ruleSelection_in_ruleNonLinkableWidget595);
                    this_Selection_1=ruleSelection();

                    state._fsp--;

                     
                            current = this_Selection_1; 
                            afterParserOrEnumRuleCall();
                        

                    }
                    break;
                case 3 :
                    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:284:5: this_Slider_2= ruleSlider
                    {
                     
                            newCompositeNode(grammarAccess.getNonLinkableWidgetAccess().getSliderParserRuleCall_2()); 
                        
                    pushFollow(FOLLOW_ruleSlider_in_ruleNonLinkableWidget622);
                    this_Slider_2=ruleSlider();

                    state._fsp--;

                     
                            current = this_Slider_2; 
                            afterParserOrEnumRuleCall();
                        

                    }
                    break;
                case 4 :
                    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:294:5: this_List_3= ruleList
                    {
                     
                            newCompositeNode(grammarAccess.getNonLinkableWidgetAccess().getListParserRuleCall_3()); 
                        
                    pushFollow(FOLLOW_ruleList_in_ruleNonLinkableWidget649);
                    this_List_3=ruleList();

                    state._fsp--;

                     
                            current = this_List_3; 
                            afterParserOrEnumRuleCall();
                        

                    }
                    break;
                case 5 :
                    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:304:5: this_Setpoint_4= ruleSetpoint
                    {
                     
                            newCompositeNode(grammarAccess.getNonLinkableWidgetAccess().getSetpointParserRuleCall_4()); 
                        
                    pushFollow(FOLLOW_ruleSetpoint_in_ruleNonLinkableWidget676);
                    this_Setpoint_4=ruleSetpoint();

                    state._fsp--;

                     
                            current = this_Setpoint_4; 
                            afterParserOrEnumRuleCall();
                        

                    }
                    break;
                case 6 :
                    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:314:5: this_Video_5= ruleVideo
                    {
                     
                            newCompositeNode(grammarAccess.getNonLinkableWidgetAccess().getVideoParserRuleCall_5()); 
                        
                    pushFollow(FOLLOW_ruleVideo_in_ruleNonLinkableWidget703);
                    this_Video_5=ruleVideo();

                    state._fsp--;

                     
                            current = this_Video_5; 
                            afterParserOrEnumRuleCall();
                        

                    }
                    break;
                case 7 :
                    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:324:5: this_Chart_6= ruleChart
                    {
                     
                            newCompositeNode(grammarAccess.getNonLinkableWidgetAccess().getChartParserRuleCall_6()); 
                        
                    pushFollow(FOLLOW_ruleChart_in_ruleNonLinkableWidget730);
                    this_Chart_6=ruleChart();

                    state._fsp--;

                     
                            current = this_Chart_6; 
                            afterParserOrEnumRuleCall();
                        

                    }
                    break;
                case 8 :
                    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:334:5: this_Webview_7= ruleWebview
                    {
                     
                            newCompositeNode(grammarAccess.getNonLinkableWidgetAccess().getWebviewParserRuleCall_7()); 
                        
                    pushFollow(FOLLOW_ruleWebview_in_ruleNonLinkableWidget757);
                    this_Webview_7=ruleWebview();

                    state._fsp--;

                     
                            current = this_Webview_7; 
                            afterParserOrEnumRuleCall();
                        

                    }
                    break;
                case 9 :
                    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:344:5: this_Colorpicker_8= ruleColorpicker
                    {
                     
                            newCompositeNode(grammarAccess.getNonLinkableWidgetAccess().getColorpickerParserRuleCall_8()); 
                        
                    pushFollow(FOLLOW_ruleColorpicker_in_ruleNonLinkableWidget784);
                    this_Colorpicker_8=ruleColorpicker();

                    state._fsp--;

                     
                            current = this_Colorpicker_8; 
                            afterParserOrEnumRuleCall();
                        

                    }
                    break;

            }


            }

             leaveRule(); 
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleNonLinkableWidget"


    // $ANTLR start "entryRuleLinkableWidget"
    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:360:1: entryRuleLinkableWidget returns [EObject current=null] : iv_ruleLinkableWidget= ruleLinkableWidget EOF ;
    public final EObject entryRuleLinkableWidget() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleLinkableWidget = null;


        try {
            // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:361:2: (iv_ruleLinkableWidget= ruleLinkableWidget EOF )
            // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:362:2: iv_ruleLinkableWidget= ruleLinkableWidget EOF
            {
             newCompositeNode(grammarAccess.getLinkableWidgetRule()); 
            pushFollow(FOLLOW_ruleLinkableWidget_in_entryRuleLinkableWidget819);
            iv_ruleLinkableWidget=ruleLinkableWidget();

            state._fsp--;

             current =iv_ruleLinkableWidget; 
            match(input,EOF,FOLLOW_EOF_in_entryRuleLinkableWidget829); 

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleLinkableWidget"


    // $ANTLR start "ruleLinkableWidget"
    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:369:1: ruleLinkableWidget returns [EObject current=null] : ( (this_Text_0= ruleText | this_Group_1= ruleGroup | this_Image_2= ruleImage | this_Frame_3= ruleFrame ) (otherlv_4= '{' ( (lv_children_5_0= ruleWidget ) )+ otherlv_6= '}' )? ) ;
    public final EObject ruleLinkableWidget() throws RecognitionException {
        EObject current = null;

        Token otherlv_4=null;
        Token otherlv_6=null;
        EObject this_Text_0 = null;

        EObject this_Group_1 = null;

        EObject this_Image_2 = null;

        EObject this_Frame_3 = null;

        EObject lv_children_5_0 = null;


         enterRule(); 
            
        try {
            // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:372:28: ( ( (this_Text_0= ruleText | this_Group_1= ruleGroup | this_Image_2= ruleImage | this_Frame_3= ruleFrame ) (otherlv_4= '{' ( (lv_children_5_0= ruleWidget ) )+ otherlv_6= '}' )? ) )
            // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:373:1: ( (this_Text_0= ruleText | this_Group_1= ruleGroup | this_Image_2= ruleImage | this_Frame_3= ruleFrame ) (otherlv_4= '{' ( (lv_children_5_0= ruleWidget ) )+ otherlv_6= '}' )? )
            {
            // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:373:1: ( (this_Text_0= ruleText | this_Group_1= ruleGroup | this_Image_2= ruleImage | this_Frame_3= ruleFrame ) (otherlv_4= '{' ( (lv_children_5_0= ruleWidget ) )+ otherlv_6= '}' )? )
            // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:373:2: (this_Text_0= ruleText | this_Group_1= ruleGroup | this_Image_2= ruleImage | this_Frame_3= ruleFrame ) (otherlv_4= '{' ( (lv_children_5_0= ruleWidget ) )+ otherlv_6= '}' )?
            {
            // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:373:2: (this_Text_0= ruleText | this_Group_1= ruleGroup | this_Image_2= ruleImage | this_Frame_3= ruleFrame )
            int alt6=4;
            switch ( input.LA(1) ) {
            case 24:
                {
                alt6=1;
                }
                break;
            case 25:
                {
                alt6=2;
                }
                break;
            case 26:
                {
                alt6=3;
                }
                break;
            case 17:
                {
                alt6=4;
                }
                break;
            default:
                NoViableAltException nvae =
                    new NoViableAltException("", 6, 0, input);

                throw nvae;
            }

            switch (alt6) {
                case 1 :
                    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:374:5: this_Text_0= ruleText
                    {
                     
                            newCompositeNode(grammarAccess.getLinkableWidgetAccess().getTextParserRuleCall_0_0()); 
                        
                    pushFollow(FOLLOW_ruleText_in_ruleLinkableWidget877);
                    this_Text_0=ruleText();

                    state._fsp--;

                     
                            current = this_Text_0; 
                            afterParserOrEnumRuleCall();
                        

                    }
                    break;
                case 2 :
                    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:384:5: this_Group_1= ruleGroup
                    {
                     
                            newCompositeNode(grammarAccess.getLinkableWidgetAccess().getGroupParserRuleCall_0_1()); 
                        
                    pushFollow(FOLLOW_ruleGroup_in_ruleLinkableWidget904);
                    this_Group_1=ruleGroup();

                    state._fsp--;

                     
                            current = this_Group_1; 
                            afterParserOrEnumRuleCall();
                        

                    }
                    break;
                case 3 :
                    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:394:5: this_Image_2= ruleImage
                    {
                     
                            newCompositeNode(grammarAccess.getLinkableWidgetAccess().getImageParserRuleCall_0_2()); 
                        
                    pushFollow(FOLLOW_ruleImage_in_ruleLinkableWidget931);
                    this_Image_2=ruleImage();

                    state._fsp--;

                     
                            current = this_Image_2; 
                            afterParserOrEnumRuleCall();
                        

                    }
                    break;
                case 4 :
                    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:404:5: this_Frame_3= ruleFrame
                    {
                     
                            newCompositeNode(grammarAccess.getLinkableWidgetAccess().getFrameParserRuleCall_0_3()); 
                        
                    pushFollow(FOLLOW_ruleFrame_in_ruleLinkableWidget958);
                    this_Frame_3=ruleFrame();

                    state._fsp--;

                     
                            current = this_Frame_3; 
                            afterParserOrEnumRuleCall();
                        

                    }
                    break;

            }

            // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:412:2: (otherlv_4= '{' ( (lv_children_5_0= ruleWidget ) )+ otherlv_6= '}' )?
            int alt8=2;
            int LA8_0 = input.LA(1);

            if ( (LA8_0==15) ) {
                alt8=1;
            }
            switch (alt8) {
                case 1 :
                    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:412:4: otherlv_4= '{' ( (lv_children_5_0= ruleWidget ) )+ otherlv_6= '}'
                    {
                    otherlv_4=(Token)match(input,15,FOLLOW_15_in_ruleLinkableWidget971); 

                        	newLeafNode(otherlv_4, grammarAccess.getLinkableWidgetAccess().getLeftCurlyBracketKeyword_1_0());
                        
                    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:416:1: ( (lv_children_5_0= ruleWidget ) )+
                    int cnt7=0;
                    loop7:
                    do {
                        int alt7=2;
                        int LA7_0 = input.LA(1);

                        if ( (LA7_0==17||(LA7_0>=24 && LA7_0<=26)||LA7_0==30||LA7_0==32||LA7_0==35||LA7_0==37||LA7_0==39||(LA7_0>=42 && LA7_0<=43)||LA7_0==45||LA7_0==49) ) {
                            alt7=1;
                        }


                        switch (alt7) {
                    	case 1 :
                    	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:417:1: (lv_children_5_0= ruleWidget )
                    	    {
                    	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:417:1: (lv_children_5_0= ruleWidget )
                    	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:418:3: lv_children_5_0= ruleWidget
                    	    {
                    	     
                    	    	        newCompositeNode(grammarAccess.getLinkableWidgetAccess().getChildrenWidgetParserRuleCall_1_1_0()); 
                    	    	    
                    	    pushFollow(FOLLOW_ruleWidget_in_ruleLinkableWidget992);
                    	    lv_children_5_0=ruleWidget();

                    	    state._fsp--;


                    	    	        if (current==null) {
                    	    	            current = createModelElementForParent(grammarAccess.getLinkableWidgetRule());
                    	    	        }
                    	           		add(
                    	           			current, 
                    	           			"children",
                    	            		lv_children_5_0, 
                    	            		"Widget");
                    	    	        afterParserOrEnumRuleCall();
                    	    	    

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    if ( cnt7 >= 1 ) break loop7;
                                EarlyExitException eee =
                                    new EarlyExitException(7, input);
                                throw eee;
                        }
                        cnt7++;
                    } while (true);

                    otherlv_6=(Token)match(input,16,FOLLOW_16_in_ruleLinkableWidget1005); 

                        	newLeafNode(otherlv_6, grammarAccess.getLinkableWidgetAccess().getRightCurlyBracketKeyword_1_2());
                        

                    }
                    break;

            }


            }


            }

             leaveRule(); 
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleLinkableWidget"


    // $ANTLR start "entryRuleFrame"
    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:446:1: entryRuleFrame returns [EObject current=null] : iv_ruleFrame= ruleFrame EOF ;
    public final EObject entryRuleFrame() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleFrame = null;


        try {
            // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:447:2: (iv_ruleFrame= ruleFrame EOF )
            // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:448:2: iv_ruleFrame= ruleFrame EOF
            {
             newCompositeNode(grammarAccess.getFrameRule()); 
            pushFollow(FOLLOW_ruleFrame_in_entryRuleFrame1043);
            iv_ruleFrame=ruleFrame();

            state._fsp--;

             current =iv_ruleFrame; 
            match(input,EOF,FOLLOW_EOF_in_entryRuleFrame1053); 

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleFrame"


    // $ANTLR start "ruleFrame"
    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:455:1: ruleFrame returns [EObject current=null] : ( () otherlv_1= 'Frame' ( ( ( ( ({...}? => ( ({...}? => (otherlv_3= 'item=' ( (lv_item_4_0= ruleItemRef ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_5= 'label=' ( ( (lv_label_6_1= RULE_ID | lv_label_6_2= RULE_STRING ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= 'icon=' ( (lv_icon_8_0= ruleIcon ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= 'labelcolor=[' ( ( (lv_LabelColor_10_0= ruleColorArray ) ) (otherlv_11= ',' ( (lv_LabelColor_12_0= ruleColorArray ) ) )* otherlv_13= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= 'valuecolor=[' ( ( (lv_ValueColor_15_0= ruleColorArray ) ) (otherlv_16= ',' ( (lv_ValueColor_17_0= ruleColorArray ) ) )* otherlv_18= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_19= 'visibility=[' ( ( (lv_Visibility_20_0= ruleVisibilityRule ) ) (otherlv_21= ',' ( (lv_Visibility_22_0= ruleVisibilityRule ) ) )* otherlv_23= ']' ) ) ) ) ) )* ) ) ) ) ;
    public final EObject ruleFrame() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        Token lv_label_6_1=null;
        Token lv_label_6_2=null;
        Token otherlv_7=null;
        Token otherlv_9=null;
        Token otherlv_11=null;
        Token otherlv_13=null;
        Token otherlv_14=null;
        Token otherlv_16=null;
        Token otherlv_18=null;
        Token otherlv_19=null;
        Token otherlv_21=null;
        Token otherlv_23=null;
        AntlrDatatypeRuleToken lv_item_4_0 = null;

        AntlrDatatypeRuleToken lv_icon_8_0 = null;

        EObject lv_LabelColor_10_0 = null;

        EObject lv_LabelColor_12_0 = null;

        EObject lv_ValueColor_15_0 = null;

        EObject lv_ValueColor_17_0 = null;

        EObject lv_Visibility_20_0 = null;

        EObject lv_Visibility_22_0 = null;


         enterRule(); 
            
        try {
            // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:458:28: ( ( () otherlv_1= 'Frame' ( ( ( ( ({...}? => ( ({...}? => (otherlv_3= 'item=' ( (lv_item_4_0= ruleItemRef ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_5= 'label=' ( ( (lv_label_6_1= RULE_ID | lv_label_6_2= RULE_STRING ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= 'icon=' ( (lv_icon_8_0= ruleIcon ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= 'labelcolor=[' ( ( (lv_LabelColor_10_0= ruleColorArray ) ) (otherlv_11= ',' ( (lv_LabelColor_12_0= ruleColorArray ) ) )* otherlv_13= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= 'valuecolor=[' ( ( (lv_ValueColor_15_0= ruleColorArray ) ) (otherlv_16= ',' ( (lv_ValueColor_17_0= ruleColorArray ) ) )* otherlv_18= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_19= 'visibility=[' ( ( (lv_Visibility_20_0= ruleVisibilityRule ) ) (otherlv_21= ',' ( (lv_Visibility_22_0= ruleVisibilityRule ) ) )* otherlv_23= ']' ) ) ) ) ) )* ) ) ) ) )
            // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:459:1: ( () otherlv_1= 'Frame' ( ( ( ( ({...}? => ( ({...}? => (otherlv_3= 'item=' ( (lv_item_4_0= ruleItemRef ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_5= 'label=' ( ( (lv_label_6_1= RULE_ID | lv_label_6_2= RULE_STRING ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= 'icon=' ( (lv_icon_8_0= ruleIcon ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= 'labelcolor=[' ( ( (lv_LabelColor_10_0= ruleColorArray ) ) (otherlv_11= ',' ( (lv_LabelColor_12_0= ruleColorArray ) ) )* otherlv_13= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= 'valuecolor=[' ( ( (lv_ValueColor_15_0= ruleColorArray ) ) (otherlv_16= ',' ( (lv_ValueColor_17_0= ruleColorArray ) ) )* otherlv_18= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_19= 'visibility=[' ( ( (lv_Visibility_20_0= ruleVisibilityRule ) ) (otherlv_21= ',' ( (lv_Visibility_22_0= ruleVisibilityRule ) ) )* otherlv_23= ']' ) ) ) ) ) )* ) ) ) )
            {
            // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:459:1: ( () otherlv_1= 'Frame' ( ( ( ( ({...}? => ( ({...}? => (otherlv_3= 'item=' ( (lv_item_4_0= ruleItemRef ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_5= 'label=' ( ( (lv_label_6_1= RULE_ID | lv_label_6_2= RULE_STRING ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= 'icon=' ( (lv_icon_8_0= ruleIcon ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= 'labelcolor=[' ( ( (lv_LabelColor_10_0= ruleColorArray ) ) (otherlv_11= ',' ( (lv_LabelColor_12_0= ruleColorArray ) ) )* otherlv_13= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= 'valuecolor=[' ( ( (lv_ValueColor_15_0= ruleColorArray ) ) (otherlv_16= ',' ( (lv_ValueColor_17_0= ruleColorArray ) ) )* otherlv_18= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_19= 'visibility=[' ( ( (lv_Visibility_20_0= ruleVisibilityRule ) ) (otherlv_21= ',' ( (lv_Visibility_22_0= ruleVisibilityRule ) ) )* otherlv_23= ']' ) ) ) ) ) )* ) ) ) )
            // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:459:2: () otherlv_1= 'Frame' ( ( ( ( ({...}? => ( ({...}? => (otherlv_3= 'item=' ( (lv_item_4_0= ruleItemRef ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_5= 'label=' ( ( (lv_label_6_1= RULE_ID | lv_label_6_2= RULE_STRING ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= 'icon=' ( (lv_icon_8_0= ruleIcon ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= 'labelcolor=[' ( ( (lv_LabelColor_10_0= ruleColorArray ) ) (otherlv_11= ',' ( (lv_LabelColor_12_0= ruleColorArray ) ) )* otherlv_13= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= 'valuecolor=[' ( ( (lv_ValueColor_15_0= ruleColorArray ) ) (otherlv_16= ',' ( (lv_ValueColor_17_0= ruleColorArray ) ) )* otherlv_18= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_19= 'visibility=[' ( ( (lv_Visibility_20_0= ruleVisibilityRule ) ) (otherlv_21= ',' ( (lv_Visibility_22_0= ruleVisibilityRule ) ) )* otherlv_23= ']' ) ) ) ) ) )* ) ) )
            {
            // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:459:2: ()
            // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:460:5: 
            {

                    current = forceCreateModelElement(
                        grammarAccess.getFrameAccess().getFrameAction_0(),
                        current);
                

            }

            otherlv_1=(Token)match(input,17,FOLLOW_17_in_ruleFrame1099); 

                	newLeafNode(otherlv_1, grammarAccess.getFrameAccess().getFrameKeyword_1());
                
            // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:469:1: ( ( ( ( ({...}? => ( ({...}? => (otherlv_3= 'item=' ( (lv_item_4_0= ruleItemRef ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_5= 'label=' ( ( (lv_label_6_1= RULE_ID | lv_label_6_2= RULE_STRING ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= 'icon=' ( (lv_icon_8_0= ruleIcon ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= 'labelcolor=[' ( ( (lv_LabelColor_10_0= ruleColorArray ) ) (otherlv_11= ',' ( (lv_LabelColor_12_0= ruleColorArray ) ) )* otherlv_13= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= 'valuecolor=[' ( ( (lv_ValueColor_15_0= ruleColorArray ) ) (otherlv_16= ',' ( (lv_ValueColor_17_0= ruleColorArray ) ) )* otherlv_18= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_19= 'visibility=[' ( ( (lv_Visibility_20_0= ruleVisibilityRule ) ) (otherlv_21= ',' ( (lv_Visibility_22_0= ruleVisibilityRule ) ) )* otherlv_23= ']' ) ) ) ) ) )* ) ) )
            // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:471:1: ( ( ( ({...}? => ( ({...}? => (otherlv_3= 'item=' ( (lv_item_4_0= ruleItemRef ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_5= 'label=' ( ( (lv_label_6_1= RULE_ID | lv_label_6_2= RULE_STRING ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= 'icon=' ( (lv_icon_8_0= ruleIcon ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= 'labelcolor=[' ( ( (lv_LabelColor_10_0= ruleColorArray ) ) (otherlv_11= ',' ( (lv_LabelColor_12_0= ruleColorArray ) ) )* otherlv_13= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= 'valuecolor=[' ( ( (lv_ValueColor_15_0= ruleColorArray ) ) (otherlv_16= ',' ( (lv_ValueColor_17_0= ruleColorArray ) ) )* otherlv_18= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_19= 'visibility=[' ( ( (lv_Visibility_20_0= ruleVisibilityRule ) ) (otherlv_21= ',' ( (lv_Visibility_22_0= ruleVisibilityRule ) ) )* otherlv_23= ']' ) ) ) ) ) )* ) )
            {
            // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:471:1: ( ( ( ({...}? => ( ({...}? => (otherlv_3= 'item=' ( (lv_item_4_0= ruleItemRef ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_5= 'label=' ( ( (lv_label_6_1= RULE_ID | lv_label_6_2= RULE_STRING ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= 'icon=' ( (lv_icon_8_0= ruleIcon ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= 'labelcolor=[' ( ( (lv_LabelColor_10_0= ruleColorArray ) ) (otherlv_11= ',' ( (lv_LabelColor_12_0= ruleColorArray ) ) )* otherlv_13= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= 'valuecolor=[' ( ( (lv_ValueColor_15_0= ruleColorArray ) ) (otherlv_16= ',' ( (lv_ValueColor_17_0= ruleColorArray ) ) )* otherlv_18= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_19= 'visibility=[' ( ( (lv_Visibility_20_0= ruleVisibilityRule ) ) (otherlv_21= ',' ( (lv_Visibility_22_0= ruleVisibilityRule ) ) )* otherlv_23= ']' ) ) ) ) ) )* ) )
            // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:472:2: ( ( ({...}? => ( ({...}? => (otherlv_3= 'item=' ( (lv_item_4_0= ruleItemRef ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_5= 'label=' ( ( (lv_label_6_1= RULE_ID | lv_label_6_2= RULE_STRING ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= 'icon=' ( (lv_icon_8_0= ruleIcon ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= 'labelcolor=[' ( ( (lv_LabelColor_10_0= ruleColorArray ) ) (otherlv_11= ',' ( (lv_LabelColor_12_0= ruleColorArray ) ) )* otherlv_13= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= 'valuecolor=[' ( ( (lv_ValueColor_15_0= ruleColorArray ) ) (otherlv_16= ',' ( (lv_ValueColor_17_0= ruleColorArray ) ) )* otherlv_18= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_19= 'visibility=[' ( ( (lv_Visibility_20_0= ruleVisibilityRule ) ) (otherlv_21= ',' ( (lv_Visibility_22_0= ruleVisibilityRule ) ) )* otherlv_23= ']' ) ) ) ) ) )* )
            {
             
            	  getUnorderedGroupHelper().enter(grammarAccess.getFrameAccess().getUnorderedGroup_2());
            	
            // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:475:2: ( ( ({...}? => ( ({...}? => (otherlv_3= 'item=' ( (lv_item_4_0= ruleItemRef ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_5= 'label=' ( ( (lv_label_6_1= RULE_ID | lv_label_6_2= RULE_STRING ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= 'icon=' ( (lv_icon_8_0= ruleIcon ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= 'labelcolor=[' ( ( (lv_LabelColor_10_0= ruleColorArray ) ) (otherlv_11= ',' ( (lv_LabelColor_12_0= ruleColorArray ) ) )* otherlv_13= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= 'valuecolor=[' ( ( (lv_ValueColor_15_0= ruleColorArray ) ) (otherlv_16= ',' ( (lv_ValueColor_17_0= ruleColorArray ) ) )* otherlv_18= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_19= 'visibility=[' ( ( (lv_Visibility_20_0= ruleVisibilityRule ) ) (otherlv_21= ',' ( (lv_Visibility_22_0= ruleVisibilityRule ) ) )* otherlv_23= ']' ) ) ) ) ) )* )
            // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:476:3: ( ({...}? => ( ({...}? => (otherlv_3= 'item=' ( (lv_item_4_0= ruleItemRef ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_5= 'label=' ( ( (lv_label_6_1= RULE_ID | lv_label_6_2= RULE_STRING ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= 'icon=' ( (lv_icon_8_0= ruleIcon ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= 'labelcolor=[' ( ( (lv_LabelColor_10_0= ruleColorArray ) ) (otherlv_11= ',' ( (lv_LabelColor_12_0= ruleColorArray ) ) )* otherlv_13= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= 'valuecolor=[' ( ( (lv_ValueColor_15_0= ruleColorArray ) ) (otherlv_16= ',' ( (lv_ValueColor_17_0= ruleColorArray ) ) )* otherlv_18= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_19= 'visibility=[' ( ( (lv_Visibility_20_0= ruleVisibilityRule ) ) (otherlv_21= ',' ( (lv_Visibility_22_0= ruleVisibilityRule ) ) )* otherlv_23= ']' ) ) ) ) ) )*
            {
            // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:476:3: ( ({...}? => ( ({...}? => (otherlv_3= 'item=' ( (lv_item_4_0= ruleItemRef ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_5= 'label=' ( ( (lv_label_6_1= RULE_ID | lv_label_6_2= RULE_STRING ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= 'icon=' ( (lv_icon_8_0= ruleIcon ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= 'labelcolor=[' ( ( (lv_LabelColor_10_0= ruleColorArray ) ) (otherlv_11= ',' ( (lv_LabelColor_12_0= ruleColorArray ) ) )* otherlv_13= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= 'valuecolor=[' ( ( (lv_ValueColor_15_0= ruleColorArray ) ) (otherlv_16= ',' ( (lv_ValueColor_17_0= ruleColorArray ) ) )* otherlv_18= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_19= 'visibility=[' ( ( (lv_Visibility_20_0= ruleVisibilityRule ) ) (otherlv_21= ',' ( (lv_Visibility_22_0= ruleVisibilityRule ) ) )* otherlv_23= ']' ) ) ) ) ) )*
            loop13:
            do {
                int alt13=7;
                int LA13_0 = input.LA(1);

                if ( LA13_0 ==18 && getUnorderedGroupHelper().canSelect(grammarAccess.getFrameAccess().getUnorderedGroup_2(), 0) ) {
                    alt13=1;
                }
                else if ( LA13_0 ==13 && getUnorderedGroupHelper().canSelect(grammarAccess.getFrameAccess().getUnorderedGroup_2(), 1) ) {
                    alt13=2;
                }
                else if ( LA13_0 ==14 && getUnorderedGroupHelper().canSelect(grammarAccess.getFrameAccess().getUnorderedGroup_2(), 2) ) {
                    alt13=3;
                }
                else if ( LA13_0 ==19 && getUnorderedGroupHelper().canSelect(grammarAccess.getFrameAccess().getUnorderedGroup_2(), 3) ) {
                    alt13=4;
                }
                else if ( LA13_0 ==22 && getUnorderedGroupHelper().canSelect(grammarAccess.getFrameAccess().getUnorderedGroup_2(), 4) ) {
                    alt13=5;
                }
                else if ( LA13_0 ==23 && getUnorderedGroupHelper().canSelect(grammarAccess.getFrameAccess().getUnorderedGroup_2(), 5) ) {
                    alt13=6;
                }


                switch (alt13) {
            	case 1 :
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:478:4: ({...}? => ( ({...}? => (otherlv_3= 'item=' ( (lv_item_4_0= ruleItemRef ) ) ) ) ) )
            	    {
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:478:4: ({...}? => ( ({...}? => (otherlv_3= 'item=' ( (lv_item_4_0= ruleItemRef ) ) ) ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:479:5: {...}? => ( ({...}? => (otherlv_3= 'item=' ( (lv_item_4_0= ruleItemRef ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getFrameAccess().getUnorderedGroup_2(), 0) ) {
            	        throw new FailedPredicateException(input, "ruleFrame", "getUnorderedGroupHelper().canSelect(grammarAccess.getFrameAccess().getUnorderedGroup_2(), 0)");
            	    }
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:479:102: ( ({...}? => (otherlv_3= 'item=' ( (lv_item_4_0= ruleItemRef ) ) ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:480:6: ({...}? => (otherlv_3= 'item=' ( (lv_item_4_0= ruleItemRef ) ) ) )
            	    {
            	     
            	    	 				  getUnorderedGroupHelper().select(grammarAccess.getFrameAccess().getUnorderedGroup_2(), 0);
            	    	 				
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:483:6: ({...}? => (otherlv_3= 'item=' ( (lv_item_4_0= ruleItemRef ) ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:483:7: {...}? => (otherlv_3= 'item=' ( (lv_item_4_0= ruleItemRef ) ) )
            	    {
            	    if ( !((true)) ) {
            	        throw new FailedPredicateException(input, "ruleFrame", "true");
            	    }
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:483:16: (otherlv_3= 'item=' ( (lv_item_4_0= ruleItemRef ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:483:18: otherlv_3= 'item=' ( (lv_item_4_0= ruleItemRef ) )
            	    {
            	    otherlv_3=(Token)match(input,18,FOLLOW_18_in_ruleFrame1157); 

            	        	newLeafNode(otherlv_3, grammarAccess.getFrameAccess().getItemKeyword_2_0_0());
            	        
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:487:1: ( (lv_item_4_0= ruleItemRef ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:488:1: (lv_item_4_0= ruleItemRef )
            	    {
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:488:1: (lv_item_4_0= ruleItemRef )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:489:3: lv_item_4_0= ruleItemRef
            	    {
            	     
            	    	        newCompositeNode(grammarAccess.getFrameAccess().getItemItemRefParserRuleCall_2_0_1_0()); 
            	    	    
            	    pushFollow(FOLLOW_ruleItemRef_in_ruleFrame1178);
            	    lv_item_4_0=ruleItemRef();

            	    state._fsp--;


            	    	        if (current==null) {
            	    	            current = createModelElementForParent(grammarAccess.getFrameRule());
            	    	        }
            	           		set(
            	           			current, 
            	           			"item",
            	            		lv_item_4_0, 
            	            		"ItemRef");
            	    	        afterParserOrEnumRuleCall();
            	    	    

            	    }


            	    }


            	    }


            	    }

            	     
            	    	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getFrameAccess().getUnorderedGroup_2());
            	    	 				

            	    }


            	    }


            	    }
            	    break;
            	case 2 :
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:512:4: ({...}? => ( ({...}? => (otherlv_5= 'label=' ( ( (lv_label_6_1= RULE_ID | lv_label_6_2= RULE_STRING ) ) ) ) ) ) )
            	    {
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:512:4: ({...}? => ( ({...}? => (otherlv_5= 'label=' ( ( (lv_label_6_1= RULE_ID | lv_label_6_2= RULE_STRING ) ) ) ) ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:513:5: {...}? => ( ({...}? => (otherlv_5= 'label=' ( ( (lv_label_6_1= RULE_ID | lv_label_6_2= RULE_STRING ) ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getFrameAccess().getUnorderedGroup_2(), 1) ) {
            	        throw new FailedPredicateException(input, "ruleFrame", "getUnorderedGroupHelper().canSelect(grammarAccess.getFrameAccess().getUnorderedGroup_2(), 1)");
            	    }
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:513:102: ( ({...}? => (otherlv_5= 'label=' ( ( (lv_label_6_1= RULE_ID | lv_label_6_2= RULE_STRING ) ) ) ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:514:6: ({...}? => (otherlv_5= 'label=' ( ( (lv_label_6_1= RULE_ID | lv_label_6_2= RULE_STRING ) ) ) ) )
            	    {
            	     
            	    	 				  getUnorderedGroupHelper().select(grammarAccess.getFrameAccess().getUnorderedGroup_2(), 1);
            	    	 				
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:517:6: ({...}? => (otherlv_5= 'label=' ( ( (lv_label_6_1= RULE_ID | lv_label_6_2= RULE_STRING ) ) ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:517:7: {...}? => (otherlv_5= 'label=' ( ( (lv_label_6_1= RULE_ID | lv_label_6_2= RULE_STRING ) ) ) )
            	    {
            	    if ( !((true)) ) {
            	        throw new FailedPredicateException(input, "ruleFrame", "true");
            	    }
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:517:16: (otherlv_5= 'label=' ( ( (lv_label_6_1= RULE_ID | lv_label_6_2= RULE_STRING ) ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:517:18: otherlv_5= 'label=' ( ( (lv_label_6_1= RULE_ID | lv_label_6_2= RULE_STRING ) ) )
            	    {
            	    otherlv_5=(Token)match(input,13,FOLLOW_13_in_ruleFrame1246); 

            	        	newLeafNode(otherlv_5, grammarAccess.getFrameAccess().getLabelKeyword_2_1_0());
            	        
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:521:1: ( ( (lv_label_6_1= RULE_ID | lv_label_6_2= RULE_STRING ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:522:1: ( (lv_label_6_1= RULE_ID | lv_label_6_2= RULE_STRING ) )
            	    {
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:522:1: ( (lv_label_6_1= RULE_ID | lv_label_6_2= RULE_STRING ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:523:1: (lv_label_6_1= RULE_ID | lv_label_6_2= RULE_STRING )
            	    {
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:523:1: (lv_label_6_1= RULE_ID | lv_label_6_2= RULE_STRING )
            	    int alt9=2;
            	    int LA9_0 = input.LA(1);

            	    if ( (LA9_0==RULE_ID) ) {
            	        alt9=1;
            	    }
            	    else if ( (LA9_0==RULE_STRING) ) {
            	        alt9=2;
            	    }
            	    else {
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 9, 0, input);

            	        throw nvae;
            	    }
            	    switch (alt9) {
            	        case 1 :
            	            // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:524:3: lv_label_6_1= RULE_ID
            	            {
            	            lv_label_6_1=(Token)match(input,RULE_ID,FOLLOW_RULE_ID_in_ruleFrame1265); 

            	            			newLeafNode(lv_label_6_1, grammarAccess.getFrameAccess().getLabelIDTerminalRuleCall_2_1_1_0_0()); 
            	            		

            	            	        if (current==null) {
            	            	            current = createModelElement(grammarAccess.getFrameRule());
            	            	        }
            	                   		setWithLastConsumed(
            	                   			current, 
            	                   			"label",
            	                    		lv_label_6_1, 
            	                    		"ID");
            	            	    

            	            }
            	            break;
            	        case 2 :
            	            // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:539:8: lv_label_6_2= RULE_STRING
            	            {
            	            lv_label_6_2=(Token)match(input,RULE_STRING,FOLLOW_RULE_STRING_in_ruleFrame1285); 

            	            			newLeafNode(lv_label_6_2, grammarAccess.getFrameAccess().getLabelSTRINGTerminalRuleCall_2_1_1_0_1()); 
            	            		

            	            	        if (current==null) {
            	            	            current = createModelElement(grammarAccess.getFrameRule());
            	            	        }
            	                   		setWithLastConsumed(
            	                   			current, 
            	                   			"label",
            	                    		lv_label_6_2, 
            	                    		"STRING");
            	            	    

            	            }
            	            break;

            	    }


            	    }


            	    }


            	    }


            	    }

            	     
            	    	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getFrameAccess().getUnorderedGroup_2());
            	    	 				

            	    }


            	    }


            	    }
            	    break;
            	case 3 :
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:564:4: ({...}? => ( ({...}? => (otherlv_7= 'icon=' ( (lv_icon_8_0= ruleIcon ) ) ) ) ) )
            	    {
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:564:4: ({...}? => ( ({...}? => (otherlv_7= 'icon=' ( (lv_icon_8_0= ruleIcon ) ) ) ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:565:5: {...}? => ( ({...}? => (otherlv_7= 'icon=' ( (lv_icon_8_0= ruleIcon ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getFrameAccess().getUnorderedGroup_2(), 2) ) {
            	        throw new FailedPredicateException(input, "ruleFrame", "getUnorderedGroupHelper().canSelect(grammarAccess.getFrameAccess().getUnorderedGroup_2(), 2)");
            	    }
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:565:102: ( ({...}? => (otherlv_7= 'icon=' ( (lv_icon_8_0= ruleIcon ) ) ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:566:6: ({...}? => (otherlv_7= 'icon=' ( (lv_icon_8_0= ruleIcon ) ) ) )
            	    {
            	     
            	    	 				  getUnorderedGroupHelper().select(grammarAccess.getFrameAccess().getUnorderedGroup_2(), 2);
            	    	 				
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:569:6: ({...}? => (otherlv_7= 'icon=' ( (lv_icon_8_0= ruleIcon ) ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:569:7: {...}? => (otherlv_7= 'icon=' ( (lv_icon_8_0= ruleIcon ) ) )
            	    {
            	    if ( !((true)) ) {
            	        throw new FailedPredicateException(input, "ruleFrame", "true");
            	    }
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:569:16: (otherlv_7= 'icon=' ( (lv_icon_8_0= ruleIcon ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:569:18: otherlv_7= 'icon=' ( (lv_icon_8_0= ruleIcon ) )
            	    {
            	    otherlv_7=(Token)match(input,14,FOLLOW_14_in_ruleFrame1361); 

            	        	newLeafNode(otherlv_7, grammarAccess.getFrameAccess().getIconKeyword_2_2_0());
            	        
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:573:1: ( (lv_icon_8_0= ruleIcon ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:574:1: (lv_icon_8_0= ruleIcon )
            	    {
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:574:1: (lv_icon_8_0= ruleIcon )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:575:3: lv_icon_8_0= ruleIcon
            	    {
            	     
            	    	        newCompositeNode(grammarAccess.getFrameAccess().getIconIconParserRuleCall_2_2_1_0()); 
            	    	    
            	    pushFollow(FOLLOW_ruleIcon_in_ruleFrame1382);
            	    lv_icon_8_0=ruleIcon();

            	    state._fsp--;


            	    	        if (current==null) {
            	    	            current = createModelElementForParent(grammarAccess.getFrameRule());
            	    	        }
            	           		set(
            	           			current, 
            	           			"icon",
            	            		lv_icon_8_0, 
            	            		"Icon");
            	    	        afterParserOrEnumRuleCall();
            	    	    

            	    }


            	    }


            	    }


            	    }

            	     
            	    	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getFrameAccess().getUnorderedGroup_2());
            	    	 				

            	    }


            	    }


            	    }
            	    break;
            	case 4 :
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:598:4: ({...}? => ( ({...}? => (otherlv_9= 'labelcolor=[' ( ( (lv_LabelColor_10_0= ruleColorArray ) ) (otherlv_11= ',' ( (lv_LabelColor_12_0= ruleColorArray ) ) )* otherlv_13= ']' ) ) ) ) )
            	    {
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:598:4: ({...}? => ( ({...}? => (otherlv_9= 'labelcolor=[' ( ( (lv_LabelColor_10_0= ruleColorArray ) ) (otherlv_11= ',' ( (lv_LabelColor_12_0= ruleColorArray ) ) )* otherlv_13= ']' ) ) ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:599:5: {...}? => ( ({...}? => (otherlv_9= 'labelcolor=[' ( ( (lv_LabelColor_10_0= ruleColorArray ) ) (otherlv_11= ',' ( (lv_LabelColor_12_0= ruleColorArray ) ) )* otherlv_13= ']' ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getFrameAccess().getUnorderedGroup_2(), 3) ) {
            	        throw new FailedPredicateException(input, "ruleFrame", "getUnorderedGroupHelper().canSelect(grammarAccess.getFrameAccess().getUnorderedGroup_2(), 3)");
            	    }
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:599:102: ( ({...}? => (otherlv_9= 'labelcolor=[' ( ( (lv_LabelColor_10_0= ruleColorArray ) ) (otherlv_11= ',' ( (lv_LabelColor_12_0= ruleColorArray ) ) )* otherlv_13= ']' ) ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:600:6: ({...}? => (otherlv_9= 'labelcolor=[' ( ( (lv_LabelColor_10_0= ruleColorArray ) ) (otherlv_11= ',' ( (lv_LabelColor_12_0= ruleColorArray ) ) )* otherlv_13= ']' ) ) )
            	    {
            	     
            	    	 				  getUnorderedGroupHelper().select(grammarAccess.getFrameAccess().getUnorderedGroup_2(), 3);
            	    	 				
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:603:6: ({...}? => (otherlv_9= 'labelcolor=[' ( ( (lv_LabelColor_10_0= ruleColorArray ) ) (otherlv_11= ',' ( (lv_LabelColor_12_0= ruleColorArray ) ) )* otherlv_13= ']' ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:603:7: {...}? => (otherlv_9= 'labelcolor=[' ( ( (lv_LabelColor_10_0= ruleColorArray ) ) (otherlv_11= ',' ( (lv_LabelColor_12_0= ruleColorArray ) ) )* otherlv_13= ']' ) )
            	    {
            	    if ( !((true)) ) {
            	        throw new FailedPredicateException(input, "ruleFrame", "true");
            	    }
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:603:16: (otherlv_9= 'labelcolor=[' ( ( (lv_LabelColor_10_0= ruleColorArray ) ) (otherlv_11= ',' ( (lv_LabelColor_12_0= ruleColorArray ) ) )* otherlv_13= ']' ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:603:18: otherlv_9= 'labelcolor=[' ( ( (lv_LabelColor_10_0= ruleColorArray ) ) (otherlv_11= ',' ( (lv_LabelColor_12_0= ruleColorArray ) ) )* otherlv_13= ']' )
            	    {
            	    otherlv_9=(Token)match(input,19,FOLLOW_19_in_ruleFrame1450); 

            	        	newLeafNode(otherlv_9, grammarAccess.getFrameAccess().getLabelcolorKeyword_2_3_0());
            	        
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:607:1: ( ( (lv_LabelColor_10_0= ruleColorArray ) ) (otherlv_11= ',' ( (lv_LabelColor_12_0= ruleColorArray ) ) )* otherlv_13= ']' )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:607:2: ( (lv_LabelColor_10_0= ruleColorArray ) ) (otherlv_11= ',' ( (lv_LabelColor_12_0= ruleColorArray ) ) )* otherlv_13= ']'
            	    {
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:607:2: ( (lv_LabelColor_10_0= ruleColorArray ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:608:1: (lv_LabelColor_10_0= ruleColorArray )
            	    {
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:608:1: (lv_LabelColor_10_0= ruleColorArray )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:609:3: lv_LabelColor_10_0= ruleColorArray
            	    {
            	     
            	    	        newCompositeNode(grammarAccess.getFrameAccess().getLabelColorColorArrayParserRuleCall_2_3_1_0_0()); 
            	    	    
            	    pushFollow(FOLLOW_ruleColorArray_in_ruleFrame1472);
            	    lv_LabelColor_10_0=ruleColorArray();

            	    state._fsp--;


            	    	        if (current==null) {
            	    	            current = createModelElementForParent(grammarAccess.getFrameRule());
            	    	        }
            	           		add(
            	           			current, 
            	           			"LabelColor",
            	            		lv_LabelColor_10_0, 
            	            		"ColorArray");
            	    	        afterParserOrEnumRuleCall();
            	    	    

            	    }


            	    }

            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:625:2: (otherlv_11= ',' ( (lv_LabelColor_12_0= ruleColorArray ) ) )*
            	    loop10:
            	    do {
            	        int alt10=2;
            	        int LA10_0 = input.LA(1);

            	        if ( (LA10_0==20) ) {
            	            alt10=1;
            	        }


            	        switch (alt10) {
            	    	case 1 :
            	    	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:625:4: otherlv_11= ',' ( (lv_LabelColor_12_0= ruleColorArray ) )
            	    	    {
            	    	    otherlv_11=(Token)match(input,20,FOLLOW_20_in_ruleFrame1485); 

            	    	        	newLeafNode(otherlv_11, grammarAccess.getFrameAccess().getCommaKeyword_2_3_1_1_0());
            	    	        
            	    	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:629:1: ( (lv_LabelColor_12_0= ruleColorArray ) )
            	    	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:630:1: (lv_LabelColor_12_0= ruleColorArray )
            	    	    {
            	    	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:630:1: (lv_LabelColor_12_0= ruleColorArray )
            	    	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:631:3: lv_LabelColor_12_0= ruleColorArray
            	    	    {
            	    	     
            	    	    	        newCompositeNode(grammarAccess.getFrameAccess().getLabelColorColorArrayParserRuleCall_2_3_1_1_1_0()); 
            	    	    	    
            	    	    pushFollow(FOLLOW_ruleColorArray_in_ruleFrame1506);
            	    	    lv_LabelColor_12_0=ruleColorArray();

            	    	    state._fsp--;


            	    	    	        if (current==null) {
            	    	    	            current = createModelElementForParent(grammarAccess.getFrameRule());
            	    	    	        }
            	    	           		add(
            	    	           			current, 
            	    	           			"LabelColor",
            	    	            		lv_LabelColor_12_0, 
            	    	            		"ColorArray");
            	    	    	        afterParserOrEnumRuleCall();
            	    	    	    

            	    	    }


            	    	    }


            	    	    }
            	    	    break;

            	    	default :
            	    	    break loop10;
            	        }
            	    } while (true);

            	    otherlv_13=(Token)match(input,21,FOLLOW_21_in_ruleFrame1520); 

            	        	newLeafNode(otherlv_13, grammarAccess.getFrameAccess().getRightSquareBracketKeyword_2_3_1_2());
            	        

            	    }


            	    }


            	    }

            	     
            	    	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getFrameAccess().getUnorderedGroup_2());
            	    	 				

            	    }


            	    }


            	    }
            	    break;
            	case 5 :
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:658:4: ({...}? => ( ({...}? => (otherlv_14= 'valuecolor=[' ( ( (lv_ValueColor_15_0= ruleColorArray ) ) (otherlv_16= ',' ( (lv_ValueColor_17_0= ruleColorArray ) ) )* otherlv_18= ']' ) ) ) ) )
            	    {
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:658:4: ({...}? => ( ({...}? => (otherlv_14= 'valuecolor=[' ( ( (lv_ValueColor_15_0= ruleColorArray ) ) (otherlv_16= ',' ( (lv_ValueColor_17_0= ruleColorArray ) ) )* otherlv_18= ']' ) ) ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:659:5: {...}? => ( ({...}? => (otherlv_14= 'valuecolor=[' ( ( (lv_ValueColor_15_0= ruleColorArray ) ) (otherlv_16= ',' ( (lv_ValueColor_17_0= ruleColorArray ) ) )* otherlv_18= ']' ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getFrameAccess().getUnorderedGroup_2(), 4) ) {
            	        throw new FailedPredicateException(input, "ruleFrame", "getUnorderedGroupHelper().canSelect(grammarAccess.getFrameAccess().getUnorderedGroup_2(), 4)");
            	    }
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:659:102: ( ({...}? => (otherlv_14= 'valuecolor=[' ( ( (lv_ValueColor_15_0= ruleColorArray ) ) (otherlv_16= ',' ( (lv_ValueColor_17_0= ruleColorArray ) ) )* otherlv_18= ']' ) ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:660:6: ({...}? => (otherlv_14= 'valuecolor=[' ( ( (lv_ValueColor_15_0= ruleColorArray ) ) (otherlv_16= ',' ( (lv_ValueColor_17_0= ruleColorArray ) ) )* otherlv_18= ']' ) ) )
            	    {
            	     
            	    	 				  getUnorderedGroupHelper().select(grammarAccess.getFrameAccess().getUnorderedGroup_2(), 4);
            	    	 				
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:663:6: ({...}? => (otherlv_14= 'valuecolor=[' ( ( (lv_ValueColor_15_0= ruleColorArray ) ) (otherlv_16= ',' ( (lv_ValueColor_17_0= ruleColorArray ) ) )* otherlv_18= ']' ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:663:7: {...}? => (otherlv_14= 'valuecolor=[' ( ( (lv_ValueColor_15_0= ruleColorArray ) ) (otherlv_16= ',' ( (lv_ValueColor_17_0= ruleColorArray ) ) )* otherlv_18= ']' ) )
            	    {
            	    if ( !((true)) ) {
            	        throw new FailedPredicateException(input, "ruleFrame", "true");
            	    }
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:663:16: (otherlv_14= 'valuecolor=[' ( ( (lv_ValueColor_15_0= ruleColorArray ) ) (otherlv_16= ',' ( (lv_ValueColor_17_0= ruleColorArray ) ) )* otherlv_18= ']' ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:663:18: otherlv_14= 'valuecolor=[' ( ( (lv_ValueColor_15_0= ruleColorArray ) ) (otherlv_16= ',' ( (lv_ValueColor_17_0= ruleColorArray ) ) )* otherlv_18= ']' )
            	    {
            	    otherlv_14=(Token)match(input,22,FOLLOW_22_in_ruleFrame1589); 

            	        	newLeafNode(otherlv_14, grammarAccess.getFrameAccess().getValuecolorKeyword_2_4_0());
            	        
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:667:1: ( ( (lv_ValueColor_15_0= ruleColorArray ) ) (otherlv_16= ',' ( (lv_ValueColor_17_0= ruleColorArray ) ) )* otherlv_18= ']' )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:667:2: ( (lv_ValueColor_15_0= ruleColorArray ) ) (otherlv_16= ',' ( (lv_ValueColor_17_0= ruleColorArray ) ) )* otherlv_18= ']'
            	    {
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:667:2: ( (lv_ValueColor_15_0= ruleColorArray ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:668:1: (lv_ValueColor_15_0= ruleColorArray )
            	    {
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:668:1: (lv_ValueColor_15_0= ruleColorArray )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:669:3: lv_ValueColor_15_0= ruleColorArray
            	    {
            	     
            	    	        newCompositeNode(grammarAccess.getFrameAccess().getValueColorColorArrayParserRuleCall_2_4_1_0_0()); 
            	    	    
            	    pushFollow(FOLLOW_ruleColorArray_in_ruleFrame1611);
            	    lv_ValueColor_15_0=ruleColorArray();

            	    state._fsp--;


            	    	        if (current==null) {
            	    	            current = createModelElementForParent(grammarAccess.getFrameRule());
            	    	        }
            	           		add(
            	           			current, 
            	           			"ValueColor",
            	            		lv_ValueColor_15_0, 
            	            		"ColorArray");
            	    	        afterParserOrEnumRuleCall();
            	    	    

            	    }


            	    }

            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:685:2: (otherlv_16= ',' ( (lv_ValueColor_17_0= ruleColorArray ) ) )*
            	    loop11:
            	    do {
            	        int alt11=2;
            	        int LA11_0 = input.LA(1);

            	        if ( (LA11_0==20) ) {
            	            alt11=1;
            	        }


            	        switch (alt11) {
            	    	case 1 :
            	    	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:685:4: otherlv_16= ',' ( (lv_ValueColor_17_0= ruleColorArray ) )
            	    	    {
            	    	    otherlv_16=(Token)match(input,20,FOLLOW_20_in_ruleFrame1624); 

            	    	        	newLeafNode(otherlv_16, grammarAccess.getFrameAccess().getCommaKeyword_2_4_1_1_0());
            	    	        
            	    	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:689:1: ( (lv_ValueColor_17_0= ruleColorArray ) )
            	    	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:690:1: (lv_ValueColor_17_0= ruleColorArray )
            	    	    {
            	    	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:690:1: (lv_ValueColor_17_0= ruleColorArray )
            	    	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:691:3: lv_ValueColor_17_0= ruleColorArray
            	    	    {
            	    	     
            	    	    	        newCompositeNode(grammarAccess.getFrameAccess().getValueColorColorArrayParserRuleCall_2_4_1_1_1_0()); 
            	    	    	    
            	    	    pushFollow(FOLLOW_ruleColorArray_in_ruleFrame1645);
            	    	    lv_ValueColor_17_0=ruleColorArray();

            	    	    state._fsp--;


            	    	    	        if (current==null) {
            	    	    	            current = createModelElementForParent(grammarAccess.getFrameRule());
            	    	    	        }
            	    	           		add(
            	    	           			current, 
            	    	           			"ValueColor",
            	    	            		lv_ValueColor_17_0, 
            	    	            		"ColorArray");
            	    	    	        afterParserOrEnumRuleCall();
            	    	    	    

            	    	    }


            	    	    }


            	    	    }
            	    	    break;

            	    	default :
            	    	    break loop11;
            	        }
            	    } while (true);

            	    otherlv_18=(Token)match(input,21,FOLLOW_21_in_ruleFrame1659); 

            	        	newLeafNode(otherlv_18, grammarAccess.getFrameAccess().getRightSquareBracketKeyword_2_4_1_2());
            	        

            	    }


            	    }


            	    }

            	     
            	    	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getFrameAccess().getUnorderedGroup_2());
            	    	 				

            	    }


            	    }


            	    }
            	    break;
            	case 6 :
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:718:4: ({...}? => ( ({...}? => (otherlv_19= 'visibility=[' ( ( (lv_Visibility_20_0= ruleVisibilityRule ) ) (otherlv_21= ',' ( (lv_Visibility_22_0= ruleVisibilityRule ) ) )* otherlv_23= ']' ) ) ) ) )
            	    {
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:718:4: ({...}? => ( ({...}? => (otherlv_19= 'visibility=[' ( ( (lv_Visibility_20_0= ruleVisibilityRule ) ) (otherlv_21= ',' ( (lv_Visibility_22_0= ruleVisibilityRule ) ) )* otherlv_23= ']' ) ) ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:719:5: {...}? => ( ({...}? => (otherlv_19= 'visibility=[' ( ( (lv_Visibility_20_0= ruleVisibilityRule ) ) (otherlv_21= ',' ( (lv_Visibility_22_0= ruleVisibilityRule ) ) )* otherlv_23= ']' ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getFrameAccess().getUnorderedGroup_2(), 5) ) {
            	        throw new FailedPredicateException(input, "ruleFrame", "getUnorderedGroupHelper().canSelect(grammarAccess.getFrameAccess().getUnorderedGroup_2(), 5)");
            	    }
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:719:102: ( ({...}? => (otherlv_19= 'visibility=[' ( ( (lv_Visibility_20_0= ruleVisibilityRule ) ) (otherlv_21= ',' ( (lv_Visibility_22_0= ruleVisibilityRule ) ) )* otherlv_23= ']' ) ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:720:6: ({...}? => (otherlv_19= 'visibility=[' ( ( (lv_Visibility_20_0= ruleVisibilityRule ) ) (otherlv_21= ',' ( (lv_Visibility_22_0= ruleVisibilityRule ) ) )* otherlv_23= ']' ) ) )
            	    {
            	     
            	    	 				  getUnorderedGroupHelper().select(grammarAccess.getFrameAccess().getUnorderedGroup_2(), 5);
            	    	 				
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:723:6: ({...}? => (otherlv_19= 'visibility=[' ( ( (lv_Visibility_20_0= ruleVisibilityRule ) ) (otherlv_21= ',' ( (lv_Visibility_22_0= ruleVisibilityRule ) ) )* otherlv_23= ']' ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:723:7: {...}? => (otherlv_19= 'visibility=[' ( ( (lv_Visibility_20_0= ruleVisibilityRule ) ) (otherlv_21= ',' ( (lv_Visibility_22_0= ruleVisibilityRule ) ) )* otherlv_23= ']' ) )
            	    {
            	    if ( !((true)) ) {
            	        throw new FailedPredicateException(input, "ruleFrame", "true");
            	    }
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:723:16: (otherlv_19= 'visibility=[' ( ( (lv_Visibility_20_0= ruleVisibilityRule ) ) (otherlv_21= ',' ( (lv_Visibility_22_0= ruleVisibilityRule ) ) )* otherlv_23= ']' ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:723:18: otherlv_19= 'visibility=[' ( ( (lv_Visibility_20_0= ruleVisibilityRule ) ) (otherlv_21= ',' ( (lv_Visibility_22_0= ruleVisibilityRule ) ) )* otherlv_23= ']' )
            	    {
            	    otherlv_19=(Token)match(input,23,FOLLOW_23_in_ruleFrame1728); 

            	        	newLeafNode(otherlv_19, grammarAccess.getFrameAccess().getVisibilityKeyword_2_5_0());
            	        
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:727:1: ( ( (lv_Visibility_20_0= ruleVisibilityRule ) ) (otherlv_21= ',' ( (lv_Visibility_22_0= ruleVisibilityRule ) ) )* otherlv_23= ']' )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:727:2: ( (lv_Visibility_20_0= ruleVisibilityRule ) ) (otherlv_21= ',' ( (lv_Visibility_22_0= ruleVisibilityRule ) ) )* otherlv_23= ']'
            	    {
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:727:2: ( (lv_Visibility_20_0= ruleVisibilityRule ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:728:1: (lv_Visibility_20_0= ruleVisibilityRule )
            	    {
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:728:1: (lv_Visibility_20_0= ruleVisibilityRule )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:729:3: lv_Visibility_20_0= ruleVisibilityRule
            	    {
            	     
            	    	        newCompositeNode(grammarAccess.getFrameAccess().getVisibilityVisibilityRuleParserRuleCall_2_5_1_0_0()); 
            	    	    
            	    pushFollow(FOLLOW_ruleVisibilityRule_in_ruleFrame1750);
            	    lv_Visibility_20_0=ruleVisibilityRule();

            	    state._fsp--;


            	    	        if (current==null) {
            	    	            current = createModelElementForParent(grammarAccess.getFrameRule());
            	    	        }
            	           		add(
            	           			current, 
            	           			"Visibility",
            	            		lv_Visibility_20_0, 
            	            		"VisibilityRule");
            	    	        afterParserOrEnumRuleCall();
            	    	    

            	    }


            	    }

            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:745:2: (otherlv_21= ',' ( (lv_Visibility_22_0= ruleVisibilityRule ) ) )*
            	    loop12:
            	    do {
            	        int alt12=2;
            	        int LA12_0 = input.LA(1);

            	        if ( (LA12_0==20) ) {
            	            alt12=1;
            	        }


            	        switch (alt12) {
            	    	case 1 :
            	    	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:745:4: otherlv_21= ',' ( (lv_Visibility_22_0= ruleVisibilityRule ) )
            	    	    {
            	    	    otherlv_21=(Token)match(input,20,FOLLOW_20_in_ruleFrame1763); 

            	    	        	newLeafNode(otherlv_21, grammarAccess.getFrameAccess().getCommaKeyword_2_5_1_1_0());
            	    	        
            	    	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:749:1: ( (lv_Visibility_22_0= ruleVisibilityRule ) )
            	    	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:750:1: (lv_Visibility_22_0= ruleVisibilityRule )
            	    	    {
            	    	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:750:1: (lv_Visibility_22_0= ruleVisibilityRule )
            	    	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:751:3: lv_Visibility_22_0= ruleVisibilityRule
            	    	    {
            	    	     
            	    	    	        newCompositeNode(grammarAccess.getFrameAccess().getVisibilityVisibilityRuleParserRuleCall_2_5_1_1_1_0()); 
            	    	    	    
            	    	    pushFollow(FOLLOW_ruleVisibilityRule_in_ruleFrame1784);
            	    	    lv_Visibility_22_0=ruleVisibilityRule();

            	    	    state._fsp--;


            	    	    	        if (current==null) {
            	    	    	            current = createModelElementForParent(grammarAccess.getFrameRule());
            	    	    	        }
            	    	           		add(
            	    	           			current, 
            	    	           			"Visibility",
            	    	            		lv_Visibility_22_0, 
            	    	            		"VisibilityRule");
            	    	    	        afterParserOrEnumRuleCall();
            	    	    	    

            	    	    }


            	    	    }


            	    	    }
            	    	    break;

            	    	default :
            	    	    break loop12;
            	        }
            	    } while (true);

            	    otherlv_23=(Token)match(input,21,FOLLOW_21_in_ruleFrame1798); 

            	        	newLeafNode(otherlv_23, grammarAccess.getFrameAccess().getRightSquareBracketKeyword_2_5_1_2());
            	        

            	    }


            	    }


            	    }

            	     
            	    	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getFrameAccess().getUnorderedGroup_2());
            	    	 				

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop13;
                }
            } while (true);


            }


            }

             
            	  getUnorderedGroupHelper().leave(grammarAccess.getFrameAccess().getUnorderedGroup_2());
            	

            }


            }


            }

             leaveRule(); 
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleFrame"


    // $ANTLR start "entryRuleText"
    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:793:1: entryRuleText returns [EObject current=null] : iv_ruleText= ruleText EOF ;
    public final EObject entryRuleText() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleText = null;


        try {
            // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:794:2: (iv_ruleText= ruleText EOF )
            // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:795:2: iv_ruleText= ruleText EOF
            {
             newCompositeNode(grammarAccess.getTextRule()); 
            pushFollow(FOLLOW_ruleText_in_entryRuleText1876);
            iv_ruleText=ruleText();

            state._fsp--;

             current =iv_ruleText; 
            match(input,EOF,FOLLOW_EOF_in_entryRuleText1886); 

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleText"


    // $ANTLR start "ruleText"
    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:802:1: ruleText returns [EObject current=null] : ( () otherlv_1= 'Text' ( ( ( ( ({...}? => ( ({...}? => (otherlv_3= 'item=' ( (lv_item_4_0= ruleItemRef ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_5= 'label=' ( ( (lv_label_6_1= RULE_ID | lv_label_6_2= RULE_STRING ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= 'icon=' ( (lv_icon_8_0= ruleIcon ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= 'labelcolor=[' ( ( (lv_LabelColor_10_0= ruleColorArray ) ) (otherlv_11= ',' ( (lv_LabelColor_12_0= ruleColorArray ) ) )* otherlv_13= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= 'valuecolor=[' ( ( (lv_ValueColor_15_0= ruleColorArray ) ) (otherlv_16= ',' ( (lv_ValueColor_17_0= ruleColorArray ) ) )* otherlv_18= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_19= 'visibility=[' ( ( (lv_Visibility_20_0= ruleVisibilityRule ) ) (otherlv_21= ',' ( (lv_Visibility_22_0= ruleVisibilityRule ) ) )* otherlv_23= ']' ) ) ) ) ) )* ) ) ) ) ;
    public final EObject ruleText() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        Token lv_label_6_1=null;
        Token lv_label_6_2=null;
        Token otherlv_7=null;
        Token otherlv_9=null;
        Token otherlv_11=null;
        Token otherlv_13=null;
        Token otherlv_14=null;
        Token otherlv_16=null;
        Token otherlv_18=null;
        Token otherlv_19=null;
        Token otherlv_21=null;
        Token otherlv_23=null;
        AntlrDatatypeRuleToken lv_item_4_0 = null;

        AntlrDatatypeRuleToken lv_icon_8_0 = null;

        EObject lv_LabelColor_10_0 = null;

        EObject lv_LabelColor_12_0 = null;

        EObject lv_ValueColor_15_0 = null;

        EObject lv_ValueColor_17_0 = null;

        EObject lv_Visibility_20_0 = null;

        EObject lv_Visibility_22_0 = null;


         enterRule(); 
            
        try {
            // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:805:28: ( ( () otherlv_1= 'Text' ( ( ( ( ({...}? => ( ({...}? => (otherlv_3= 'item=' ( (lv_item_4_0= ruleItemRef ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_5= 'label=' ( ( (lv_label_6_1= RULE_ID | lv_label_6_2= RULE_STRING ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= 'icon=' ( (lv_icon_8_0= ruleIcon ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= 'labelcolor=[' ( ( (lv_LabelColor_10_0= ruleColorArray ) ) (otherlv_11= ',' ( (lv_LabelColor_12_0= ruleColorArray ) ) )* otherlv_13= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= 'valuecolor=[' ( ( (lv_ValueColor_15_0= ruleColorArray ) ) (otherlv_16= ',' ( (lv_ValueColor_17_0= ruleColorArray ) ) )* otherlv_18= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_19= 'visibility=[' ( ( (lv_Visibility_20_0= ruleVisibilityRule ) ) (otherlv_21= ',' ( (lv_Visibility_22_0= ruleVisibilityRule ) ) )* otherlv_23= ']' ) ) ) ) ) )* ) ) ) ) )
            // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:806:1: ( () otherlv_1= 'Text' ( ( ( ( ({...}? => ( ({...}? => (otherlv_3= 'item=' ( (lv_item_4_0= ruleItemRef ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_5= 'label=' ( ( (lv_label_6_1= RULE_ID | lv_label_6_2= RULE_STRING ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= 'icon=' ( (lv_icon_8_0= ruleIcon ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= 'labelcolor=[' ( ( (lv_LabelColor_10_0= ruleColorArray ) ) (otherlv_11= ',' ( (lv_LabelColor_12_0= ruleColorArray ) ) )* otherlv_13= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= 'valuecolor=[' ( ( (lv_ValueColor_15_0= ruleColorArray ) ) (otherlv_16= ',' ( (lv_ValueColor_17_0= ruleColorArray ) ) )* otherlv_18= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_19= 'visibility=[' ( ( (lv_Visibility_20_0= ruleVisibilityRule ) ) (otherlv_21= ',' ( (lv_Visibility_22_0= ruleVisibilityRule ) ) )* otherlv_23= ']' ) ) ) ) ) )* ) ) ) )
            {
            // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:806:1: ( () otherlv_1= 'Text' ( ( ( ( ({...}? => ( ({...}? => (otherlv_3= 'item=' ( (lv_item_4_0= ruleItemRef ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_5= 'label=' ( ( (lv_label_6_1= RULE_ID | lv_label_6_2= RULE_STRING ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= 'icon=' ( (lv_icon_8_0= ruleIcon ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= 'labelcolor=[' ( ( (lv_LabelColor_10_0= ruleColorArray ) ) (otherlv_11= ',' ( (lv_LabelColor_12_0= ruleColorArray ) ) )* otherlv_13= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= 'valuecolor=[' ( ( (lv_ValueColor_15_0= ruleColorArray ) ) (otherlv_16= ',' ( (lv_ValueColor_17_0= ruleColorArray ) ) )* otherlv_18= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_19= 'visibility=[' ( ( (lv_Visibility_20_0= ruleVisibilityRule ) ) (otherlv_21= ',' ( (lv_Visibility_22_0= ruleVisibilityRule ) ) )* otherlv_23= ']' ) ) ) ) ) )* ) ) ) )
            // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:806:2: () otherlv_1= 'Text' ( ( ( ( ({...}? => ( ({...}? => (otherlv_3= 'item=' ( (lv_item_4_0= ruleItemRef ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_5= 'label=' ( ( (lv_label_6_1= RULE_ID | lv_label_6_2= RULE_STRING ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= 'icon=' ( (lv_icon_8_0= ruleIcon ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= 'labelcolor=[' ( ( (lv_LabelColor_10_0= ruleColorArray ) ) (otherlv_11= ',' ( (lv_LabelColor_12_0= ruleColorArray ) ) )* otherlv_13= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= 'valuecolor=[' ( ( (lv_ValueColor_15_0= ruleColorArray ) ) (otherlv_16= ',' ( (lv_ValueColor_17_0= ruleColorArray ) ) )* otherlv_18= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_19= 'visibility=[' ( ( (lv_Visibility_20_0= ruleVisibilityRule ) ) (otherlv_21= ',' ( (lv_Visibility_22_0= ruleVisibilityRule ) ) )* otherlv_23= ']' ) ) ) ) ) )* ) ) )
            {
            // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:806:2: ()
            // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:807:5: 
            {

                    current = forceCreateModelElement(
                        grammarAccess.getTextAccess().getTextAction_0(),
                        current);
                

            }

            otherlv_1=(Token)match(input,24,FOLLOW_24_in_ruleText1932); 

                	newLeafNode(otherlv_1, grammarAccess.getTextAccess().getTextKeyword_1());
                
            // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:816:1: ( ( ( ( ({...}? => ( ({...}? => (otherlv_3= 'item=' ( (lv_item_4_0= ruleItemRef ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_5= 'label=' ( ( (lv_label_6_1= RULE_ID | lv_label_6_2= RULE_STRING ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= 'icon=' ( (lv_icon_8_0= ruleIcon ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= 'labelcolor=[' ( ( (lv_LabelColor_10_0= ruleColorArray ) ) (otherlv_11= ',' ( (lv_LabelColor_12_0= ruleColorArray ) ) )* otherlv_13= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= 'valuecolor=[' ( ( (lv_ValueColor_15_0= ruleColorArray ) ) (otherlv_16= ',' ( (lv_ValueColor_17_0= ruleColorArray ) ) )* otherlv_18= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_19= 'visibility=[' ( ( (lv_Visibility_20_0= ruleVisibilityRule ) ) (otherlv_21= ',' ( (lv_Visibility_22_0= ruleVisibilityRule ) ) )* otherlv_23= ']' ) ) ) ) ) )* ) ) )
            // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:818:1: ( ( ( ({...}? => ( ({...}? => (otherlv_3= 'item=' ( (lv_item_4_0= ruleItemRef ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_5= 'label=' ( ( (lv_label_6_1= RULE_ID | lv_label_6_2= RULE_STRING ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= 'icon=' ( (lv_icon_8_0= ruleIcon ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= 'labelcolor=[' ( ( (lv_LabelColor_10_0= ruleColorArray ) ) (otherlv_11= ',' ( (lv_LabelColor_12_0= ruleColorArray ) ) )* otherlv_13= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= 'valuecolor=[' ( ( (lv_ValueColor_15_0= ruleColorArray ) ) (otherlv_16= ',' ( (lv_ValueColor_17_0= ruleColorArray ) ) )* otherlv_18= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_19= 'visibility=[' ( ( (lv_Visibility_20_0= ruleVisibilityRule ) ) (otherlv_21= ',' ( (lv_Visibility_22_0= ruleVisibilityRule ) ) )* otherlv_23= ']' ) ) ) ) ) )* ) )
            {
            // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:818:1: ( ( ( ({...}? => ( ({...}? => (otherlv_3= 'item=' ( (lv_item_4_0= ruleItemRef ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_5= 'label=' ( ( (lv_label_6_1= RULE_ID | lv_label_6_2= RULE_STRING ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= 'icon=' ( (lv_icon_8_0= ruleIcon ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= 'labelcolor=[' ( ( (lv_LabelColor_10_0= ruleColorArray ) ) (otherlv_11= ',' ( (lv_LabelColor_12_0= ruleColorArray ) ) )* otherlv_13= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= 'valuecolor=[' ( ( (lv_ValueColor_15_0= ruleColorArray ) ) (otherlv_16= ',' ( (lv_ValueColor_17_0= ruleColorArray ) ) )* otherlv_18= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_19= 'visibility=[' ( ( (lv_Visibility_20_0= ruleVisibilityRule ) ) (otherlv_21= ',' ( (lv_Visibility_22_0= ruleVisibilityRule ) ) )* otherlv_23= ']' ) ) ) ) ) )* ) )
            // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:819:2: ( ( ({...}? => ( ({...}? => (otherlv_3= 'item=' ( (lv_item_4_0= ruleItemRef ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_5= 'label=' ( ( (lv_label_6_1= RULE_ID | lv_label_6_2= RULE_STRING ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= 'icon=' ( (lv_icon_8_0= ruleIcon ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= 'labelcolor=[' ( ( (lv_LabelColor_10_0= ruleColorArray ) ) (otherlv_11= ',' ( (lv_LabelColor_12_0= ruleColorArray ) ) )* otherlv_13= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= 'valuecolor=[' ( ( (lv_ValueColor_15_0= ruleColorArray ) ) (otherlv_16= ',' ( (lv_ValueColor_17_0= ruleColorArray ) ) )* otherlv_18= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_19= 'visibility=[' ( ( (lv_Visibility_20_0= ruleVisibilityRule ) ) (otherlv_21= ',' ( (lv_Visibility_22_0= ruleVisibilityRule ) ) )* otherlv_23= ']' ) ) ) ) ) )* )
            {
             
            	  getUnorderedGroupHelper().enter(grammarAccess.getTextAccess().getUnorderedGroup_2());
            	
            // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:822:2: ( ( ({...}? => ( ({...}? => (otherlv_3= 'item=' ( (lv_item_4_0= ruleItemRef ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_5= 'label=' ( ( (lv_label_6_1= RULE_ID | lv_label_6_2= RULE_STRING ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= 'icon=' ( (lv_icon_8_0= ruleIcon ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= 'labelcolor=[' ( ( (lv_LabelColor_10_0= ruleColorArray ) ) (otherlv_11= ',' ( (lv_LabelColor_12_0= ruleColorArray ) ) )* otherlv_13= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= 'valuecolor=[' ( ( (lv_ValueColor_15_0= ruleColorArray ) ) (otherlv_16= ',' ( (lv_ValueColor_17_0= ruleColorArray ) ) )* otherlv_18= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_19= 'visibility=[' ( ( (lv_Visibility_20_0= ruleVisibilityRule ) ) (otherlv_21= ',' ( (lv_Visibility_22_0= ruleVisibilityRule ) ) )* otherlv_23= ']' ) ) ) ) ) )* )
            // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:823:3: ( ({...}? => ( ({...}? => (otherlv_3= 'item=' ( (lv_item_4_0= ruleItemRef ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_5= 'label=' ( ( (lv_label_6_1= RULE_ID | lv_label_6_2= RULE_STRING ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= 'icon=' ( (lv_icon_8_0= ruleIcon ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= 'labelcolor=[' ( ( (lv_LabelColor_10_0= ruleColorArray ) ) (otherlv_11= ',' ( (lv_LabelColor_12_0= ruleColorArray ) ) )* otherlv_13= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= 'valuecolor=[' ( ( (lv_ValueColor_15_0= ruleColorArray ) ) (otherlv_16= ',' ( (lv_ValueColor_17_0= ruleColorArray ) ) )* otherlv_18= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_19= 'visibility=[' ( ( (lv_Visibility_20_0= ruleVisibilityRule ) ) (otherlv_21= ',' ( (lv_Visibility_22_0= ruleVisibilityRule ) ) )* otherlv_23= ']' ) ) ) ) ) )*
            {
            // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:823:3: ( ({...}? => ( ({...}? => (otherlv_3= 'item=' ( (lv_item_4_0= ruleItemRef ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_5= 'label=' ( ( (lv_label_6_1= RULE_ID | lv_label_6_2= RULE_STRING ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= 'icon=' ( (lv_icon_8_0= ruleIcon ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= 'labelcolor=[' ( ( (lv_LabelColor_10_0= ruleColorArray ) ) (otherlv_11= ',' ( (lv_LabelColor_12_0= ruleColorArray ) ) )* otherlv_13= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= 'valuecolor=[' ( ( (lv_ValueColor_15_0= ruleColorArray ) ) (otherlv_16= ',' ( (lv_ValueColor_17_0= ruleColorArray ) ) )* otherlv_18= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_19= 'visibility=[' ( ( (lv_Visibility_20_0= ruleVisibilityRule ) ) (otherlv_21= ',' ( (lv_Visibility_22_0= ruleVisibilityRule ) ) )* otherlv_23= ']' ) ) ) ) ) )*
            loop18:
            do {
                int alt18=7;
                int LA18_0 = input.LA(1);

                if ( LA18_0 ==18 && getUnorderedGroupHelper().canSelect(grammarAccess.getTextAccess().getUnorderedGroup_2(), 0) ) {
                    alt18=1;
                }
                else if ( LA18_0 ==13 && getUnorderedGroupHelper().canSelect(grammarAccess.getTextAccess().getUnorderedGroup_2(), 1) ) {
                    alt18=2;
                }
                else if ( LA18_0 ==14 && getUnorderedGroupHelper().canSelect(grammarAccess.getTextAccess().getUnorderedGroup_2(), 2) ) {
                    alt18=3;
                }
                else if ( LA18_0 ==19 && getUnorderedGroupHelper().canSelect(grammarAccess.getTextAccess().getUnorderedGroup_2(), 3) ) {
                    alt18=4;
                }
                else if ( LA18_0 ==22 && getUnorderedGroupHelper().canSelect(grammarAccess.getTextAccess().getUnorderedGroup_2(), 4) ) {
                    alt18=5;
                }
                else if ( LA18_0 ==23 && getUnorderedGroupHelper().canSelect(grammarAccess.getTextAccess().getUnorderedGroup_2(), 5) ) {
                    alt18=6;
                }


                switch (alt18) {
            	case 1 :
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:825:4: ({...}? => ( ({...}? => (otherlv_3= 'item=' ( (lv_item_4_0= ruleItemRef ) ) ) ) ) )
            	    {
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:825:4: ({...}? => ( ({...}? => (otherlv_3= 'item=' ( (lv_item_4_0= ruleItemRef ) ) ) ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:826:5: {...}? => ( ({...}? => (otherlv_3= 'item=' ( (lv_item_4_0= ruleItemRef ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getTextAccess().getUnorderedGroup_2(), 0) ) {
            	        throw new FailedPredicateException(input, "ruleText", "getUnorderedGroupHelper().canSelect(grammarAccess.getTextAccess().getUnorderedGroup_2(), 0)");
            	    }
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:826:101: ( ({...}? => (otherlv_3= 'item=' ( (lv_item_4_0= ruleItemRef ) ) ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:827:6: ({...}? => (otherlv_3= 'item=' ( (lv_item_4_0= ruleItemRef ) ) ) )
            	    {
            	     
            	    	 				  getUnorderedGroupHelper().select(grammarAccess.getTextAccess().getUnorderedGroup_2(), 0);
            	    	 				
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:830:6: ({...}? => (otherlv_3= 'item=' ( (lv_item_4_0= ruleItemRef ) ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:830:7: {...}? => (otherlv_3= 'item=' ( (lv_item_4_0= ruleItemRef ) ) )
            	    {
            	    if ( !((true)) ) {
            	        throw new FailedPredicateException(input, "ruleText", "true");
            	    }
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:830:16: (otherlv_3= 'item=' ( (lv_item_4_0= ruleItemRef ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:830:18: otherlv_3= 'item=' ( (lv_item_4_0= ruleItemRef ) )
            	    {
            	    otherlv_3=(Token)match(input,18,FOLLOW_18_in_ruleText1990); 

            	        	newLeafNode(otherlv_3, grammarAccess.getTextAccess().getItemKeyword_2_0_0());
            	        
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:834:1: ( (lv_item_4_0= ruleItemRef ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:835:1: (lv_item_4_0= ruleItemRef )
            	    {
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:835:1: (lv_item_4_0= ruleItemRef )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:836:3: lv_item_4_0= ruleItemRef
            	    {
            	     
            	    	        newCompositeNode(grammarAccess.getTextAccess().getItemItemRefParserRuleCall_2_0_1_0()); 
            	    	    
            	    pushFollow(FOLLOW_ruleItemRef_in_ruleText2011);
            	    lv_item_4_0=ruleItemRef();

            	    state._fsp--;


            	    	        if (current==null) {
            	    	            current = createModelElementForParent(grammarAccess.getTextRule());
            	    	        }
            	           		set(
            	           			current, 
            	           			"item",
            	            		lv_item_4_0, 
            	            		"ItemRef");
            	    	        afterParserOrEnumRuleCall();
            	    	    

            	    }


            	    }


            	    }


            	    }

            	     
            	    	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getTextAccess().getUnorderedGroup_2());
            	    	 				

            	    }


            	    }


            	    }
            	    break;
            	case 2 :
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:859:4: ({...}? => ( ({...}? => (otherlv_5= 'label=' ( ( (lv_label_6_1= RULE_ID | lv_label_6_2= RULE_STRING ) ) ) ) ) ) )
            	    {
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:859:4: ({...}? => ( ({...}? => (otherlv_5= 'label=' ( ( (lv_label_6_1= RULE_ID | lv_label_6_2= RULE_STRING ) ) ) ) ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:860:5: {...}? => ( ({...}? => (otherlv_5= 'label=' ( ( (lv_label_6_1= RULE_ID | lv_label_6_2= RULE_STRING ) ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getTextAccess().getUnorderedGroup_2(), 1) ) {
            	        throw new FailedPredicateException(input, "ruleText", "getUnorderedGroupHelper().canSelect(grammarAccess.getTextAccess().getUnorderedGroup_2(), 1)");
            	    }
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:860:101: ( ({...}? => (otherlv_5= 'label=' ( ( (lv_label_6_1= RULE_ID | lv_label_6_2= RULE_STRING ) ) ) ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:861:6: ({...}? => (otherlv_5= 'label=' ( ( (lv_label_6_1= RULE_ID | lv_label_6_2= RULE_STRING ) ) ) ) )
            	    {
            	     
            	    	 				  getUnorderedGroupHelper().select(grammarAccess.getTextAccess().getUnorderedGroup_2(), 1);
            	    	 				
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:864:6: ({...}? => (otherlv_5= 'label=' ( ( (lv_label_6_1= RULE_ID | lv_label_6_2= RULE_STRING ) ) ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:864:7: {...}? => (otherlv_5= 'label=' ( ( (lv_label_6_1= RULE_ID | lv_label_6_2= RULE_STRING ) ) ) )
            	    {
            	    if ( !((true)) ) {
            	        throw new FailedPredicateException(input, "ruleText", "true");
            	    }
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:864:16: (otherlv_5= 'label=' ( ( (lv_label_6_1= RULE_ID | lv_label_6_2= RULE_STRING ) ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:864:18: otherlv_5= 'label=' ( ( (lv_label_6_1= RULE_ID | lv_label_6_2= RULE_STRING ) ) )
            	    {
            	    otherlv_5=(Token)match(input,13,FOLLOW_13_in_ruleText2079); 

            	        	newLeafNode(otherlv_5, grammarAccess.getTextAccess().getLabelKeyword_2_1_0());
            	        
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:868:1: ( ( (lv_label_6_1= RULE_ID | lv_label_6_2= RULE_STRING ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:869:1: ( (lv_label_6_1= RULE_ID | lv_label_6_2= RULE_STRING ) )
            	    {
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:869:1: ( (lv_label_6_1= RULE_ID | lv_label_6_2= RULE_STRING ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:870:1: (lv_label_6_1= RULE_ID | lv_label_6_2= RULE_STRING )
            	    {
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:870:1: (lv_label_6_1= RULE_ID | lv_label_6_2= RULE_STRING )
            	    int alt14=2;
            	    int LA14_0 = input.LA(1);

            	    if ( (LA14_0==RULE_ID) ) {
            	        alt14=1;
            	    }
            	    else if ( (LA14_0==RULE_STRING) ) {
            	        alt14=2;
            	    }
            	    else {
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 14, 0, input);

            	        throw nvae;
            	    }
            	    switch (alt14) {
            	        case 1 :
            	            // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:871:3: lv_label_6_1= RULE_ID
            	            {
            	            lv_label_6_1=(Token)match(input,RULE_ID,FOLLOW_RULE_ID_in_ruleText2098); 

            	            			newLeafNode(lv_label_6_1, grammarAccess.getTextAccess().getLabelIDTerminalRuleCall_2_1_1_0_0()); 
            	            		

            	            	        if (current==null) {
            	            	            current = createModelElement(grammarAccess.getTextRule());
            	            	        }
            	                   		setWithLastConsumed(
            	                   			current, 
            	                   			"label",
            	                    		lv_label_6_1, 
            	                    		"ID");
            	            	    

            	            }
            	            break;
            	        case 2 :
            	            // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:886:8: lv_label_6_2= RULE_STRING
            	            {
            	            lv_label_6_2=(Token)match(input,RULE_STRING,FOLLOW_RULE_STRING_in_ruleText2118); 

            	            			newLeafNode(lv_label_6_2, grammarAccess.getTextAccess().getLabelSTRINGTerminalRuleCall_2_1_1_0_1()); 
            	            		

            	            	        if (current==null) {
            	            	            current = createModelElement(grammarAccess.getTextRule());
            	            	        }
            	                   		setWithLastConsumed(
            	                   			current, 
            	                   			"label",
            	                    		lv_label_6_2, 
            	                    		"STRING");
            	            	    

            	            }
            	            break;

            	    }


            	    }


            	    }


            	    }


            	    }

            	     
            	    	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getTextAccess().getUnorderedGroup_2());
            	    	 				

            	    }


            	    }


            	    }
            	    break;
            	case 3 :
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:911:4: ({...}? => ( ({...}? => (otherlv_7= 'icon=' ( (lv_icon_8_0= ruleIcon ) ) ) ) ) )
            	    {
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:911:4: ({...}? => ( ({...}? => (otherlv_7= 'icon=' ( (lv_icon_8_0= ruleIcon ) ) ) ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:912:5: {...}? => ( ({...}? => (otherlv_7= 'icon=' ( (lv_icon_8_0= ruleIcon ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getTextAccess().getUnorderedGroup_2(), 2) ) {
            	        throw new FailedPredicateException(input, "ruleText", "getUnorderedGroupHelper().canSelect(grammarAccess.getTextAccess().getUnorderedGroup_2(), 2)");
            	    }
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:912:101: ( ({...}? => (otherlv_7= 'icon=' ( (lv_icon_8_0= ruleIcon ) ) ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:913:6: ({...}? => (otherlv_7= 'icon=' ( (lv_icon_8_0= ruleIcon ) ) ) )
            	    {
            	     
            	    	 				  getUnorderedGroupHelper().select(grammarAccess.getTextAccess().getUnorderedGroup_2(), 2);
            	    	 				
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:916:6: ({...}? => (otherlv_7= 'icon=' ( (lv_icon_8_0= ruleIcon ) ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:916:7: {...}? => (otherlv_7= 'icon=' ( (lv_icon_8_0= ruleIcon ) ) )
            	    {
            	    if ( !((true)) ) {
            	        throw new FailedPredicateException(input, "ruleText", "true");
            	    }
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:916:16: (otherlv_7= 'icon=' ( (lv_icon_8_0= ruleIcon ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:916:18: otherlv_7= 'icon=' ( (lv_icon_8_0= ruleIcon ) )
            	    {
            	    otherlv_7=(Token)match(input,14,FOLLOW_14_in_ruleText2194); 

            	        	newLeafNode(otherlv_7, grammarAccess.getTextAccess().getIconKeyword_2_2_0());
            	        
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:920:1: ( (lv_icon_8_0= ruleIcon ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:921:1: (lv_icon_8_0= ruleIcon )
            	    {
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:921:1: (lv_icon_8_0= ruleIcon )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:922:3: lv_icon_8_0= ruleIcon
            	    {
            	     
            	    	        newCompositeNode(grammarAccess.getTextAccess().getIconIconParserRuleCall_2_2_1_0()); 
            	    	    
            	    pushFollow(FOLLOW_ruleIcon_in_ruleText2215);
            	    lv_icon_8_0=ruleIcon();

            	    state._fsp--;


            	    	        if (current==null) {
            	    	            current = createModelElementForParent(grammarAccess.getTextRule());
            	    	        }
            	           		set(
            	           			current, 
            	           			"icon",
            	            		lv_icon_8_0, 
            	            		"Icon");
            	    	        afterParserOrEnumRuleCall();
            	    	    

            	    }


            	    }


            	    }


            	    }

            	     
            	    	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getTextAccess().getUnorderedGroup_2());
            	    	 				

            	    }


            	    }


            	    }
            	    break;
            	case 4 :
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:945:4: ({...}? => ( ({...}? => (otherlv_9= 'labelcolor=[' ( ( (lv_LabelColor_10_0= ruleColorArray ) ) (otherlv_11= ',' ( (lv_LabelColor_12_0= ruleColorArray ) ) )* otherlv_13= ']' ) ) ) ) )
            	    {
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:945:4: ({...}? => ( ({...}? => (otherlv_9= 'labelcolor=[' ( ( (lv_LabelColor_10_0= ruleColorArray ) ) (otherlv_11= ',' ( (lv_LabelColor_12_0= ruleColorArray ) ) )* otherlv_13= ']' ) ) ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:946:5: {...}? => ( ({...}? => (otherlv_9= 'labelcolor=[' ( ( (lv_LabelColor_10_0= ruleColorArray ) ) (otherlv_11= ',' ( (lv_LabelColor_12_0= ruleColorArray ) ) )* otherlv_13= ']' ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getTextAccess().getUnorderedGroup_2(), 3) ) {
            	        throw new FailedPredicateException(input, "ruleText", "getUnorderedGroupHelper().canSelect(grammarAccess.getTextAccess().getUnorderedGroup_2(), 3)");
            	    }
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:946:101: ( ({...}? => (otherlv_9= 'labelcolor=[' ( ( (lv_LabelColor_10_0= ruleColorArray ) ) (otherlv_11= ',' ( (lv_LabelColor_12_0= ruleColorArray ) ) )* otherlv_13= ']' ) ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:947:6: ({...}? => (otherlv_9= 'labelcolor=[' ( ( (lv_LabelColor_10_0= ruleColorArray ) ) (otherlv_11= ',' ( (lv_LabelColor_12_0= ruleColorArray ) ) )* otherlv_13= ']' ) ) )
            	    {
            	     
            	    	 				  getUnorderedGroupHelper().select(grammarAccess.getTextAccess().getUnorderedGroup_2(), 3);
            	    	 				
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:950:6: ({...}? => (otherlv_9= 'labelcolor=[' ( ( (lv_LabelColor_10_0= ruleColorArray ) ) (otherlv_11= ',' ( (lv_LabelColor_12_0= ruleColorArray ) ) )* otherlv_13= ']' ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:950:7: {...}? => (otherlv_9= 'labelcolor=[' ( ( (lv_LabelColor_10_0= ruleColorArray ) ) (otherlv_11= ',' ( (lv_LabelColor_12_0= ruleColorArray ) ) )* otherlv_13= ']' ) )
            	    {
            	    if ( !((true)) ) {
            	        throw new FailedPredicateException(input, "ruleText", "true");
            	    }
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:950:16: (otherlv_9= 'labelcolor=[' ( ( (lv_LabelColor_10_0= ruleColorArray ) ) (otherlv_11= ',' ( (lv_LabelColor_12_0= ruleColorArray ) ) )* otherlv_13= ']' ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:950:18: otherlv_9= 'labelcolor=[' ( ( (lv_LabelColor_10_0= ruleColorArray ) ) (otherlv_11= ',' ( (lv_LabelColor_12_0= ruleColorArray ) ) )* otherlv_13= ']' )
            	    {
            	    otherlv_9=(Token)match(input,19,FOLLOW_19_in_ruleText2283); 

            	        	newLeafNode(otherlv_9, grammarAccess.getTextAccess().getLabelcolorKeyword_2_3_0());
            	        
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:954:1: ( ( (lv_LabelColor_10_0= ruleColorArray ) ) (otherlv_11= ',' ( (lv_LabelColor_12_0= ruleColorArray ) ) )* otherlv_13= ']' )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:954:2: ( (lv_LabelColor_10_0= ruleColorArray ) ) (otherlv_11= ',' ( (lv_LabelColor_12_0= ruleColorArray ) ) )* otherlv_13= ']'
            	    {
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:954:2: ( (lv_LabelColor_10_0= ruleColorArray ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:955:1: (lv_LabelColor_10_0= ruleColorArray )
            	    {
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:955:1: (lv_LabelColor_10_0= ruleColorArray )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:956:3: lv_LabelColor_10_0= ruleColorArray
            	    {
            	     
            	    	        newCompositeNode(grammarAccess.getTextAccess().getLabelColorColorArrayParserRuleCall_2_3_1_0_0()); 
            	    	    
            	    pushFollow(FOLLOW_ruleColorArray_in_ruleText2305);
            	    lv_LabelColor_10_0=ruleColorArray();

            	    state._fsp--;


            	    	        if (current==null) {
            	    	            current = createModelElementForParent(grammarAccess.getTextRule());
            	    	        }
            	           		add(
            	           			current, 
            	           			"LabelColor",
            	            		lv_LabelColor_10_0, 
            	            		"ColorArray");
            	    	        afterParserOrEnumRuleCall();
            	    	    

            	    }


            	    }

            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:972:2: (otherlv_11= ',' ( (lv_LabelColor_12_0= ruleColorArray ) ) )*
            	    loop15:
            	    do {
            	        int alt15=2;
            	        int LA15_0 = input.LA(1);

            	        if ( (LA15_0==20) ) {
            	            alt15=1;
            	        }


            	        switch (alt15) {
            	    	case 1 :
            	    	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:972:4: otherlv_11= ',' ( (lv_LabelColor_12_0= ruleColorArray ) )
            	    	    {
            	    	    otherlv_11=(Token)match(input,20,FOLLOW_20_in_ruleText2318); 

            	    	        	newLeafNode(otherlv_11, grammarAccess.getTextAccess().getCommaKeyword_2_3_1_1_0());
            	    	        
            	    	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:976:1: ( (lv_LabelColor_12_0= ruleColorArray ) )
            	    	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:977:1: (lv_LabelColor_12_0= ruleColorArray )
            	    	    {
            	    	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:977:1: (lv_LabelColor_12_0= ruleColorArray )
            	    	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:978:3: lv_LabelColor_12_0= ruleColorArray
            	    	    {
            	    	     
            	    	    	        newCompositeNode(grammarAccess.getTextAccess().getLabelColorColorArrayParserRuleCall_2_3_1_1_1_0()); 
            	    	    	    
            	    	    pushFollow(FOLLOW_ruleColorArray_in_ruleText2339);
            	    	    lv_LabelColor_12_0=ruleColorArray();

            	    	    state._fsp--;


            	    	    	        if (current==null) {
            	    	    	            current = createModelElementForParent(grammarAccess.getTextRule());
            	    	    	        }
            	    	           		add(
            	    	           			current, 
            	    	           			"LabelColor",
            	    	            		lv_LabelColor_12_0, 
            	    	            		"ColorArray");
            	    	    	        afterParserOrEnumRuleCall();
            	    	    	    

            	    	    }


            	    	    }


            	    	    }
            	    	    break;

            	    	default :
            	    	    break loop15;
            	        }
            	    } while (true);

            	    otherlv_13=(Token)match(input,21,FOLLOW_21_in_ruleText2353); 

            	        	newLeafNode(otherlv_13, grammarAccess.getTextAccess().getRightSquareBracketKeyword_2_3_1_2());
            	        

            	    }


            	    }


            	    }

            	     
            	    	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getTextAccess().getUnorderedGroup_2());
            	    	 				

            	    }


            	    }


            	    }
            	    break;
            	case 5 :
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1005:4: ({...}? => ( ({...}? => (otherlv_14= 'valuecolor=[' ( ( (lv_ValueColor_15_0= ruleColorArray ) ) (otherlv_16= ',' ( (lv_ValueColor_17_0= ruleColorArray ) ) )* otherlv_18= ']' ) ) ) ) )
            	    {
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1005:4: ({...}? => ( ({...}? => (otherlv_14= 'valuecolor=[' ( ( (lv_ValueColor_15_0= ruleColorArray ) ) (otherlv_16= ',' ( (lv_ValueColor_17_0= ruleColorArray ) ) )* otherlv_18= ']' ) ) ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1006:5: {...}? => ( ({...}? => (otherlv_14= 'valuecolor=[' ( ( (lv_ValueColor_15_0= ruleColorArray ) ) (otherlv_16= ',' ( (lv_ValueColor_17_0= ruleColorArray ) ) )* otherlv_18= ']' ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getTextAccess().getUnorderedGroup_2(), 4) ) {
            	        throw new FailedPredicateException(input, "ruleText", "getUnorderedGroupHelper().canSelect(grammarAccess.getTextAccess().getUnorderedGroup_2(), 4)");
            	    }
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1006:101: ( ({...}? => (otherlv_14= 'valuecolor=[' ( ( (lv_ValueColor_15_0= ruleColorArray ) ) (otherlv_16= ',' ( (lv_ValueColor_17_0= ruleColorArray ) ) )* otherlv_18= ']' ) ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1007:6: ({...}? => (otherlv_14= 'valuecolor=[' ( ( (lv_ValueColor_15_0= ruleColorArray ) ) (otherlv_16= ',' ( (lv_ValueColor_17_0= ruleColorArray ) ) )* otherlv_18= ']' ) ) )
            	    {
            	     
            	    	 				  getUnorderedGroupHelper().select(grammarAccess.getTextAccess().getUnorderedGroup_2(), 4);
            	    	 				
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1010:6: ({...}? => (otherlv_14= 'valuecolor=[' ( ( (lv_ValueColor_15_0= ruleColorArray ) ) (otherlv_16= ',' ( (lv_ValueColor_17_0= ruleColorArray ) ) )* otherlv_18= ']' ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1010:7: {...}? => (otherlv_14= 'valuecolor=[' ( ( (lv_ValueColor_15_0= ruleColorArray ) ) (otherlv_16= ',' ( (lv_ValueColor_17_0= ruleColorArray ) ) )* otherlv_18= ']' ) )
            	    {
            	    if ( !((true)) ) {
            	        throw new FailedPredicateException(input, "ruleText", "true");
            	    }
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1010:16: (otherlv_14= 'valuecolor=[' ( ( (lv_ValueColor_15_0= ruleColorArray ) ) (otherlv_16= ',' ( (lv_ValueColor_17_0= ruleColorArray ) ) )* otherlv_18= ']' ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1010:18: otherlv_14= 'valuecolor=[' ( ( (lv_ValueColor_15_0= ruleColorArray ) ) (otherlv_16= ',' ( (lv_ValueColor_17_0= ruleColorArray ) ) )* otherlv_18= ']' )
            	    {
            	    otherlv_14=(Token)match(input,22,FOLLOW_22_in_ruleText2422); 

            	        	newLeafNode(otherlv_14, grammarAccess.getTextAccess().getValuecolorKeyword_2_4_0());
            	        
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1014:1: ( ( (lv_ValueColor_15_0= ruleColorArray ) ) (otherlv_16= ',' ( (lv_ValueColor_17_0= ruleColorArray ) ) )* otherlv_18= ']' )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1014:2: ( (lv_ValueColor_15_0= ruleColorArray ) ) (otherlv_16= ',' ( (lv_ValueColor_17_0= ruleColorArray ) ) )* otherlv_18= ']'
            	    {
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1014:2: ( (lv_ValueColor_15_0= ruleColorArray ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1015:1: (lv_ValueColor_15_0= ruleColorArray )
            	    {
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1015:1: (lv_ValueColor_15_0= ruleColorArray )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1016:3: lv_ValueColor_15_0= ruleColorArray
            	    {
            	     
            	    	        newCompositeNode(grammarAccess.getTextAccess().getValueColorColorArrayParserRuleCall_2_4_1_0_0()); 
            	    	    
            	    pushFollow(FOLLOW_ruleColorArray_in_ruleText2444);
            	    lv_ValueColor_15_0=ruleColorArray();

            	    state._fsp--;


            	    	        if (current==null) {
            	    	            current = createModelElementForParent(grammarAccess.getTextRule());
            	    	        }
            	           		add(
            	           			current, 
            	           			"ValueColor",
            	            		lv_ValueColor_15_0, 
            	            		"ColorArray");
            	    	        afterParserOrEnumRuleCall();
            	    	    

            	    }


            	    }

            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1032:2: (otherlv_16= ',' ( (lv_ValueColor_17_0= ruleColorArray ) ) )*
            	    loop16:
            	    do {
            	        int alt16=2;
            	        int LA16_0 = input.LA(1);

            	        if ( (LA16_0==20) ) {
            	            alt16=1;
            	        }


            	        switch (alt16) {
            	    	case 1 :
            	    	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1032:4: otherlv_16= ',' ( (lv_ValueColor_17_0= ruleColorArray ) )
            	    	    {
            	    	    otherlv_16=(Token)match(input,20,FOLLOW_20_in_ruleText2457); 

            	    	        	newLeafNode(otherlv_16, grammarAccess.getTextAccess().getCommaKeyword_2_4_1_1_0());
            	    	        
            	    	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1036:1: ( (lv_ValueColor_17_0= ruleColorArray ) )
            	    	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1037:1: (lv_ValueColor_17_0= ruleColorArray )
            	    	    {
            	    	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1037:1: (lv_ValueColor_17_0= ruleColorArray )
            	    	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1038:3: lv_ValueColor_17_0= ruleColorArray
            	    	    {
            	    	     
            	    	    	        newCompositeNode(grammarAccess.getTextAccess().getValueColorColorArrayParserRuleCall_2_4_1_1_1_0()); 
            	    	    	    
            	    	    pushFollow(FOLLOW_ruleColorArray_in_ruleText2478);
            	    	    lv_ValueColor_17_0=ruleColorArray();

            	    	    state._fsp--;


            	    	    	        if (current==null) {
            	    	    	            current = createModelElementForParent(grammarAccess.getTextRule());
            	    	    	        }
            	    	           		add(
            	    	           			current, 
            	    	           			"ValueColor",
            	    	            		lv_ValueColor_17_0, 
            	    	            		"ColorArray");
            	    	    	        afterParserOrEnumRuleCall();
            	    	    	    

            	    	    }


            	    	    }


            	    	    }
            	    	    break;

            	    	default :
            	    	    break loop16;
            	        }
            	    } while (true);

            	    otherlv_18=(Token)match(input,21,FOLLOW_21_in_ruleText2492); 

            	        	newLeafNode(otherlv_18, grammarAccess.getTextAccess().getRightSquareBracketKeyword_2_4_1_2());
            	        

            	    }


            	    }


            	    }

            	     
            	    	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getTextAccess().getUnorderedGroup_2());
            	    	 				

            	    }


            	    }


            	    }
            	    break;
            	case 6 :
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1065:4: ({...}? => ( ({...}? => (otherlv_19= 'visibility=[' ( ( (lv_Visibility_20_0= ruleVisibilityRule ) ) (otherlv_21= ',' ( (lv_Visibility_22_0= ruleVisibilityRule ) ) )* otherlv_23= ']' ) ) ) ) )
            	    {
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1065:4: ({...}? => ( ({...}? => (otherlv_19= 'visibility=[' ( ( (lv_Visibility_20_0= ruleVisibilityRule ) ) (otherlv_21= ',' ( (lv_Visibility_22_0= ruleVisibilityRule ) ) )* otherlv_23= ']' ) ) ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1066:5: {...}? => ( ({...}? => (otherlv_19= 'visibility=[' ( ( (lv_Visibility_20_0= ruleVisibilityRule ) ) (otherlv_21= ',' ( (lv_Visibility_22_0= ruleVisibilityRule ) ) )* otherlv_23= ']' ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getTextAccess().getUnorderedGroup_2(), 5) ) {
            	        throw new FailedPredicateException(input, "ruleText", "getUnorderedGroupHelper().canSelect(grammarAccess.getTextAccess().getUnorderedGroup_2(), 5)");
            	    }
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1066:101: ( ({...}? => (otherlv_19= 'visibility=[' ( ( (lv_Visibility_20_0= ruleVisibilityRule ) ) (otherlv_21= ',' ( (lv_Visibility_22_0= ruleVisibilityRule ) ) )* otherlv_23= ']' ) ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1067:6: ({...}? => (otherlv_19= 'visibility=[' ( ( (lv_Visibility_20_0= ruleVisibilityRule ) ) (otherlv_21= ',' ( (lv_Visibility_22_0= ruleVisibilityRule ) ) )* otherlv_23= ']' ) ) )
            	    {
            	     
            	    	 				  getUnorderedGroupHelper().select(grammarAccess.getTextAccess().getUnorderedGroup_2(), 5);
            	    	 				
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1070:6: ({...}? => (otherlv_19= 'visibility=[' ( ( (lv_Visibility_20_0= ruleVisibilityRule ) ) (otherlv_21= ',' ( (lv_Visibility_22_0= ruleVisibilityRule ) ) )* otherlv_23= ']' ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1070:7: {...}? => (otherlv_19= 'visibility=[' ( ( (lv_Visibility_20_0= ruleVisibilityRule ) ) (otherlv_21= ',' ( (lv_Visibility_22_0= ruleVisibilityRule ) ) )* otherlv_23= ']' ) )
            	    {
            	    if ( !((true)) ) {
            	        throw new FailedPredicateException(input, "ruleText", "true");
            	    }
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1070:16: (otherlv_19= 'visibility=[' ( ( (lv_Visibility_20_0= ruleVisibilityRule ) ) (otherlv_21= ',' ( (lv_Visibility_22_0= ruleVisibilityRule ) ) )* otherlv_23= ']' ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1070:18: otherlv_19= 'visibility=[' ( ( (lv_Visibility_20_0= ruleVisibilityRule ) ) (otherlv_21= ',' ( (lv_Visibility_22_0= ruleVisibilityRule ) ) )* otherlv_23= ']' )
            	    {
            	    otherlv_19=(Token)match(input,23,FOLLOW_23_in_ruleText2561); 

            	        	newLeafNode(otherlv_19, grammarAccess.getTextAccess().getVisibilityKeyword_2_5_0());
            	        
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1074:1: ( ( (lv_Visibility_20_0= ruleVisibilityRule ) ) (otherlv_21= ',' ( (lv_Visibility_22_0= ruleVisibilityRule ) ) )* otherlv_23= ']' )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1074:2: ( (lv_Visibility_20_0= ruleVisibilityRule ) ) (otherlv_21= ',' ( (lv_Visibility_22_0= ruleVisibilityRule ) ) )* otherlv_23= ']'
            	    {
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1074:2: ( (lv_Visibility_20_0= ruleVisibilityRule ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1075:1: (lv_Visibility_20_0= ruleVisibilityRule )
            	    {
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1075:1: (lv_Visibility_20_0= ruleVisibilityRule )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1076:3: lv_Visibility_20_0= ruleVisibilityRule
            	    {
            	     
            	    	        newCompositeNode(grammarAccess.getTextAccess().getVisibilityVisibilityRuleParserRuleCall_2_5_1_0_0()); 
            	    	    
            	    pushFollow(FOLLOW_ruleVisibilityRule_in_ruleText2583);
            	    lv_Visibility_20_0=ruleVisibilityRule();

            	    state._fsp--;


            	    	        if (current==null) {
            	    	            current = createModelElementForParent(grammarAccess.getTextRule());
            	    	        }
            	           		add(
            	           			current, 
            	           			"Visibility",
            	            		lv_Visibility_20_0, 
            	            		"VisibilityRule");
            	    	        afterParserOrEnumRuleCall();
            	    	    

            	    }


            	    }

            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1092:2: (otherlv_21= ',' ( (lv_Visibility_22_0= ruleVisibilityRule ) ) )*
            	    loop17:
            	    do {
            	        int alt17=2;
            	        int LA17_0 = input.LA(1);

            	        if ( (LA17_0==20) ) {
            	            alt17=1;
            	        }


            	        switch (alt17) {
            	    	case 1 :
            	    	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1092:4: otherlv_21= ',' ( (lv_Visibility_22_0= ruleVisibilityRule ) )
            	    	    {
            	    	    otherlv_21=(Token)match(input,20,FOLLOW_20_in_ruleText2596); 

            	    	        	newLeafNode(otherlv_21, grammarAccess.getTextAccess().getCommaKeyword_2_5_1_1_0());
            	    	        
            	    	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1096:1: ( (lv_Visibility_22_0= ruleVisibilityRule ) )
            	    	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1097:1: (lv_Visibility_22_0= ruleVisibilityRule )
            	    	    {
            	    	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1097:1: (lv_Visibility_22_0= ruleVisibilityRule )
            	    	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1098:3: lv_Visibility_22_0= ruleVisibilityRule
            	    	    {
            	    	     
            	    	    	        newCompositeNode(grammarAccess.getTextAccess().getVisibilityVisibilityRuleParserRuleCall_2_5_1_1_1_0()); 
            	    	    	    
            	    	    pushFollow(FOLLOW_ruleVisibilityRule_in_ruleText2617);
            	    	    lv_Visibility_22_0=ruleVisibilityRule();

            	    	    state._fsp--;


            	    	    	        if (current==null) {
            	    	    	            current = createModelElementForParent(grammarAccess.getTextRule());
            	    	    	        }
            	    	           		add(
            	    	           			current, 
            	    	           			"Visibility",
            	    	            		lv_Visibility_22_0, 
            	    	            		"VisibilityRule");
            	    	    	        afterParserOrEnumRuleCall();
            	    	    	    

            	    	    }


            	    	    }


            	    	    }
            	    	    break;

            	    	default :
            	    	    break loop17;
            	        }
            	    } while (true);

            	    otherlv_23=(Token)match(input,21,FOLLOW_21_in_ruleText2631); 

            	        	newLeafNode(otherlv_23, grammarAccess.getTextAccess().getRightSquareBracketKeyword_2_5_1_2());
            	        

            	    }


            	    }


            	    }

            	     
            	    	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getTextAccess().getUnorderedGroup_2());
            	    	 				

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop18;
                }
            } while (true);


            }


            }

             
            	  getUnorderedGroupHelper().leave(grammarAccess.getTextAccess().getUnorderedGroup_2());
            	

            }


            }


            }

             leaveRule(); 
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleText"


    // $ANTLR start "entryRuleGroup"
    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1140:1: entryRuleGroup returns [EObject current=null] : iv_ruleGroup= ruleGroup EOF ;
    public final EObject entryRuleGroup() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleGroup = null;


        try {
            // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1141:2: (iv_ruleGroup= ruleGroup EOF )
            // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1142:2: iv_ruleGroup= ruleGroup EOF
            {
             newCompositeNode(grammarAccess.getGroupRule()); 
            pushFollow(FOLLOW_ruleGroup_in_entryRuleGroup2709);
            iv_ruleGroup=ruleGroup();

            state._fsp--;

             current =iv_ruleGroup; 
            match(input,EOF,FOLLOW_EOF_in_entryRuleGroup2719); 

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleGroup"


    // $ANTLR start "ruleGroup"
    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1149:1: ruleGroup returns [EObject current=null] : (otherlv_0= 'Group' ( ( ( ( ({...}? => ( ({...}? => (otherlv_2= 'item=' ( (lv_item_3_0= ruleGroupItemRef ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= 'label=' ( ( (lv_label_5_1= RULE_ID | lv_label_5_2= RULE_STRING ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= 'icon=' ( (lv_icon_7_0= ruleIcon ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_8= 'labelcolor=[' ( ( (lv_LabelColor_9_0= ruleColorArray ) ) (otherlv_10= ',' ( (lv_LabelColor_11_0= ruleColorArray ) ) )* otherlv_12= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= 'valuecolor=[' ( ( (lv_ValueColor_14_0= ruleColorArray ) ) (otherlv_15= ',' ( (lv_ValueColor_16_0= ruleColorArray ) ) )* otherlv_17= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= 'visibility=[' ( ( (lv_Visibility_19_0= ruleVisibilityRule ) ) (otherlv_20= ',' ( (lv_Visibility_21_0= ruleVisibilityRule ) ) )* otherlv_22= ']' ) ) ) ) ) )+ {...}?) ) ) ) ;
    public final EObject ruleGroup() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_2=null;
        Token otherlv_4=null;
        Token lv_label_5_1=null;
        Token lv_label_5_2=null;
        Token otherlv_6=null;
        Token otherlv_8=null;
        Token otherlv_10=null;
        Token otherlv_12=null;
        Token otherlv_13=null;
        Token otherlv_15=null;
        Token otherlv_17=null;
        Token otherlv_18=null;
        Token otherlv_20=null;
        Token otherlv_22=null;
        AntlrDatatypeRuleToken lv_item_3_0 = null;

        AntlrDatatypeRuleToken lv_icon_7_0 = null;

        EObject lv_LabelColor_9_0 = null;

        EObject lv_LabelColor_11_0 = null;

        EObject lv_ValueColor_14_0 = null;

        EObject lv_ValueColor_16_0 = null;

        EObject lv_Visibility_19_0 = null;

        EObject lv_Visibility_21_0 = null;


         enterRule(); 
            
        try {
            // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1152:28: ( (otherlv_0= 'Group' ( ( ( ( ({...}? => ( ({...}? => (otherlv_2= 'item=' ( (lv_item_3_0= ruleGroupItemRef ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= 'label=' ( ( (lv_label_5_1= RULE_ID | lv_label_5_2= RULE_STRING ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= 'icon=' ( (lv_icon_7_0= ruleIcon ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_8= 'labelcolor=[' ( ( (lv_LabelColor_9_0= ruleColorArray ) ) (otherlv_10= ',' ( (lv_LabelColor_11_0= ruleColorArray ) ) )* otherlv_12= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= 'valuecolor=[' ( ( (lv_ValueColor_14_0= ruleColorArray ) ) (otherlv_15= ',' ( (lv_ValueColor_16_0= ruleColorArray ) ) )* otherlv_17= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= 'visibility=[' ( ( (lv_Visibility_19_0= ruleVisibilityRule ) ) (otherlv_20= ',' ( (lv_Visibility_21_0= ruleVisibilityRule ) ) )* otherlv_22= ']' ) ) ) ) ) )+ {...}?) ) ) ) )
            // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1153:1: (otherlv_0= 'Group' ( ( ( ( ({...}? => ( ({...}? => (otherlv_2= 'item=' ( (lv_item_3_0= ruleGroupItemRef ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= 'label=' ( ( (lv_label_5_1= RULE_ID | lv_label_5_2= RULE_STRING ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= 'icon=' ( (lv_icon_7_0= ruleIcon ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_8= 'labelcolor=[' ( ( (lv_LabelColor_9_0= ruleColorArray ) ) (otherlv_10= ',' ( (lv_LabelColor_11_0= ruleColorArray ) ) )* otherlv_12= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= 'valuecolor=[' ( ( (lv_ValueColor_14_0= ruleColorArray ) ) (otherlv_15= ',' ( (lv_ValueColor_16_0= ruleColorArray ) ) )* otherlv_17= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= 'visibility=[' ( ( (lv_Visibility_19_0= ruleVisibilityRule ) ) (otherlv_20= ',' ( (lv_Visibility_21_0= ruleVisibilityRule ) ) )* otherlv_22= ']' ) ) ) ) ) )+ {...}?) ) ) )
            {
            // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1153:1: (otherlv_0= 'Group' ( ( ( ( ({...}? => ( ({...}? => (otherlv_2= 'item=' ( (lv_item_3_0= ruleGroupItemRef ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= 'label=' ( ( (lv_label_5_1= RULE_ID | lv_label_5_2= RULE_STRING ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= 'icon=' ( (lv_icon_7_0= ruleIcon ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_8= 'labelcolor=[' ( ( (lv_LabelColor_9_0= ruleColorArray ) ) (otherlv_10= ',' ( (lv_LabelColor_11_0= ruleColorArray ) ) )* otherlv_12= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= 'valuecolor=[' ( ( (lv_ValueColor_14_0= ruleColorArray ) ) (otherlv_15= ',' ( (lv_ValueColor_16_0= ruleColorArray ) ) )* otherlv_17= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= 'visibility=[' ( ( (lv_Visibility_19_0= ruleVisibilityRule ) ) (otherlv_20= ',' ( (lv_Visibility_21_0= ruleVisibilityRule ) ) )* otherlv_22= ']' ) ) ) ) ) )+ {...}?) ) ) )
            // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1153:3: otherlv_0= 'Group' ( ( ( ( ({...}? => ( ({...}? => (otherlv_2= 'item=' ( (lv_item_3_0= ruleGroupItemRef ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= 'label=' ( ( (lv_label_5_1= RULE_ID | lv_label_5_2= RULE_STRING ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= 'icon=' ( (lv_icon_7_0= ruleIcon ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_8= 'labelcolor=[' ( ( (lv_LabelColor_9_0= ruleColorArray ) ) (otherlv_10= ',' ( (lv_LabelColor_11_0= ruleColorArray ) ) )* otherlv_12= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= 'valuecolor=[' ( ( (lv_ValueColor_14_0= ruleColorArray ) ) (otherlv_15= ',' ( (lv_ValueColor_16_0= ruleColorArray ) ) )* otherlv_17= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= 'visibility=[' ( ( (lv_Visibility_19_0= ruleVisibilityRule ) ) (otherlv_20= ',' ( (lv_Visibility_21_0= ruleVisibilityRule ) ) )* otherlv_22= ']' ) ) ) ) ) )+ {...}?) ) )
            {
            otherlv_0=(Token)match(input,25,FOLLOW_25_in_ruleGroup2756); 

                	newLeafNode(otherlv_0, grammarAccess.getGroupAccess().getGroupKeyword_0());
                
            // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1157:1: ( ( ( ( ({...}? => ( ({...}? => (otherlv_2= 'item=' ( (lv_item_3_0= ruleGroupItemRef ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= 'label=' ( ( (lv_label_5_1= RULE_ID | lv_label_5_2= RULE_STRING ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= 'icon=' ( (lv_icon_7_0= ruleIcon ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_8= 'labelcolor=[' ( ( (lv_LabelColor_9_0= ruleColorArray ) ) (otherlv_10= ',' ( (lv_LabelColor_11_0= ruleColorArray ) ) )* otherlv_12= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= 'valuecolor=[' ( ( (lv_ValueColor_14_0= ruleColorArray ) ) (otherlv_15= ',' ( (lv_ValueColor_16_0= ruleColorArray ) ) )* otherlv_17= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= 'visibility=[' ( ( (lv_Visibility_19_0= ruleVisibilityRule ) ) (otherlv_20= ',' ( (lv_Visibility_21_0= ruleVisibilityRule ) ) )* otherlv_22= ']' ) ) ) ) ) )+ {...}?) ) )
            // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1159:1: ( ( ( ({...}? => ( ({...}? => (otherlv_2= 'item=' ( (lv_item_3_0= ruleGroupItemRef ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= 'label=' ( ( (lv_label_5_1= RULE_ID | lv_label_5_2= RULE_STRING ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= 'icon=' ( (lv_icon_7_0= ruleIcon ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_8= 'labelcolor=[' ( ( (lv_LabelColor_9_0= ruleColorArray ) ) (otherlv_10= ',' ( (lv_LabelColor_11_0= ruleColorArray ) ) )* otherlv_12= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= 'valuecolor=[' ( ( (lv_ValueColor_14_0= ruleColorArray ) ) (otherlv_15= ',' ( (lv_ValueColor_16_0= ruleColorArray ) ) )* otherlv_17= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= 'visibility=[' ( ( (lv_Visibility_19_0= ruleVisibilityRule ) ) (otherlv_20= ',' ( (lv_Visibility_21_0= ruleVisibilityRule ) ) )* otherlv_22= ']' ) ) ) ) ) )+ {...}?) )
            {
            // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1159:1: ( ( ( ({...}? => ( ({...}? => (otherlv_2= 'item=' ( (lv_item_3_0= ruleGroupItemRef ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= 'label=' ( ( (lv_label_5_1= RULE_ID | lv_label_5_2= RULE_STRING ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= 'icon=' ( (lv_icon_7_0= ruleIcon ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_8= 'labelcolor=[' ( ( (lv_LabelColor_9_0= ruleColorArray ) ) (otherlv_10= ',' ( (lv_LabelColor_11_0= ruleColorArray ) ) )* otherlv_12= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= 'valuecolor=[' ( ( (lv_ValueColor_14_0= ruleColorArray ) ) (otherlv_15= ',' ( (lv_ValueColor_16_0= ruleColorArray ) ) )* otherlv_17= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= 'visibility=[' ( ( (lv_Visibility_19_0= ruleVisibilityRule ) ) (otherlv_20= ',' ( (lv_Visibility_21_0= ruleVisibilityRule ) ) )* otherlv_22= ']' ) ) ) ) ) )+ {...}?) )
            // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1160:2: ( ( ({...}? => ( ({...}? => (otherlv_2= 'item=' ( (lv_item_3_0= ruleGroupItemRef ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= 'label=' ( ( (lv_label_5_1= RULE_ID | lv_label_5_2= RULE_STRING ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= 'icon=' ( (lv_icon_7_0= ruleIcon ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_8= 'labelcolor=[' ( ( (lv_LabelColor_9_0= ruleColorArray ) ) (otherlv_10= ',' ( (lv_LabelColor_11_0= ruleColorArray ) ) )* otherlv_12= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= 'valuecolor=[' ( ( (lv_ValueColor_14_0= ruleColorArray ) ) (otherlv_15= ',' ( (lv_ValueColor_16_0= ruleColorArray ) ) )* otherlv_17= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= 'visibility=[' ( ( (lv_Visibility_19_0= ruleVisibilityRule ) ) (otherlv_20= ',' ( (lv_Visibility_21_0= ruleVisibilityRule ) ) )* otherlv_22= ']' ) ) ) ) ) )+ {...}?)
            {
             
            	  getUnorderedGroupHelper().enter(grammarAccess.getGroupAccess().getUnorderedGroup_1());
            	
            // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1163:2: ( ( ({...}? => ( ({...}? => (otherlv_2= 'item=' ( (lv_item_3_0= ruleGroupItemRef ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= 'label=' ( ( (lv_label_5_1= RULE_ID | lv_label_5_2= RULE_STRING ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= 'icon=' ( (lv_icon_7_0= ruleIcon ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_8= 'labelcolor=[' ( ( (lv_LabelColor_9_0= ruleColorArray ) ) (otherlv_10= ',' ( (lv_LabelColor_11_0= ruleColorArray ) ) )* otherlv_12= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= 'valuecolor=[' ( ( (lv_ValueColor_14_0= ruleColorArray ) ) (otherlv_15= ',' ( (lv_ValueColor_16_0= ruleColorArray ) ) )* otherlv_17= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= 'visibility=[' ( ( (lv_Visibility_19_0= ruleVisibilityRule ) ) (otherlv_20= ',' ( (lv_Visibility_21_0= ruleVisibilityRule ) ) )* otherlv_22= ']' ) ) ) ) ) )+ {...}?)
            // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1164:3: ( ({...}? => ( ({...}? => (otherlv_2= 'item=' ( (lv_item_3_0= ruleGroupItemRef ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= 'label=' ( ( (lv_label_5_1= RULE_ID | lv_label_5_2= RULE_STRING ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= 'icon=' ( (lv_icon_7_0= ruleIcon ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_8= 'labelcolor=[' ( ( (lv_LabelColor_9_0= ruleColorArray ) ) (otherlv_10= ',' ( (lv_LabelColor_11_0= ruleColorArray ) ) )* otherlv_12= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= 'valuecolor=[' ( ( (lv_ValueColor_14_0= ruleColorArray ) ) (otherlv_15= ',' ( (lv_ValueColor_16_0= ruleColorArray ) ) )* otherlv_17= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= 'visibility=[' ( ( (lv_Visibility_19_0= ruleVisibilityRule ) ) (otherlv_20= ',' ( (lv_Visibility_21_0= ruleVisibilityRule ) ) )* otherlv_22= ']' ) ) ) ) ) )+ {...}?
            {
            // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1164:3: ( ({...}? => ( ({...}? => (otherlv_2= 'item=' ( (lv_item_3_0= ruleGroupItemRef ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= 'label=' ( ( (lv_label_5_1= RULE_ID | lv_label_5_2= RULE_STRING ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= 'icon=' ( (lv_icon_7_0= ruleIcon ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_8= 'labelcolor=[' ( ( (lv_LabelColor_9_0= ruleColorArray ) ) (otherlv_10= ',' ( (lv_LabelColor_11_0= ruleColorArray ) ) )* otherlv_12= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= 'valuecolor=[' ( ( (lv_ValueColor_14_0= ruleColorArray ) ) (otherlv_15= ',' ( (lv_ValueColor_16_0= ruleColorArray ) ) )* otherlv_17= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= 'visibility=[' ( ( (lv_Visibility_19_0= ruleVisibilityRule ) ) (otherlv_20= ',' ( (lv_Visibility_21_0= ruleVisibilityRule ) ) )* otherlv_22= ']' ) ) ) ) ) )+
            int cnt23=0;
            loop23:
            do {
                int alt23=7;
                int LA23_0 = input.LA(1);

                if ( LA23_0 ==18 && getUnorderedGroupHelper().canSelect(grammarAccess.getGroupAccess().getUnorderedGroup_1(), 0) ) {
                    alt23=1;
                }
                else if ( LA23_0 ==13 && getUnorderedGroupHelper().canSelect(grammarAccess.getGroupAccess().getUnorderedGroup_1(), 1) ) {
                    alt23=2;
                }
                else if ( LA23_0 ==14 && getUnorderedGroupHelper().canSelect(grammarAccess.getGroupAccess().getUnorderedGroup_1(), 2) ) {
                    alt23=3;
                }
                else if ( LA23_0 ==19 && getUnorderedGroupHelper().canSelect(grammarAccess.getGroupAccess().getUnorderedGroup_1(), 3) ) {
                    alt23=4;
                }
                else if ( LA23_0 ==22 && getUnorderedGroupHelper().canSelect(grammarAccess.getGroupAccess().getUnorderedGroup_1(), 4) ) {
                    alt23=5;
                }
                else if ( LA23_0 ==23 && getUnorderedGroupHelper().canSelect(grammarAccess.getGroupAccess().getUnorderedGroup_1(), 5) ) {
                    alt23=6;
                }


                switch (alt23) {
            	case 1 :
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1166:4: ({...}? => ( ({...}? => (otherlv_2= 'item=' ( (lv_item_3_0= ruleGroupItemRef ) ) ) ) ) )
            	    {
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1166:4: ({...}? => ( ({...}? => (otherlv_2= 'item=' ( (lv_item_3_0= ruleGroupItemRef ) ) ) ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1167:5: {...}? => ( ({...}? => (otherlv_2= 'item=' ( (lv_item_3_0= ruleGroupItemRef ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getGroupAccess().getUnorderedGroup_1(), 0) ) {
            	        throw new FailedPredicateException(input, "ruleGroup", "getUnorderedGroupHelper().canSelect(grammarAccess.getGroupAccess().getUnorderedGroup_1(), 0)");
            	    }
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1167:102: ( ({...}? => (otherlv_2= 'item=' ( (lv_item_3_0= ruleGroupItemRef ) ) ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1168:6: ({...}? => (otherlv_2= 'item=' ( (lv_item_3_0= ruleGroupItemRef ) ) ) )
            	    {
            	     
            	    	 				  getUnorderedGroupHelper().select(grammarAccess.getGroupAccess().getUnorderedGroup_1(), 0);
            	    	 				
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1171:6: ({...}? => (otherlv_2= 'item=' ( (lv_item_3_0= ruleGroupItemRef ) ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1171:7: {...}? => (otherlv_2= 'item=' ( (lv_item_3_0= ruleGroupItemRef ) ) )
            	    {
            	    if ( !((true)) ) {
            	        throw new FailedPredicateException(input, "ruleGroup", "true");
            	    }
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1171:16: (otherlv_2= 'item=' ( (lv_item_3_0= ruleGroupItemRef ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1171:18: otherlv_2= 'item=' ( (lv_item_3_0= ruleGroupItemRef ) )
            	    {
            	    otherlv_2=(Token)match(input,18,FOLLOW_18_in_ruleGroup2814); 

            	        	newLeafNode(otherlv_2, grammarAccess.getGroupAccess().getItemKeyword_1_0_0());
            	        
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1175:1: ( (lv_item_3_0= ruleGroupItemRef ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1176:1: (lv_item_3_0= ruleGroupItemRef )
            	    {
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1176:1: (lv_item_3_0= ruleGroupItemRef )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1177:3: lv_item_3_0= ruleGroupItemRef
            	    {
            	     
            	    	        newCompositeNode(grammarAccess.getGroupAccess().getItemGroupItemRefParserRuleCall_1_0_1_0()); 
            	    	    
            	    pushFollow(FOLLOW_ruleGroupItemRef_in_ruleGroup2835);
            	    lv_item_3_0=ruleGroupItemRef();

            	    state._fsp--;


            	    	        if (current==null) {
            	    	            current = createModelElementForParent(grammarAccess.getGroupRule());
            	    	        }
            	           		set(
            	           			current, 
            	           			"item",
            	            		lv_item_3_0, 
            	            		"GroupItemRef");
            	    	        afterParserOrEnumRuleCall();
            	    	    

            	    }


            	    }


            	    }


            	    }

            	     
            	    	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getGroupAccess().getUnorderedGroup_1());
            	    	 				

            	    }


            	    }


            	    }
            	    break;
            	case 2 :
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1200:4: ({...}? => ( ({...}? => (otherlv_4= 'label=' ( ( (lv_label_5_1= RULE_ID | lv_label_5_2= RULE_STRING ) ) ) ) ) ) )
            	    {
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1200:4: ({...}? => ( ({...}? => (otherlv_4= 'label=' ( ( (lv_label_5_1= RULE_ID | lv_label_5_2= RULE_STRING ) ) ) ) ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1201:5: {...}? => ( ({...}? => (otherlv_4= 'label=' ( ( (lv_label_5_1= RULE_ID | lv_label_5_2= RULE_STRING ) ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getGroupAccess().getUnorderedGroup_1(), 1) ) {
            	        throw new FailedPredicateException(input, "ruleGroup", "getUnorderedGroupHelper().canSelect(grammarAccess.getGroupAccess().getUnorderedGroup_1(), 1)");
            	    }
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1201:102: ( ({...}? => (otherlv_4= 'label=' ( ( (lv_label_5_1= RULE_ID | lv_label_5_2= RULE_STRING ) ) ) ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1202:6: ({...}? => (otherlv_4= 'label=' ( ( (lv_label_5_1= RULE_ID | lv_label_5_2= RULE_STRING ) ) ) ) )
            	    {
            	     
            	    	 				  getUnorderedGroupHelper().select(grammarAccess.getGroupAccess().getUnorderedGroup_1(), 1);
            	    	 				
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1205:6: ({...}? => (otherlv_4= 'label=' ( ( (lv_label_5_1= RULE_ID | lv_label_5_2= RULE_STRING ) ) ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1205:7: {...}? => (otherlv_4= 'label=' ( ( (lv_label_5_1= RULE_ID | lv_label_5_2= RULE_STRING ) ) ) )
            	    {
            	    if ( !((true)) ) {
            	        throw new FailedPredicateException(input, "ruleGroup", "true");
            	    }
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1205:16: (otherlv_4= 'label=' ( ( (lv_label_5_1= RULE_ID | lv_label_5_2= RULE_STRING ) ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1205:18: otherlv_4= 'label=' ( ( (lv_label_5_1= RULE_ID | lv_label_5_2= RULE_STRING ) ) )
            	    {
            	    otherlv_4=(Token)match(input,13,FOLLOW_13_in_ruleGroup2903); 

            	        	newLeafNode(otherlv_4, grammarAccess.getGroupAccess().getLabelKeyword_1_1_0());
            	        
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1209:1: ( ( (lv_label_5_1= RULE_ID | lv_label_5_2= RULE_STRING ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1210:1: ( (lv_label_5_1= RULE_ID | lv_label_5_2= RULE_STRING ) )
            	    {
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1210:1: ( (lv_label_5_1= RULE_ID | lv_label_5_2= RULE_STRING ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1211:1: (lv_label_5_1= RULE_ID | lv_label_5_2= RULE_STRING )
            	    {
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1211:1: (lv_label_5_1= RULE_ID | lv_label_5_2= RULE_STRING )
            	    int alt19=2;
            	    int LA19_0 = input.LA(1);

            	    if ( (LA19_0==RULE_ID) ) {
            	        alt19=1;
            	    }
            	    else if ( (LA19_0==RULE_STRING) ) {
            	        alt19=2;
            	    }
            	    else {
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 19, 0, input);

            	        throw nvae;
            	    }
            	    switch (alt19) {
            	        case 1 :
            	            // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1212:3: lv_label_5_1= RULE_ID
            	            {
            	            lv_label_5_1=(Token)match(input,RULE_ID,FOLLOW_RULE_ID_in_ruleGroup2922); 

            	            			newLeafNode(lv_label_5_1, grammarAccess.getGroupAccess().getLabelIDTerminalRuleCall_1_1_1_0_0()); 
            	            		

            	            	        if (current==null) {
            	            	            current = createModelElement(grammarAccess.getGroupRule());
            	            	        }
            	                   		setWithLastConsumed(
            	                   			current, 
            	                   			"label",
            	                    		lv_label_5_1, 
            	                    		"ID");
            	            	    

            	            }
            	            break;
            	        case 2 :
            	            // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1227:8: lv_label_5_2= RULE_STRING
            	            {
            	            lv_label_5_2=(Token)match(input,RULE_STRING,FOLLOW_RULE_STRING_in_ruleGroup2942); 

            	            			newLeafNode(lv_label_5_2, grammarAccess.getGroupAccess().getLabelSTRINGTerminalRuleCall_1_1_1_0_1()); 
            	            		

            	            	        if (current==null) {
            	            	            current = createModelElement(grammarAccess.getGroupRule());
            	            	        }
            	                   		setWithLastConsumed(
            	                   			current, 
            	                   			"label",
            	                    		lv_label_5_2, 
            	                    		"STRING");
            	            	    

            	            }
            	            break;

            	    }


            	    }


            	    }


            	    }


            	    }

            	     
            	    	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getGroupAccess().getUnorderedGroup_1());
            	    	 				

            	    }


            	    }


            	    }
            	    break;
            	case 3 :
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1252:4: ({...}? => ( ({...}? => (otherlv_6= 'icon=' ( (lv_icon_7_0= ruleIcon ) ) ) ) ) )
            	    {
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1252:4: ({...}? => ( ({...}? => (otherlv_6= 'icon=' ( (lv_icon_7_0= ruleIcon ) ) ) ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1253:5: {...}? => ( ({...}? => (otherlv_6= 'icon=' ( (lv_icon_7_0= ruleIcon ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getGroupAccess().getUnorderedGroup_1(), 2) ) {
            	        throw new FailedPredicateException(input, "ruleGroup", "getUnorderedGroupHelper().canSelect(grammarAccess.getGroupAccess().getUnorderedGroup_1(), 2)");
            	    }
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1253:102: ( ({...}? => (otherlv_6= 'icon=' ( (lv_icon_7_0= ruleIcon ) ) ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1254:6: ({...}? => (otherlv_6= 'icon=' ( (lv_icon_7_0= ruleIcon ) ) ) )
            	    {
            	     
            	    	 				  getUnorderedGroupHelper().select(grammarAccess.getGroupAccess().getUnorderedGroup_1(), 2);
            	    	 				
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1257:6: ({...}? => (otherlv_6= 'icon=' ( (lv_icon_7_0= ruleIcon ) ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1257:7: {...}? => (otherlv_6= 'icon=' ( (lv_icon_7_0= ruleIcon ) ) )
            	    {
            	    if ( !((true)) ) {
            	        throw new FailedPredicateException(input, "ruleGroup", "true");
            	    }
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1257:16: (otherlv_6= 'icon=' ( (lv_icon_7_0= ruleIcon ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1257:18: otherlv_6= 'icon=' ( (lv_icon_7_0= ruleIcon ) )
            	    {
            	    otherlv_6=(Token)match(input,14,FOLLOW_14_in_ruleGroup3018); 

            	        	newLeafNode(otherlv_6, grammarAccess.getGroupAccess().getIconKeyword_1_2_0());
            	        
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1261:1: ( (lv_icon_7_0= ruleIcon ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1262:1: (lv_icon_7_0= ruleIcon )
            	    {
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1262:1: (lv_icon_7_0= ruleIcon )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1263:3: lv_icon_7_0= ruleIcon
            	    {
            	     
            	    	        newCompositeNode(grammarAccess.getGroupAccess().getIconIconParserRuleCall_1_2_1_0()); 
            	    	    
            	    pushFollow(FOLLOW_ruleIcon_in_ruleGroup3039);
            	    lv_icon_7_0=ruleIcon();

            	    state._fsp--;


            	    	        if (current==null) {
            	    	            current = createModelElementForParent(grammarAccess.getGroupRule());
            	    	        }
            	           		set(
            	           			current, 
            	           			"icon",
            	            		lv_icon_7_0, 
            	            		"Icon");
            	    	        afterParserOrEnumRuleCall();
            	    	    

            	    }


            	    }


            	    }


            	    }

            	     
            	    	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getGroupAccess().getUnorderedGroup_1());
            	    	 				

            	    }


            	    }


            	    }
            	    break;
            	case 4 :
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1286:4: ({...}? => ( ({...}? => (otherlv_8= 'labelcolor=[' ( ( (lv_LabelColor_9_0= ruleColorArray ) ) (otherlv_10= ',' ( (lv_LabelColor_11_0= ruleColorArray ) ) )* otherlv_12= ']' ) ) ) ) )
            	    {
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1286:4: ({...}? => ( ({...}? => (otherlv_8= 'labelcolor=[' ( ( (lv_LabelColor_9_0= ruleColorArray ) ) (otherlv_10= ',' ( (lv_LabelColor_11_0= ruleColorArray ) ) )* otherlv_12= ']' ) ) ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1287:5: {...}? => ( ({...}? => (otherlv_8= 'labelcolor=[' ( ( (lv_LabelColor_9_0= ruleColorArray ) ) (otherlv_10= ',' ( (lv_LabelColor_11_0= ruleColorArray ) ) )* otherlv_12= ']' ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getGroupAccess().getUnorderedGroup_1(), 3) ) {
            	        throw new FailedPredicateException(input, "ruleGroup", "getUnorderedGroupHelper().canSelect(grammarAccess.getGroupAccess().getUnorderedGroup_1(), 3)");
            	    }
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1287:102: ( ({...}? => (otherlv_8= 'labelcolor=[' ( ( (lv_LabelColor_9_0= ruleColorArray ) ) (otherlv_10= ',' ( (lv_LabelColor_11_0= ruleColorArray ) ) )* otherlv_12= ']' ) ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1288:6: ({...}? => (otherlv_8= 'labelcolor=[' ( ( (lv_LabelColor_9_0= ruleColorArray ) ) (otherlv_10= ',' ( (lv_LabelColor_11_0= ruleColorArray ) ) )* otherlv_12= ']' ) ) )
            	    {
            	     
            	    	 				  getUnorderedGroupHelper().select(grammarAccess.getGroupAccess().getUnorderedGroup_1(), 3);
            	    	 				
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1291:6: ({...}? => (otherlv_8= 'labelcolor=[' ( ( (lv_LabelColor_9_0= ruleColorArray ) ) (otherlv_10= ',' ( (lv_LabelColor_11_0= ruleColorArray ) ) )* otherlv_12= ']' ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1291:7: {...}? => (otherlv_8= 'labelcolor=[' ( ( (lv_LabelColor_9_0= ruleColorArray ) ) (otherlv_10= ',' ( (lv_LabelColor_11_0= ruleColorArray ) ) )* otherlv_12= ']' ) )
            	    {
            	    if ( !((true)) ) {
            	        throw new FailedPredicateException(input, "ruleGroup", "true");
            	    }
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1291:16: (otherlv_8= 'labelcolor=[' ( ( (lv_LabelColor_9_0= ruleColorArray ) ) (otherlv_10= ',' ( (lv_LabelColor_11_0= ruleColorArray ) ) )* otherlv_12= ']' ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1291:18: otherlv_8= 'labelcolor=[' ( ( (lv_LabelColor_9_0= ruleColorArray ) ) (otherlv_10= ',' ( (lv_LabelColor_11_0= ruleColorArray ) ) )* otherlv_12= ']' )
            	    {
            	    otherlv_8=(Token)match(input,19,FOLLOW_19_in_ruleGroup3107); 

            	        	newLeafNode(otherlv_8, grammarAccess.getGroupAccess().getLabelcolorKeyword_1_3_0());
            	        
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1295:1: ( ( (lv_LabelColor_9_0= ruleColorArray ) ) (otherlv_10= ',' ( (lv_LabelColor_11_0= ruleColorArray ) ) )* otherlv_12= ']' )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1295:2: ( (lv_LabelColor_9_0= ruleColorArray ) ) (otherlv_10= ',' ( (lv_LabelColor_11_0= ruleColorArray ) ) )* otherlv_12= ']'
            	    {
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1295:2: ( (lv_LabelColor_9_0= ruleColorArray ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1296:1: (lv_LabelColor_9_0= ruleColorArray )
            	    {
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1296:1: (lv_LabelColor_9_0= ruleColorArray )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1297:3: lv_LabelColor_9_0= ruleColorArray
            	    {
            	     
            	    	        newCompositeNode(grammarAccess.getGroupAccess().getLabelColorColorArrayParserRuleCall_1_3_1_0_0()); 
            	    	    
            	    pushFollow(FOLLOW_ruleColorArray_in_ruleGroup3129);
            	    lv_LabelColor_9_0=ruleColorArray();

            	    state._fsp--;


            	    	        if (current==null) {
            	    	            current = createModelElementForParent(grammarAccess.getGroupRule());
            	    	        }
            	           		add(
            	           			current, 
            	           			"LabelColor",
            	            		lv_LabelColor_9_0, 
            	            		"ColorArray");
            	    	        afterParserOrEnumRuleCall();
            	    	    

            	    }


            	    }

            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1313:2: (otherlv_10= ',' ( (lv_LabelColor_11_0= ruleColorArray ) ) )*
            	    loop20:
            	    do {
            	        int alt20=2;
            	        int LA20_0 = input.LA(1);

            	        if ( (LA20_0==20) ) {
            	            alt20=1;
            	        }


            	        switch (alt20) {
            	    	case 1 :
            	    	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1313:4: otherlv_10= ',' ( (lv_LabelColor_11_0= ruleColorArray ) )
            	    	    {
            	    	    otherlv_10=(Token)match(input,20,FOLLOW_20_in_ruleGroup3142); 

            	    	        	newLeafNode(otherlv_10, grammarAccess.getGroupAccess().getCommaKeyword_1_3_1_1_0());
            	    	        
            	    	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1317:1: ( (lv_LabelColor_11_0= ruleColorArray ) )
            	    	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1318:1: (lv_LabelColor_11_0= ruleColorArray )
            	    	    {
            	    	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1318:1: (lv_LabelColor_11_0= ruleColorArray )
            	    	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1319:3: lv_LabelColor_11_0= ruleColorArray
            	    	    {
            	    	     
            	    	    	        newCompositeNode(grammarAccess.getGroupAccess().getLabelColorColorArrayParserRuleCall_1_3_1_1_1_0()); 
            	    	    	    
            	    	    pushFollow(FOLLOW_ruleColorArray_in_ruleGroup3163);
            	    	    lv_LabelColor_11_0=ruleColorArray();

            	    	    state._fsp--;


            	    	    	        if (current==null) {
            	    	    	            current = createModelElementForParent(grammarAccess.getGroupRule());
            	    	    	        }
            	    	           		add(
            	    	           			current, 
            	    	           			"LabelColor",
            	    	            		lv_LabelColor_11_0, 
            	    	            		"ColorArray");
            	    	    	        afterParserOrEnumRuleCall();
            	    	    	    

            	    	    }


            	    	    }


            	    	    }
            	    	    break;

            	    	default :
            	    	    break loop20;
            	        }
            	    } while (true);

            	    otherlv_12=(Token)match(input,21,FOLLOW_21_in_ruleGroup3177); 

            	        	newLeafNode(otherlv_12, grammarAccess.getGroupAccess().getRightSquareBracketKeyword_1_3_1_2());
            	        

            	    }


            	    }


            	    }

            	     
            	    	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getGroupAccess().getUnorderedGroup_1());
            	    	 				

            	    }


            	    }


            	    }
            	    break;
            	case 5 :
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1346:4: ({...}? => ( ({...}? => (otherlv_13= 'valuecolor=[' ( ( (lv_ValueColor_14_0= ruleColorArray ) ) (otherlv_15= ',' ( (lv_ValueColor_16_0= ruleColorArray ) ) )* otherlv_17= ']' ) ) ) ) )
            	    {
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1346:4: ({...}? => ( ({...}? => (otherlv_13= 'valuecolor=[' ( ( (lv_ValueColor_14_0= ruleColorArray ) ) (otherlv_15= ',' ( (lv_ValueColor_16_0= ruleColorArray ) ) )* otherlv_17= ']' ) ) ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1347:5: {...}? => ( ({...}? => (otherlv_13= 'valuecolor=[' ( ( (lv_ValueColor_14_0= ruleColorArray ) ) (otherlv_15= ',' ( (lv_ValueColor_16_0= ruleColorArray ) ) )* otherlv_17= ']' ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getGroupAccess().getUnorderedGroup_1(), 4) ) {
            	        throw new FailedPredicateException(input, "ruleGroup", "getUnorderedGroupHelper().canSelect(grammarAccess.getGroupAccess().getUnorderedGroup_1(), 4)");
            	    }
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1347:102: ( ({...}? => (otherlv_13= 'valuecolor=[' ( ( (lv_ValueColor_14_0= ruleColorArray ) ) (otherlv_15= ',' ( (lv_ValueColor_16_0= ruleColorArray ) ) )* otherlv_17= ']' ) ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1348:6: ({...}? => (otherlv_13= 'valuecolor=[' ( ( (lv_ValueColor_14_0= ruleColorArray ) ) (otherlv_15= ',' ( (lv_ValueColor_16_0= ruleColorArray ) ) )* otherlv_17= ']' ) ) )
            	    {
            	     
            	    	 				  getUnorderedGroupHelper().select(grammarAccess.getGroupAccess().getUnorderedGroup_1(), 4);
            	    	 				
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1351:6: ({...}? => (otherlv_13= 'valuecolor=[' ( ( (lv_ValueColor_14_0= ruleColorArray ) ) (otherlv_15= ',' ( (lv_ValueColor_16_0= ruleColorArray ) ) )* otherlv_17= ']' ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1351:7: {...}? => (otherlv_13= 'valuecolor=[' ( ( (lv_ValueColor_14_0= ruleColorArray ) ) (otherlv_15= ',' ( (lv_ValueColor_16_0= ruleColorArray ) ) )* otherlv_17= ']' ) )
            	    {
            	    if ( !((true)) ) {
            	        throw new FailedPredicateException(input, "ruleGroup", "true");
            	    }
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1351:16: (otherlv_13= 'valuecolor=[' ( ( (lv_ValueColor_14_0= ruleColorArray ) ) (otherlv_15= ',' ( (lv_ValueColor_16_0= ruleColorArray ) ) )* otherlv_17= ']' ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1351:18: otherlv_13= 'valuecolor=[' ( ( (lv_ValueColor_14_0= ruleColorArray ) ) (otherlv_15= ',' ( (lv_ValueColor_16_0= ruleColorArray ) ) )* otherlv_17= ']' )
            	    {
            	    otherlv_13=(Token)match(input,22,FOLLOW_22_in_ruleGroup3246); 

            	        	newLeafNode(otherlv_13, grammarAccess.getGroupAccess().getValuecolorKeyword_1_4_0());
            	        
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1355:1: ( ( (lv_ValueColor_14_0= ruleColorArray ) ) (otherlv_15= ',' ( (lv_ValueColor_16_0= ruleColorArray ) ) )* otherlv_17= ']' )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1355:2: ( (lv_ValueColor_14_0= ruleColorArray ) ) (otherlv_15= ',' ( (lv_ValueColor_16_0= ruleColorArray ) ) )* otherlv_17= ']'
            	    {
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1355:2: ( (lv_ValueColor_14_0= ruleColorArray ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1356:1: (lv_ValueColor_14_0= ruleColorArray )
            	    {
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1356:1: (lv_ValueColor_14_0= ruleColorArray )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1357:3: lv_ValueColor_14_0= ruleColorArray
            	    {
            	     
            	    	        newCompositeNode(grammarAccess.getGroupAccess().getValueColorColorArrayParserRuleCall_1_4_1_0_0()); 
            	    	    
            	    pushFollow(FOLLOW_ruleColorArray_in_ruleGroup3268);
            	    lv_ValueColor_14_0=ruleColorArray();

            	    state._fsp--;


            	    	        if (current==null) {
            	    	            current = createModelElementForParent(grammarAccess.getGroupRule());
            	    	        }
            	           		add(
            	           			current, 
            	           			"ValueColor",
            	            		lv_ValueColor_14_0, 
            	            		"ColorArray");
            	    	        afterParserOrEnumRuleCall();
            	    	    

            	    }


            	    }

            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1373:2: (otherlv_15= ',' ( (lv_ValueColor_16_0= ruleColorArray ) ) )*
            	    loop21:
            	    do {
            	        int alt21=2;
            	        int LA21_0 = input.LA(1);

            	        if ( (LA21_0==20) ) {
            	            alt21=1;
            	        }


            	        switch (alt21) {
            	    	case 1 :
            	    	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1373:4: otherlv_15= ',' ( (lv_ValueColor_16_0= ruleColorArray ) )
            	    	    {
            	    	    otherlv_15=(Token)match(input,20,FOLLOW_20_in_ruleGroup3281); 

            	    	        	newLeafNode(otherlv_15, grammarAccess.getGroupAccess().getCommaKeyword_1_4_1_1_0());
            	    	        
            	    	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1377:1: ( (lv_ValueColor_16_0= ruleColorArray ) )
            	    	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1378:1: (lv_ValueColor_16_0= ruleColorArray )
            	    	    {
            	    	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1378:1: (lv_ValueColor_16_0= ruleColorArray )
            	    	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1379:3: lv_ValueColor_16_0= ruleColorArray
            	    	    {
            	    	     
            	    	    	        newCompositeNode(grammarAccess.getGroupAccess().getValueColorColorArrayParserRuleCall_1_4_1_1_1_0()); 
            	    	    	    
            	    	    pushFollow(FOLLOW_ruleColorArray_in_ruleGroup3302);
            	    	    lv_ValueColor_16_0=ruleColorArray();

            	    	    state._fsp--;


            	    	    	        if (current==null) {
            	    	    	            current = createModelElementForParent(grammarAccess.getGroupRule());
            	    	    	        }
            	    	           		add(
            	    	           			current, 
            	    	           			"ValueColor",
            	    	            		lv_ValueColor_16_0, 
            	    	            		"ColorArray");
            	    	    	        afterParserOrEnumRuleCall();
            	    	    	    

            	    	    }


            	    	    }


            	    	    }
            	    	    break;

            	    	default :
            	    	    break loop21;
            	        }
            	    } while (true);

            	    otherlv_17=(Token)match(input,21,FOLLOW_21_in_ruleGroup3316); 

            	        	newLeafNode(otherlv_17, grammarAccess.getGroupAccess().getRightSquareBracketKeyword_1_4_1_2());
            	        

            	    }


            	    }


            	    }

            	     
            	    	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getGroupAccess().getUnorderedGroup_1());
            	    	 				

            	    }


            	    }


            	    }
            	    break;
            	case 6 :
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1406:4: ({...}? => ( ({...}? => (otherlv_18= 'visibility=[' ( ( (lv_Visibility_19_0= ruleVisibilityRule ) ) (otherlv_20= ',' ( (lv_Visibility_21_0= ruleVisibilityRule ) ) )* otherlv_22= ']' ) ) ) ) )
            	    {
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1406:4: ({...}? => ( ({...}? => (otherlv_18= 'visibility=[' ( ( (lv_Visibility_19_0= ruleVisibilityRule ) ) (otherlv_20= ',' ( (lv_Visibility_21_0= ruleVisibilityRule ) ) )* otherlv_22= ']' ) ) ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1407:5: {...}? => ( ({...}? => (otherlv_18= 'visibility=[' ( ( (lv_Visibility_19_0= ruleVisibilityRule ) ) (otherlv_20= ',' ( (lv_Visibility_21_0= ruleVisibilityRule ) ) )* otherlv_22= ']' ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getGroupAccess().getUnorderedGroup_1(), 5) ) {
            	        throw new FailedPredicateException(input, "ruleGroup", "getUnorderedGroupHelper().canSelect(grammarAccess.getGroupAccess().getUnorderedGroup_1(), 5)");
            	    }
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1407:102: ( ({...}? => (otherlv_18= 'visibility=[' ( ( (lv_Visibility_19_0= ruleVisibilityRule ) ) (otherlv_20= ',' ( (lv_Visibility_21_0= ruleVisibilityRule ) ) )* otherlv_22= ']' ) ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1408:6: ({...}? => (otherlv_18= 'visibility=[' ( ( (lv_Visibility_19_0= ruleVisibilityRule ) ) (otherlv_20= ',' ( (lv_Visibility_21_0= ruleVisibilityRule ) ) )* otherlv_22= ']' ) ) )
            	    {
            	     
            	    	 				  getUnorderedGroupHelper().select(grammarAccess.getGroupAccess().getUnorderedGroup_1(), 5);
            	    	 				
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1411:6: ({...}? => (otherlv_18= 'visibility=[' ( ( (lv_Visibility_19_0= ruleVisibilityRule ) ) (otherlv_20= ',' ( (lv_Visibility_21_0= ruleVisibilityRule ) ) )* otherlv_22= ']' ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1411:7: {...}? => (otherlv_18= 'visibility=[' ( ( (lv_Visibility_19_0= ruleVisibilityRule ) ) (otherlv_20= ',' ( (lv_Visibility_21_0= ruleVisibilityRule ) ) )* otherlv_22= ']' ) )
            	    {
            	    if ( !((true)) ) {
            	        throw new FailedPredicateException(input, "ruleGroup", "true");
            	    }
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1411:16: (otherlv_18= 'visibility=[' ( ( (lv_Visibility_19_0= ruleVisibilityRule ) ) (otherlv_20= ',' ( (lv_Visibility_21_0= ruleVisibilityRule ) ) )* otherlv_22= ']' ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1411:18: otherlv_18= 'visibility=[' ( ( (lv_Visibility_19_0= ruleVisibilityRule ) ) (otherlv_20= ',' ( (lv_Visibility_21_0= ruleVisibilityRule ) ) )* otherlv_22= ']' )
            	    {
            	    otherlv_18=(Token)match(input,23,FOLLOW_23_in_ruleGroup3385); 

            	        	newLeafNode(otherlv_18, grammarAccess.getGroupAccess().getVisibilityKeyword_1_5_0());
            	        
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1415:1: ( ( (lv_Visibility_19_0= ruleVisibilityRule ) ) (otherlv_20= ',' ( (lv_Visibility_21_0= ruleVisibilityRule ) ) )* otherlv_22= ']' )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1415:2: ( (lv_Visibility_19_0= ruleVisibilityRule ) ) (otherlv_20= ',' ( (lv_Visibility_21_0= ruleVisibilityRule ) ) )* otherlv_22= ']'
            	    {
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1415:2: ( (lv_Visibility_19_0= ruleVisibilityRule ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1416:1: (lv_Visibility_19_0= ruleVisibilityRule )
            	    {
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1416:1: (lv_Visibility_19_0= ruleVisibilityRule )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1417:3: lv_Visibility_19_0= ruleVisibilityRule
            	    {
            	     
            	    	        newCompositeNode(grammarAccess.getGroupAccess().getVisibilityVisibilityRuleParserRuleCall_1_5_1_0_0()); 
            	    	    
            	    pushFollow(FOLLOW_ruleVisibilityRule_in_ruleGroup3407);
            	    lv_Visibility_19_0=ruleVisibilityRule();

            	    state._fsp--;


            	    	        if (current==null) {
            	    	            current = createModelElementForParent(grammarAccess.getGroupRule());
            	    	        }
            	           		add(
            	           			current, 
            	           			"Visibility",
            	            		lv_Visibility_19_0, 
            	            		"VisibilityRule");
            	    	        afterParserOrEnumRuleCall();
            	    	    

            	    }


            	    }

            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1433:2: (otherlv_20= ',' ( (lv_Visibility_21_0= ruleVisibilityRule ) ) )*
            	    loop22:
            	    do {
            	        int alt22=2;
            	        int LA22_0 = input.LA(1);

            	        if ( (LA22_0==20) ) {
            	            alt22=1;
            	        }


            	        switch (alt22) {
            	    	case 1 :
            	    	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1433:4: otherlv_20= ',' ( (lv_Visibility_21_0= ruleVisibilityRule ) )
            	    	    {
            	    	    otherlv_20=(Token)match(input,20,FOLLOW_20_in_ruleGroup3420); 

            	    	        	newLeafNode(otherlv_20, grammarAccess.getGroupAccess().getCommaKeyword_1_5_1_1_0());
            	    	        
            	    	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1437:1: ( (lv_Visibility_21_0= ruleVisibilityRule ) )
            	    	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1438:1: (lv_Visibility_21_0= ruleVisibilityRule )
            	    	    {
            	    	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1438:1: (lv_Visibility_21_0= ruleVisibilityRule )
            	    	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1439:3: lv_Visibility_21_0= ruleVisibilityRule
            	    	    {
            	    	     
            	    	    	        newCompositeNode(grammarAccess.getGroupAccess().getVisibilityVisibilityRuleParserRuleCall_1_5_1_1_1_0()); 
            	    	    	    
            	    	    pushFollow(FOLLOW_ruleVisibilityRule_in_ruleGroup3441);
            	    	    lv_Visibility_21_0=ruleVisibilityRule();

            	    	    state._fsp--;


            	    	    	        if (current==null) {
            	    	    	            current = createModelElementForParent(grammarAccess.getGroupRule());
            	    	    	        }
            	    	           		add(
            	    	           			current, 
            	    	           			"Visibility",
            	    	            		lv_Visibility_21_0, 
            	    	            		"VisibilityRule");
            	    	    	        afterParserOrEnumRuleCall();
            	    	    	    

            	    	    }


            	    	    }


            	    	    }
            	    	    break;

            	    	default :
            	    	    break loop22;
            	        }
            	    } while (true);

            	    otherlv_22=(Token)match(input,21,FOLLOW_21_in_ruleGroup3455); 

            	        	newLeafNode(otherlv_22, grammarAccess.getGroupAccess().getRightSquareBracketKeyword_1_5_1_2());
            	        

            	    }


            	    }


            	    }

            	     
            	    	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getGroupAccess().getUnorderedGroup_1());
            	    	 				

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    if ( cnt23 >= 1 ) break loop23;
                        EarlyExitException eee =
                            new EarlyExitException(23, input);
                        throw eee;
                }
                cnt23++;
            } while (true);

            if ( ! getUnorderedGroupHelper().canLeave(grammarAccess.getGroupAccess().getUnorderedGroup_1()) ) {
                throw new FailedPredicateException(input, "ruleGroup", "getUnorderedGroupHelper().canLeave(grammarAccess.getGroupAccess().getUnorderedGroup_1())");
            }

            }


            }

             
            	  getUnorderedGroupHelper().leave(grammarAccess.getGroupAccess().getUnorderedGroup_1());
            	

            }


            }


            }

             leaveRule(); 
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleGroup"


    // $ANTLR start "entryRuleImage"
    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1482:1: entryRuleImage returns [EObject current=null] : iv_ruleImage= ruleImage EOF ;
    public final EObject entryRuleImage() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleImage = null;


        try {
            // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1483:2: (iv_ruleImage= ruleImage EOF )
            // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1484:2: iv_ruleImage= ruleImage EOF
            {
             newCompositeNode(grammarAccess.getImageRule()); 
            pushFollow(FOLLOW_ruleImage_in_entryRuleImage3539);
            iv_ruleImage=ruleImage();

            state._fsp--;

             current =iv_ruleImage; 
            match(input,EOF,FOLLOW_EOF_in_entryRuleImage3549); 

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleImage"


    // $ANTLR start "ruleImage"
    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1491:1: ruleImage returns [EObject current=null] : (otherlv_0= 'Image' ( ( ( ( ({...}? => ( ({...}? => (otherlv_2= 'item=' ( (lv_item_3_0= ruleItemRef ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= 'label=' ( ( (lv_label_5_1= RULE_ID | lv_label_5_2= RULE_STRING ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= 'icon=' ( (lv_icon_7_0= ruleIcon ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_8= 'url=' ( (lv_url_9_0= RULE_STRING ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= 'refresh=' ( (lv_refresh_11_0= RULE_INT ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_12= 'labelcolor=[' ( ( (lv_LabelColor_13_0= ruleColorArray ) ) (otherlv_14= ',' ( (lv_LabelColor_15_0= ruleColorArray ) ) )* otherlv_16= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= 'valuecolor=[' ( ( (lv_ValueColor_18_0= ruleColorArray ) ) (otherlv_19= ',' ( (lv_ValueColor_20_0= ruleColorArray ) ) )* otherlv_21= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_22= 'iconcolor=[' ( ( (lv_IconColor_23_0= ruleColorArray ) ) (otherlv_24= ',' ( (lv_IconColor_25_0= ruleColorArray ) ) )* otherlv_26= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_27= 'visibility=[' ( ( (lv_Visibility_28_0= ruleVisibilityRule ) ) (otherlv_29= ',' ( (lv_Visibility_30_0= ruleVisibilityRule ) ) )* otherlv_31= ']' ) ) ) ) ) )+ {...}?) ) ) ) ;
    public final EObject ruleImage() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_2=null;
        Token otherlv_4=null;
        Token lv_label_5_1=null;
        Token lv_label_5_2=null;
        Token otherlv_6=null;
        Token otherlv_8=null;
        Token lv_url_9_0=null;
        Token otherlv_10=null;
        Token lv_refresh_11_0=null;
        Token otherlv_12=null;
        Token otherlv_14=null;
        Token otherlv_16=null;
        Token otherlv_17=null;
        Token otherlv_19=null;
        Token otherlv_21=null;
        Token otherlv_22=null;
        Token otherlv_24=null;
        Token otherlv_26=null;
        Token otherlv_27=null;
        Token otherlv_29=null;
        Token otherlv_31=null;
        AntlrDatatypeRuleToken lv_item_3_0 = null;

        AntlrDatatypeRuleToken lv_icon_7_0 = null;

        EObject lv_LabelColor_13_0 = null;

        EObject lv_LabelColor_15_0 = null;

        EObject lv_ValueColor_18_0 = null;

        EObject lv_ValueColor_20_0 = null;

        EObject lv_IconColor_23_0 = null;

        EObject lv_IconColor_25_0 = null;

        EObject lv_Visibility_28_0 = null;

        EObject lv_Visibility_30_0 = null;


         enterRule(); 
            
        try {
            // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1494:28: ( (otherlv_0= 'Image' ( ( ( ( ({...}? => ( ({...}? => (otherlv_2= 'item=' ( (lv_item_3_0= ruleItemRef ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= 'label=' ( ( (lv_label_5_1= RULE_ID | lv_label_5_2= RULE_STRING ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= 'icon=' ( (lv_icon_7_0= ruleIcon ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_8= 'url=' ( (lv_url_9_0= RULE_STRING ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= 'refresh=' ( (lv_refresh_11_0= RULE_INT ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_12= 'labelcolor=[' ( ( (lv_LabelColor_13_0= ruleColorArray ) ) (otherlv_14= ',' ( (lv_LabelColor_15_0= ruleColorArray ) ) )* otherlv_16= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= 'valuecolor=[' ( ( (lv_ValueColor_18_0= ruleColorArray ) ) (otherlv_19= ',' ( (lv_ValueColor_20_0= ruleColorArray ) ) )* otherlv_21= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_22= 'iconcolor=[' ( ( (lv_IconColor_23_0= ruleColorArray ) ) (otherlv_24= ',' ( (lv_IconColor_25_0= ruleColorArray ) ) )* otherlv_26= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_27= 'visibility=[' ( ( (lv_Visibility_28_0= ruleVisibilityRule ) ) (otherlv_29= ',' ( (lv_Visibility_30_0= ruleVisibilityRule ) ) )* otherlv_31= ']' ) ) ) ) ) )+ {...}?) ) ) ) )
            // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1495:1: (otherlv_0= 'Image' ( ( ( ( ({...}? => ( ({...}? => (otherlv_2= 'item=' ( (lv_item_3_0= ruleItemRef ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= 'label=' ( ( (lv_label_5_1= RULE_ID | lv_label_5_2= RULE_STRING ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= 'icon=' ( (lv_icon_7_0= ruleIcon ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_8= 'url=' ( (lv_url_9_0= RULE_STRING ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= 'refresh=' ( (lv_refresh_11_0= RULE_INT ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_12= 'labelcolor=[' ( ( (lv_LabelColor_13_0= ruleColorArray ) ) (otherlv_14= ',' ( (lv_LabelColor_15_0= ruleColorArray ) ) )* otherlv_16= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= 'valuecolor=[' ( ( (lv_ValueColor_18_0= ruleColorArray ) ) (otherlv_19= ',' ( (lv_ValueColor_20_0= ruleColorArray ) ) )* otherlv_21= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_22= 'iconcolor=[' ( ( (lv_IconColor_23_0= ruleColorArray ) ) (otherlv_24= ',' ( (lv_IconColor_25_0= ruleColorArray ) ) )* otherlv_26= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_27= 'visibility=[' ( ( (lv_Visibility_28_0= ruleVisibilityRule ) ) (otherlv_29= ',' ( (lv_Visibility_30_0= ruleVisibilityRule ) ) )* otherlv_31= ']' ) ) ) ) ) )+ {...}?) ) ) )
            {
            // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1495:1: (otherlv_0= 'Image' ( ( ( ( ({...}? => ( ({...}? => (otherlv_2= 'item=' ( (lv_item_3_0= ruleItemRef ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= 'label=' ( ( (lv_label_5_1= RULE_ID | lv_label_5_2= RULE_STRING ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= 'icon=' ( (lv_icon_7_0= ruleIcon ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_8= 'url=' ( (lv_url_9_0= RULE_STRING ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= 'refresh=' ( (lv_refresh_11_0= RULE_INT ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_12= 'labelcolor=[' ( ( (lv_LabelColor_13_0= ruleColorArray ) ) (otherlv_14= ',' ( (lv_LabelColor_15_0= ruleColorArray ) ) )* otherlv_16= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= 'valuecolor=[' ( ( (lv_ValueColor_18_0= ruleColorArray ) ) (otherlv_19= ',' ( (lv_ValueColor_20_0= ruleColorArray ) ) )* otherlv_21= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_22= 'iconcolor=[' ( ( (lv_IconColor_23_0= ruleColorArray ) ) (otherlv_24= ',' ( (lv_IconColor_25_0= ruleColorArray ) ) )* otherlv_26= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_27= 'visibility=[' ( ( (lv_Visibility_28_0= ruleVisibilityRule ) ) (otherlv_29= ',' ( (lv_Visibility_30_0= ruleVisibilityRule ) ) )* otherlv_31= ']' ) ) ) ) ) )+ {...}?) ) ) )
            // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1495:3: otherlv_0= 'Image' ( ( ( ( ({...}? => ( ({...}? => (otherlv_2= 'item=' ( (lv_item_3_0= ruleItemRef ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= 'label=' ( ( (lv_label_5_1= RULE_ID | lv_label_5_2= RULE_STRING ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= 'icon=' ( (lv_icon_7_0= ruleIcon ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_8= 'url=' ( (lv_url_9_0= RULE_STRING ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= 'refresh=' ( (lv_refresh_11_0= RULE_INT ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_12= 'labelcolor=[' ( ( (lv_LabelColor_13_0= ruleColorArray ) ) (otherlv_14= ',' ( (lv_LabelColor_15_0= ruleColorArray ) ) )* otherlv_16= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= 'valuecolor=[' ( ( (lv_ValueColor_18_0= ruleColorArray ) ) (otherlv_19= ',' ( (lv_ValueColor_20_0= ruleColorArray ) ) )* otherlv_21= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_22= 'iconcolor=[' ( ( (lv_IconColor_23_0= ruleColorArray ) ) (otherlv_24= ',' ( (lv_IconColor_25_0= ruleColorArray ) ) )* otherlv_26= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_27= 'visibility=[' ( ( (lv_Visibility_28_0= ruleVisibilityRule ) ) (otherlv_29= ',' ( (lv_Visibility_30_0= ruleVisibilityRule ) ) )* otherlv_31= ']' ) ) ) ) ) )+ {...}?) ) )
            {
            otherlv_0=(Token)match(input,26,FOLLOW_26_in_ruleImage3586); 

                	newLeafNode(otherlv_0, grammarAccess.getImageAccess().getImageKeyword_0());
                
            // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1499:1: ( ( ( ( ({...}? => ( ({...}? => (otherlv_2= 'item=' ( (lv_item_3_0= ruleItemRef ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= 'label=' ( ( (lv_label_5_1= RULE_ID | lv_label_5_2= RULE_STRING ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= 'icon=' ( (lv_icon_7_0= ruleIcon ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_8= 'url=' ( (lv_url_9_0= RULE_STRING ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= 'refresh=' ( (lv_refresh_11_0= RULE_INT ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_12= 'labelcolor=[' ( ( (lv_LabelColor_13_0= ruleColorArray ) ) (otherlv_14= ',' ( (lv_LabelColor_15_0= ruleColorArray ) ) )* otherlv_16= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= 'valuecolor=[' ( ( (lv_ValueColor_18_0= ruleColorArray ) ) (otherlv_19= ',' ( (lv_ValueColor_20_0= ruleColorArray ) ) )* otherlv_21= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_22= 'iconcolor=[' ( ( (lv_IconColor_23_0= ruleColorArray ) ) (otherlv_24= ',' ( (lv_IconColor_25_0= ruleColorArray ) ) )* otherlv_26= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_27= 'visibility=[' ( ( (lv_Visibility_28_0= ruleVisibilityRule ) ) (otherlv_29= ',' ( (lv_Visibility_30_0= ruleVisibilityRule ) ) )* otherlv_31= ']' ) ) ) ) ) )+ {...}?) ) )
            // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1501:1: ( ( ( ({...}? => ( ({...}? => (otherlv_2= 'item=' ( (lv_item_3_0= ruleItemRef ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= 'label=' ( ( (lv_label_5_1= RULE_ID | lv_label_5_2= RULE_STRING ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= 'icon=' ( (lv_icon_7_0= ruleIcon ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_8= 'url=' ( (lv_url_9_0= RULE_STRING ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= 'refresh=' ( (lv_refresh_11_0= RULE_INT ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_12= 'labelcolor=[' ( ( (lv_LabelColor_13_0= ruleColorArray ) ) (otherlv_14= ',' ( (lv_LabelColor_15_0= ruleColorArray ) ) )* otherlv_16= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= 'valuecolor=[' ( ( (lv_ValueColor_18_0= ruleColorArray ) ) (otherlv_19= ',' ( (lv_ValueColor_20_0= ruleColorArray ) ) )* otherlv_21= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_22= 'iconcolor=[' ( ( (lv_IconColor_23_0= ruleColorArray ) ) (otherlv_24= ',' ( (lv_IconColor_25_0= ruleColorArray ) ) )* otherlv_26= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_27= 'visibility=[' ( ( (lv_Visibility_28_0= ruleVisibilityRule ) ) (otherlv_29= ',' ( (lv_Visibility_30_0= ruleVisibilityRule ) ) )* otherlv_31= ']' ) ) ) ) ) )+ {...}?) )
            {
            // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1501:1: ( ( ( ({...}? => ( ({...}? => (otherlv_2= 'item=' ( (lv_item_3_0= ruleItemRef ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= 'label=' ( ( (lv_label_5_1= RULE_ID | lv_label_5_2= RULE_STRING ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= 'icon=' ( (lv_icon_7_0= ruleIcon ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_8= 'url=' ( (lv_url_9_0= RULE_STRING ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= 'refresh=' ( (lv_refresh_11_0= RULE_INT ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_12= 'labelcolor=[' ( ( (lv_LabelColor_13_0= ruleColorArray ) ) (otherlv_14= ',' ( (lv_LabelColor_15_0= ruleColorArray ) ) )* otherlv_16= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= 'valuecolor=[' ( ( (lv_ValueColor_18_0= ruleColorArray ) ) (otherlv_19= ',' ( (lv_ValueColor_20_0= ruleColorArray ) ) )* otherlv_21= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_22= 'iconcolor=[' ( ( (lv_IconColor_23_0= ruleColorArray ) ) (otherlv_24= ',' ( (lv_IconColor_25_0= ruleColorArray ) ) )* otherlv_26= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_27= 'visibility=[' ( ( (lv_Visibility_28_0= ruleVisibilityRule ) ) (otherlv_29= ',' ( (lv_Visibility_30_0= ruleVisibilityRule ) ) )* otherlv_31= ']' ) ) ) ) ) )+ {...}?) )
            // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1502:2: ( ( ({...}? => ( ({...}? => (otherlv_2= 'item=' ( (lv_item_3_0= ruleItemRef ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= 'label=' ( ( (lv_label_5_1= RULE_ID | lv_label_5_2= RULE_STRING ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= 'icon=' ( (lv_icon_7_0= ruleIcon ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_8= 'url=' ( (lv_url_9_0= RULE_STRING ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= 'refresh=' ( (lv_refresh_11_0= RULE_INT ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_12= 'labelcolor=[' ( ( (lv_LabelColor_13_0= ruleColorArray ) ) (otherlv_14= ',' ( (lv_LabelColor_15_0= ruleColorArray ) ) )* otherlv_16= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= 'valuecolor=[' ( ( (lv_ValueColor_18_0= ruleColorArray ) ) (otherlv_19= ',' ( (lv_ValueColor_20_0= ruleColorArray ) ) )* otherlv_21= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_22= 'iconcolor=[' ( ( (lv_IconColor_23_0= ruleColorArray ) ) (otherlv_24= ',' ( (lv_IconColor_25_0= ruleColorArray ) ) )* otherlv_26= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_27= 'visibility=[' ( ( (lv_Visibility_28_0= ruleVisibilityRule ) ) (otherlv_29= ',' ( (lv_Visibility_30_0= ruleVisibilityRule ) ) )* otherlv_31= ']' ) ) ) ) ) )+ {...}?)
            {
             
            	  getUnorderedGroupHelper().enter(grammarAccess.getImageAccess().getUnorderedGroup_1());
            	
            // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1505:2: ( ( ({...}? => ( ({...}? => (otherlv_2= 'item=' ( (lv_item_3_0= ruleItemRef ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= 'label=' ( ( (lv_label_5_1= RULE_ID | lv_label_5_2= RULE_STRING ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= 'icon=' ( (lv_icon_7_0= ruleIcon ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_8= 'url=' ( (lv_url_9_0= RULE_STRING ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= 'refresh=' ( (lv_refresh_11_0= RULE_INT ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_12= 'labelcolor=[' ( ( (lv_LabelColor_13_0= ruleColorArray ) ) (otherlv_14= ',' ( (lv_LabelColor_15_0= ruleColorArray ) ) )* otherlv_16= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= 'valuecolor=[' ( ( (lv_ValueColor_18_0= ruleColorArray ) ) (otherlv_19= ',' ( (lv_ValueColor_20_0= ruleColorArray ) ) )* otherlv_21= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_22= 'iconcolor=[' ( ( (lv_IconColor_23_0= ruleColorArray ) ) (otherlv_24= ',' ( (lv_IconColor_25_0= ruleColorArray ) ) )* otherlv_26= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_27= 'visibility=[' ( ( (lv_Visibility_28_0= ruleVisibilityRule ) ) (otherlv_29= ',' ( (lv_Visibility_30_0= ruleVisibilityRule ) ) )* otherlv_31= ']' ) ) ) ) ) )+ {...}?)
            // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1506:3: ( ({...}? => ( ({...}? => (otherlv_2= 'item=' ( (lv_item_3_0= ruleItemRef ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= 'label=' ( ( (lv_label_5_1= RULE_ID | lv_label_5_2= RULE_STRING ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= 'icon=' ( (lv_icon_7_0= ruleIcon ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_8= 'url=' ( (lv_url_9_0= RULE_STRING ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= 'refresh=' ( (lv_refresh_11_0= RULE_INT ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_12= 'labelcolor=[' ( ( (lv_LabelColor_13_0= ruleColorArray ) ) (otherlv_14= ',' ( (lv_LabelColor_15_0= ruleColorArray ) ) )* otherlv_16= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= 'valuecolor=[' ( ( (lv_ValueColor_18_0= ruleColorArray ) ) (otherlv_19= ',' ( (lv_ValueColor_20_0= ruleColorArray ) ) )* otherlv_21= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_22= 'iconcolor=[' ( ( (lv_IconColor_23_0= ruleColorArray ) ) (otherlv_24= ',' ( (lv_IconColor_25_0= ruleColorArray ) ) )* otherlv_26= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_27= 'visibility=[' ( ( (lv_Visibility_28_0= ruleVisibilityRule ) ) (otherlv_29= ',' ( (lv_Visibility_30_0= ruleVisibilityRule ) ) )* otherlv_31= ']' ) ) ) ) ) )+ {...}?
            {
            // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1506:3: ( ({...}? => ( ({...}? => (otherlv_2= 'item=' ( (lv_item_3_0= ruleItemRef ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= 'label=' ( ( (lv_label_5_1= RULE_ID | lv_label_5_2= RULE_STRING ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= 'icon=' ( (lv_icon_7_0= ruleIcon ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_8= 'url=' ( (lv_url_9_0= RULE_STRING ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= 'refresh=' ( (lv_refresh_11_0= RULE_INT ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_12= 'labelcolor=[' ( ( (lv_LabelColor_13_0= ruleColorArray ) ) (otherlv_14= ',' ( (lv_LabelColor_15_0= ruleColorArray ) ) )* otherlv_16= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= 'valuecolor=[' ( ( (lv_ValueColor_18_0= ruleColorArray ) ) (otherlv_19= ',' ( (lv_ValueColor_20_0= ruleColorArray ) ) )* otherlv_21= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_22= 'iconcolor=[' ( ( (lv_IconColor_23_0= ruleColorArray ) ) (otherlv_24= ',' ( (lv_IconColor_25_0= ruleColorArray ) ) )* otherlv_26= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_27= 'visibility=[' ( ( (lv_Visibility_28_0= ruleVisibilityRule ) ) (otherlv_29= ',' ( (lv_Visibility_30_0= ruleVisibilityRule ) ) )* otherlv_31= ']' ) ) ) ) ) )+
            int cnt29=0;
            loop29:
            do {
                int alt29=10;
                alt29 = dfa29.predict(input);
                switch (alt29) {
            	case 1 :
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1508:4: ({...}? => ( ({...}? => (otherlv_2= 'item=' ( (lv_item_3_0= ruleItemRef ) ) ) ) ) )
            	    {
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1508:4: ({...}? => ( ({...}? => (otherlv_2= 'item=' ( (lv_item_3_0= ruleItemRef ) ) ) ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1509:5: {...}? => ( ({...}? => (otherlv_2= 'item=' ( (lv_item_3_0= ruleItemRef ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getImageAccess().getUnorderedGroup_1(), 0) ) {
            	        throw new FailedPredicateException(input, "ruleImage", "getUnorderedGroupHelper().canSelect(grammarAccess.getImageAccess().getUnorderedGroup_1(), 0)");
            	    }
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1509:102: ( ({...}? => (otherlv_2= 'item=' ( (lv_item_3_0= ruleItemRef ) ) ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1510:6: ({...}? => (otherlv_2= 'item=' ( (lv_item_3_0= ruleItemRef ) ) ) )
            	    {
            	     
            	    	 				  getUnorderedGroupHelper().select(grammarAccess.getImageAccess().getUnorderedGroup_1(), 0);
            	    	 				
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1513:6: ({...}? => (otherlv_2= 'item=' ( (lv_item_3_0= ruleItemRef ) ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1513:7: {...}? => (otherlv_2= 'item=' ( (lv_item_3_0= ruleItemRef ) ) )
            	    {
            	    if ( !((true)) ) {
            	        throw new FailedPredicateException(input, "ruleImage", "true");
            	    }
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1513:16: (otherlv_2= 'item=' ( (lv_item_3_0= ruleItemRef ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1513:18: otherlv_2= 'item=' ( (lv_item_3_0= ruleItemRef ) )
            	    {
            	    otherlv_2=(Token)match(input,18,FOLLOW_18_in_ruleImage3644); 

            	        	newLeafNode(otherlv_2, grammarAccess.getImageAccess().getItemKeyword_1_0_0());
            	        
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1517:1: ( (lv_item_3_0= ruleItemRef ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1518:1: (lv_item_3_0= ruleItemRef )
            	    {
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1518:1: (lv_item_3_0= ruleItemRef )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1519:3: lv_item_3_0= ruleItemRef
            	    {
            	     
            	    	        newCompositeNode(grammarAccess.getImageAccess().getItemItemRefParserRuleCall_1_0_1_0()); 
            	    	    
            	    pushFollow(FOLLOW_ruleItemRef_in_ruleImage3665);
            	    lv_item_3_0=ruleItemRef();

            	    state._fsp--;


            	    	        if (current==null) {
            	    	            current = createModelElementForParent(grammarAccess.getImageRule());
            	    	        }
            	           		set(
            	           			current, 
            	           			"item",
            	            		lv_item_3_0, 
            	            		"ItemRef");
            	    	        afterParserOrEnumRuleCall();
            	    	    

            	    }


            	    }


            	    }


            	    }

            	     
            	    	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getImageAccess().getUnorderedGroup_1());
            	    	 				

            	    }


            	    }


            	    }
            	    break;
            	case 2 :
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1542:4: ({...}? => ( ({...}? => (otherlv_4= 'label=' ( ( (lv_label_5_1= RULE_ID | lv_label_5_2= RULE_STRING ) ) ) ) ) ) )
            	    {
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1542:4: ({...}? => ( ({...}? => (otherlv_4= 'label=' ( ( (lv_label_5_1= RULE_ID | lv_label_5_2= RULE_STRING ) ) ) ) ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1543:5: {...}? => ( ({...}? => (otherlv_4= 'label=' ( ( (lv_label_5_1= RULE_ID | lv_label_5_2= RULE_STRING ) ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getImageAccess().getUnorderedGroup_1(), 1) ) {
            	        throw new FailedPredicateException(input, "ruleImage", "getUnorderedGroupHelper().canSelect(grammarAccess.getImageAccess().getUnorderedGroup_1(), 1)");
            	    }
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1543:102: ( ({...}? => (otherlv_4= 'label=' ( ( (lv_label_5_1= RULE_ID | lv_label_5_2= RULE_STRING ) ) ) ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1544:6: ({...}? => (otherlv_4= 'label=' ( ( (lv_label_5_1= RULE_ID | lv_label_5_2= RULE_STRING ) ) ) ) )
            	    {
            	     
            	    	 				  getUnorderedGroupHelper().select(grammarAccess.getImageAccess().getUnorderedGroup_1(), 1);
            	    	 				
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1547:6: ({...}? => (otherlv_4= 'label=' ( ( (lv_label_5_1= RULE_ID | lv_label_5_2= RULE_STRING ) ) ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1547:7: {...}? => (otherlv_4= 'label=' ( ( (lv_label_5_1= RULE_ID | lv_label_5_2= RULE_STRING ) ) ) )
            	    {
            	    if ( !((true)) ) {
            	        throw new FailedPredicateException(input, "ruleImage", "true");
            	    }
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1547:16: (otherlv_4= 'label=' ( ( (lv_label_5_1= RULE_ID | lv_label_5_2= RULE_STRING ) ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1547:18: otherlv_4= 'label=' ( ( (lv_label_5_1= RULE_ID | lv_label_5_2= RULE_STRING ) ) )
            	    {
            	    otherlv_4=(Token)match(input,13,FOLLOW_13_in_ruleImage3733); 

            	        	newLeafNode(otherlv_4, grammarAccess.getImageAccess().getLabelKeyword_1_1_0());
            	        
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1551:1: ( ( (lv_label_5_1= RULE_ID | lv_label_5_2= RULE_STRING ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1552:1: ( (lv_label_5_1= RULE_ID | lv_label_5_2= RULE_STRING ) )
            	    {
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1552:1: ( (lv_label_5_1= RULE_ID | lv_label_5_2= RULE_STRING ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1553:1: (lv_label_5_1= RULE_ID | lv_label_5_2= RULE_STRING )
            	    {
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1553:1: (lv_label_5_1= RULE_ID | lv_label_5_2= RULE_STRING )
            	    int alt24=2;
            	    int LA24_0 = input.LA(1);

            	    if ( (LA24_0==RULE_ID) ) {
            	        alt24=1;
            	    }
            	    else if ( (LA24_0==RULE_STRING) ) {
            	        alt24=2;
            	    }
            	    else {
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 24, 0, input);

            	        throw nvae;
            	    }
            	    switch (alt24) {
            	        case 1 :
            	            // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1554:3: lv_label_5_1= RULE_ID
            	            {
            	            lv_label_5_1=(Token)match(input,RULE_ID,FOLLOW_RULE_ID_in_ruleImage3752); 

            	            			newLeafNode(lv_label_5_1, grammarAccess.getImageAccess().getLabelIDTerminalRuleCall_1_1_1_0_0()); 
            	            		

            	            	        if (current==null) {
            	            	            current = createModelElement(grammarAccess.getImageRule());
            	            	        }
            	                   		setWithLastConsumed(
            	                   			current, 
            	                   			"label",
            	                    		lv_label_5_1, 
            	                    		"ID");
            	            	    

            	            }
            	            break;
            	        case 2 :
            	            // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1569:8: lv_label_5_2= RULE_STRING
            	            {
            	            lv_label_5_2=(Token)match(input,RULE_STRING,FOLLOW_RULE_STRING_in_ruleImage3772); 

            	            			newLeafNode(lv_label_5_2, grammarAccess.getImageAccess().getLabelSTRINGTerminalRuleCall_1_1_1_0_1()); 
            	            		

            	            	        if (current==null) {
            	            	            current = createModelElement(grammarAccess.getImageRule());
            	            	        }
            	                   		setWithLastConsumed(
            	                   			current, 
            	                   			"label",
            	                    		lv_label_5_2, 
            	                    		"STRING");
            	            	    

            	            }
            	            break;

            	    }


            	    }


            	    }


            	    }


            	    }

            	     
            	    	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getImageAccess().getUnorderedGroup_1());
            	    	 				

            	    }


            	    }


            	    }
            	    break;
            	case 3 :
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1594:4: ({...}? => ( ({...}? => (otherlv_6= 'icon=' ( (lv_icon_7_0= ruleIcon ) ) ) ) ) )
            	    {
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1594:4: ({...}? => ( ({...}? => (otherlv_6= 'icon=' ( (lv_icon_7_0= ruleIcon ) ) ) ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1595:5: {...}? => ( ({...}? => (otherlv_6= 'icon=' ( (lv_icon_7_0= ruleIcon ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getImageAccess().getUnorderedGroup_1(), 2) ) {
            	        throw new FailedPredicateException(input, "ruleImage", "getUnorderedGroupHelper().canSelect(grammarAccess.getImageAccess().getUnorderedGroup_1(), 2)");
            	    }
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1595:102: ( ({...}? => (otherlv_6= 'icon=' ( (lv_icon_7_0= ruleIcon ) ) ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1596:6: ({...}? => (otherlv_6= 'icon=' ( (lv_icon_7_0= ruleIcon ) ) ) )
            	    {
            	     
            	    	 				  getUnorderedGroupHelper().select(grammarAccess.getImageAccess().getUnorderedGroup_1(), 2);
            	    	 				
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1599:6: ({...}? => (otherlv_6= 'icon=' ( (lv_icon_7_0= ruleIcon ) ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1599:7: {...}? => (otherlv_6= 'icon=' ( (lv_icon_7_0= ruleIcon ) ) )
            	    {
            	    if ( !((true)) ) {
            	        throw new FailedPredicateException(input, "ruleImage", "true");
            	    }
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1599:16: (otherlv_6= 'icon=' ( (lv_icon_7_0= ruleIcon ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1599:18: otherlv_6= 'icon=' ( (lv_icon_7_0= ruleIcon ) )
            	    {
            	    otherlv_6=(Token)match(input,14,FOLLOW_14_in_ruleImage3848); 

            	        	newLeafNode(otherlv_6, grammarAccess.getImageAccess().getIconKeyword_1_2_0());
            	        
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1603:1: ( (lv_icon_7_0= ruleIcon ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1604:1: (lv_icon_7_0= ruleIcon )
            	    {
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1604:1: (lv_icon_7_0= ruleIcon )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1605:3: lv_icon_7_0= ruleIcon
            	    {
            	     
            	    	        newCompositeNode(grammarAccess.getImageAccess().getIconIconParserRuleCall_1_2_1_0()); 
            	    	    
            	    pushFollow(FOLLOW_ruleIcon_in_ruleImage3869);
            	    lv_icon_7_0=ruleIcon();

            	    state._fsp--;


            	    	        if (current==null) {
            	    	            current = createModelElementForParent(grammarAccess.getImageRule());
            	    	        }
            	           		set(
            	           			current, 
            	           			"icon",
            	            		lv_icon_7_0, 
            	            		"Icon");
            	    	        afterParserOrEnumRuleCall();
            	    	    

            	    }


            	    }


            	    }


            	    }

            	     
            	    	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getImageAccess().getUnorderedGroup_1());
            	    	 				

            	    }


            	    }


            	    }
            	    break;
            	case 4 :
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1628:4: ({...}? => ( ({...}? => (otherlv_8= 'url=' ( (lv_url_9_0= RULE_STRING ) ) ) ) ) )
            	    {
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1628:4: ({...}? => ( ({...}? => (otherlv_8= 'url=' ( (lv_url_9_0= RULE_STRING ) ) ) ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1629:5: {...}? => ( ({...}? => (otherlv_8= 'url=' ( (lv_url_9_0= RULE_STRING ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getImageAccess().getUnorderedGroup_1(), 3) ) {
            	        throw new FailedPredicateException(input, "ruleImage", "getUnorderedGroupHelper().canSelect(grammarAccess.getImageAccess().getUnorderedGroup_1(), 3)");
            	    }
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1629:102: ( ({...}? => (otherlv_8= 'url=' ( (lv_url_9_0= RULE_STRING ) ) ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1630:6: ({...}? => (otherlv_8= 'url=' ( (lv_url_9_0= RULE_STRING ) ) ) )
            	    {
            	     
            	    	 				  getUnorderedGroupHelper().select(grammarAccess.getImageAccess().getUnorderedGroup_1(), 3);
            	    	 				
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1633:6: ({...}? => (otherlv_8= 'url=' ( (lv_url_9_0= RULE_STRING ) ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1633:7: {...}? => (otherlv_8= 'url=' ( (lv_url_9_0= RULE_STRING ) ) )
            	    {
            	    if ( !((true)) ) {
            	        throw new FailedPredicateException(input, "ruleImage", "true");
            	    }
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1633:16: (otherlv_8= 'url=' ( (lv_url_9_0= RULE_STRING ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1633:18: otherlv_8= 'url=' ( (lv_url_9_0= RULE_STRING ) )
            	    {
            	    otherlv_8=(Token)match(input,27,FOLLOW_27_in_ruleImage3937); 

            	        	newLeafNode(otherlv_8, grammarAccess.getImageAccess().getUrlKeyword_1_3_0());
            	        
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1637:1: ( (lv_url_9_0= RULE_STRING ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1638:1: (lv_url_9_0= RULE_STRING )
            	    {
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1638:1: (lv_url_9_0= RULE_STRING )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1639:3: lv_url_9_0= RULE_STRING
            	    {
            	    lv_url_9_0=(Token)match(input,RULE_STRING,FOLLOW_RULE_STRING_in_ruleImage3954); 

            	    			newLeafNode(lv_url_9_0, grammarAccess.getImageAccess().getUrlSTRINGTerminalRuleCall_1_3_1_0()); 
            	    		

            	    	        if (current==null) {
            	    	            current = createModelElement(grammarAccess.getImageRule());
            	    	        }
            	           		setWithLastConsumed(
            	           			current, 
            	           			"url",
            	            		lv_url_9_0, 
            	            		"STRING");
            	    	    

            	    }


            	    }


            	    }


            	    }

            	     
            	    	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getImageAccess().getUnorderedGroup_1());
            	    	 				

            	    }


            	    }


            	    }
            	    break;
            	case 5 :
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1662:4: ({...}? => ( ({...}? => (otherlv_10= 'refresh=' ( (lv_refresh_11_0= RULE_INT ) ) ) ) ) )
            	    {
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1662:4: ({...}? => ( ({...}? => (otherlv_10= 'refresh=' ( (lv_refresh_11_0= RULE_INT ) ) ) ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1663:5: {...}? => ( ({...}? => (otherlv_10= 'refresh=' ( (lv_refresh_11_0= RULE_INT ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getImageAccess().getUnorderedGroup_1(), 4) ) {
            	        throw new FailedPredicateException(input, "ruleImage", "getUnorderedGroupHelper().canSelect(grammarAccess.getImageAccess().getUnorderedGroup_1(), 4)");
            	    }
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1663:102: ( ({...}? => (otherlv_10= 'refresh=' ( (lv_refresh_11_0= RULE_INT ) ) ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1664:6: ({...}? => (otherlv_10= 'refresh=' ( (lv_refresh_11_0= RULE_INT ) ) ) )
            	    {
            	     
            	    	 				  getUnorderedGroupHelper().select(grammarAccess.getImageAccess().getUnorderedGroup_1(), 4);
            	    	 				
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1667:6: ({...}? => (otherlv_10= 'refresh=' ( (lv_refresh_11_0= RULE_INT ) ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1667:7: {...}? => (otherlv_10= 'refresh=' ( (lv_refresh_11_0= RULE_INT ) ) )
            	    {
            	    if ( !((true)) ) {
            	        throw new FailedPredicateException(input, "ruleImage", "true");
            	    }
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1667:16: (otherlv_10= 'refresh=' ( (lv_refresh_11_0= RULE_INT ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1667:18: otherlv_10= 'refresh=' ( (lv_refresh_11_0= RULE_INT ) )
            	    {
            	    otherlv_10=(Token)match(input,28,FOLLOW_28_in_ruleImage4027); 

            	        	newLeafNode(otherlv_10, grammarAccess.getImageAccess().getRefreshKeyword_1_4_0());
            	        
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1671:1: ( (lv_refresh_11_0= RULE_INT ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1672:1: (lv_refresh_11_0= RULE_INT )
            	    {
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1672:1: (lv_refresh_11_0= RULE_INT )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1673:3: lv_refresh_11_0= RULE_INT
            	    {
            	    lv_refresh_11_0=(Token)match(input,RULE_INT,FOLLOW_RULE_INT_in_ruleImage4044); 

            	    			newLeafNode(lv_refresh_11_0, grammarAccess.getImageAccess().getRefreshINTTerminalRuleCall_1_4_1_0()); 
            	    		

            	    	        if (current==null) {
            	    	            current = createModelElement(grammarAccess.getImageRule());
            	    	        }
            	           		setWithLastConsumed(
            	           			current, 
            	           			"refresh",
            	            		lv_refresh_11_0, 
            	            		"INT");
            	    	    

            	    }


            	    }


            	    }


            	    }

            	     
            	    	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getImageAccess().getUnorderedGroup_1());
            	    	 				

            	    }


            	    }


            	    }
            	    break;
            	case 6 :
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1696:4: ({...}? => ( ({...}? => (otherlv_12= 'labelcolor=[' ( ( (lv_LabelColor_13_0= ruleColorArray ) ) (otherlv_14= ',' ( (lv_LabelColor_15_0= ruleColorArray ) ) )* otherlv_16= ']' ) ) ) ) )
            	    {
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1696:4: ({...}? => ( ({...}? => (otherlv_12= 'labelcolor=[' ( ( (lv_LabelColor_13_0= ruleColorArray ) ) (otherlv_14= ',' ( (lv_LabelColor_15_0= ruleColorArray ) ) )* otherlv_16= ']' ) ) ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1697:5: {...}? => ( ({...}? => (otherlv_12= 'labelcolor=[' ( ( (lv_LabelColor_13_0= ruleColorArray ) ) (otherlv_14= ',' ( (lv_LabelColor_15_0= ruleColorArray ) ) )* otherlv_16= ']' ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getImageAccess().getUnorderedGroup_1(), 5) ) {
            	        throw new FailedPredicateException(input, "ruleImage", "getUnorderedGroupHelper().canSelect(grammarAccess.getImageAccess().getUnorderedGroup_1(), 5)");
            	    }
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1697:102: ( ({...}? => (otherlv_12= 'labelcolor=[' ( ( (lv_LabelColor_13_0= ruleColorArray ) ) (otherlv_14= ',' ( (lv_LabelColor_15_0= ruleColorArray ) ) )* otherlv_16= ']' ) ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1698:6: ({...}? => (otherlv_12= 'labelcolor=[' ( ( (lv_LabelColor_13_0= ruleColorArray ) ) (otherlv_14= ',' ( (lv_LabelColor_15_0= ruleColorArray ) ) )* otherlv_16= ']' ) ) )
            	    {
            	     
            	    	 				  getUnorderedGroupHelper().select(grammarAccess.getImageAccess().getUnorderedGroup_1(), 5);
            	    	 				
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1701:6: ({...}? => (otherlv_12= 'labelcolor=[' ( ( (lv_LabelColor_13_0= ruleColorArray ) ) (otherlv_14= ',' ( (lv_LabelColor_15_0= ruleColorArray ) ) )* otherlv_16= ']' ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1701:7: {...}? => (otherlv_12= 'labelcolor=[' ( ( (lv_LabelColor_13_0= ruleColorArray ) ) (otherlv_14= ',' ( (lv_LabelColor_15_0= ruleColorArray ) ) )* otherlv_16= ']' ) )
            	    {
            	    if ( !((true)) ) {
            	        throw new FailedPredicateException(input, "ruleImage", "true");
            	    }
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1701:16: (otherlv_12= 'labelcolor=[' ( ( (lv_LabelColor_13_0= ruleColorArray ) ) (otherlv_14= ',' ( (lv_LabelColor_15_0= ruleColorArray ) ) )* otherlv_16= ']' ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1701:18: otherlv_12= 'labelcolor=[' ( ( (lv_LabelColor_13_0= ruleColorArray ) ) (otherlv_14= ',' ( (lv_LabelColor_15_0= ruleColorArray ) ) )* otherlv_16= ']' )
            	    {
            	    otherlv_12=(Token)match(input,19,FOLLOW_19_in_ruleImage4117); 

            	        	newLeafNode(otherlv_12, grammarAccess.getImageAccess().getLabelcolorKeyword_1_5_0());
            	        
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1705:1: ( ( (lv_LabelColor_13_0= ruleColorArray ) ) (otherlv_14= ',' ( (lv_LabelColor_15_0= ruleColorArray ) ) )* otherlv_16= ']' )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1705:2: ( (lv_LabelColor_13_0= ruleColorArray ) ) (otherlv_14= ',' ( (lv_LabelColor_15_0= ruleColorArray ) ) )* otherlv_16= ']'
            	    {
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1705:2: ( (lv_LabelColor_13_0= ruleColorArray ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1706:1: (lv_LabelColor_13_0= ruleColorArray )
            	    {
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1706:1: (lv_LabelColor_13_0= ruleColorArray )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1707:3: lv_LabelColor_13_0= ruleColorArray
            	    {
            	     
            	    	        newCompositeNode(grammarAccess.getImageAccess().getLabelColorColorArrayParserRuleCall_1_5_1_0_0()); 
            	    	    
            	    pushFollow(FOLLOW_ruleColorArray_in_ruleImage4139);
            	    lv_LabelColor_13_0=ruleColorArray();

            	    state._fsp--;


            	    	        if (current==null) {
            	    	            current = createModelElementForParent(grammarAccess.getImageRule());
            	    	        }
            	           		add(
            	           			current, 
            	           			"LabelColor",
            	            		lv_LabelColor_13_0, 
            	            		"ColorArray");
            	    	        afterParserOrEnumRuleCall();
            	    	    

            	    }


            	    }

            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1723:2: (otherlv_14= ',' ( (lv_LabelColor_15_0= ruleColorArray ) ) )*
            	    loop25:
            	    do {
            	        int alt25=2;
            	        int LA25_0 = input.LA(1);

            	        if ( (LA25_0==20) ) {
            	            alt25=1;
            	        }


            	        switch (alt25) {
            	    	case 1 :
            	    	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1723:4: otherlv_14= ',' ( (lv_LabelColor_15_0= ruleColorArray ) )
            	    	    {
            	    	    otherlv_14=(Token)match(input,20,FOLLOW_20_in_ruleImage4152); 

            	    	        	newLeafNode(otherlv_14, grammarAccess.getImageAccess().getCommaKeyword_1_5_1_1_0());
            	    	        
            	    	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1727:1: ( (lv_LabelColor_15_0= ruleColorArray ) )
            	    	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1728:1: (lv_LabelColor_15_0= ruleColorArray )
            	    	    {
            	    	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1728:1: (lv_LabelColor_15_0= ruleColorArray )
            	    	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1729:3: lv_LabelColor_15_0= ruleColorArray
            	    	    {
            	    	     
            	    	    	        newCompositeNode(grammarAccess.getImageAccess().getLabelColorColorArrayParserRuleCall_1_5_1_1_1_0()); 
            	    	    	    
            	    	    pushFollow(FOLLOW_ruleColorArray_in_ruleImage4173);
            	    	    lv_LabelColor_15_0=ruleColorArray();

            	    	    state._fsp--;


            	    	    	        if (current==null) {
            	    	    	            current = createModelElementForParent(grammarAccess.getImageRule());
            	    	    	        }
            	    	           		add(
            	    	           			current, 
            	    	           			"LabelColor",
            	    	            		lv_LabelColor_15_0, 
            	    	            		"ColorArray");
            	    	    	        afterParserOrEnumRuleCall();
            	    	    	    

            	    	    }


            	    	    }


            	    	    }
            	    	    break;

            	    	default :
            	    	    break loop25;
            	        }
            	    } while (true);

            	    otherlv_16=(Token)match(input,21,FOLLOW_21_in_ruleImage4187); 

            	        	newLeafNode(otherlv_16, grammarAccess.getImageAccess().getRightSquareBracketKeyword_1_5_1_2());
            	        

            	    }


            	    }


            	    }

            	     
            	    	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getImageAccess().getUnorderedGroup_1());
            	    	 				

            	    }


            	    }


            	    }
            	    break;
            	case 7 :
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1756:4: ({...}? => ( ({...}? => (otherlv_17= 'valuecolor=[' ( ( (lv_ValueColor_18_0= ruleColorArray ) ) (otherlv_19= ',' ( (lv_ValueColor_20_0= ruleColorArray ) ) )* otherlv_21= ']' ) ) ) ) )
            	    {
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1756:4: ({...}? => ( ({...}? => (otherlv_17= 'valuecolor=[' ( ( (lv_ValueColor_18_0= ruleColorArray ) ) (otherlv_19= ',' ( (lv_ValueColor_20_0= ruleColorArray ) ) )* otherlv_21= ']' ) ) ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1757:5: {...}? => ( ({...}? => (otherlv_17= 'valuecolor=[' ( ( (lv_ValueColor_18_0= ruleColorArray ) ) (otherlv_19= ',' ( (lv_ValueColor_20_0= ruleColorArray ) ) )* otherlv_21= ']' ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getImageAccess().getUnorderedGroup_1(), 6) ) {
            	        throw new FailedPredicateException(input, "ruleImage", "getUnorderedGroupHelper().canSelect(grammarAccess.getImageAccess().getUnorderedGroup_1(), 6)");
            	    }
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1757:102: ( ({...}? => (otherlv_17= 'valuecolor=[' ( ( (lv_ValueColor_18_0= ruleColorArray ) ) (otherlv_19= ',' ( (lv_ValueColor_20_0= ruleColorArray ) ) )* otherlv_21= ']' ) ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1758:6: ({...}? => (otherlv_17= 'valuecolor=[' ( ( (lv_ValueColor_18_0= ruleColorArray ) ) (otherlv_19= ',' ( (lv_ValueColor_20_0= ruleColorArray ) ) )* otherlv_21= ']' ) ) )
            	    {
            	     
            	    	 				  getUnorderedGroupHelper().select(grammarAccess.getImageAccess().getUnorderedGroup_1(), 6);
            	    	 				
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1761:6: ({...}? => (otherlv_17= 'valuecolor=[' ( ( (lv_ValueColor_18_0= ruleColorArray ) ) (otherlv_19= ',' ( (lv_ValueColor_20_0= ruleColorArray ) ) )* otherlv_21= ']' ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1761:7: {...}? => (otherlv_17= 'valuecolor=[' ( ( (lv_ValueColor_18_0= ruleColorArray ) ) (otherlv_19= ',' ( (lv_ValueColor_20_0= ruleColorArray ) ) )* otherlv_21= ']' ) )
            	    {
            	    if ( !((true)) ) {
            	        throw new FailedPredicateException(input, "ruleImage", "true");
            	    }
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1761:16: (otherlv_17= 'valuecolor=[' ( ( (lv_ValueColor_18_0= ruleColorArray ) ) (otherlv_19= ',' ( (lv_ValueColor_20_0= ruleColorArray ) ) )* otherlv_21= ']' ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1761:18: otherlv_17= 'valuecolor=[' ( ( (lv_ValueColor_18_0= ruleColorArray ) ) (otherlv_19= ',' ( (lv_ValueColor_20_0= ruleColorArray ) ) )* otherlv_21= ']' )
            	    {
            	    otherlv_17=(Token)match(input,22,FOLLOW_22_in_ruleImage4256); 

            	        	newLeafNode(otherlv_17, grammarAccess.getImageAccess().getValuecolorKeyword_1_6_0());
            	        
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1765:1: ( ( (lv_ValueColor_18_0= ruleColorArray ) ) (otherlv_19= ',' ( (lv_ValueColor_20_0= ruleColorArray ) ) )* otherlv_21= ']' )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1765:2: ( (lv_ValueColor_18_0= ruleColorArray ) ) (otherlv_19= ',' ( (lv_ValueColor_20_0= ruleColorArray ) ) )* otherlv_21= ']'
            	    {
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1765:2: ( (lv_ValueColor_18_0= ruleColorArray ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1766:1: (lv_ValueColor_18_0= ruleColorArray )
            	    {
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1766:1: (lv_ValueColor_18_0= ruleColorArray )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1767:3: lv_ValueColor_18_0= ruleColorArray
            	    {
            	     
            	    	        newCompositeNode(grammarAccess.getImageAccess().getValueColorColorArrayParserRuleCall_1_6_1_0_0()); 
            	    	    
            	    pushFollow(FOLLOW_ruleColorArray_in_ruleImage4278);
            	    lv_ValueColor_18_0=ruleColorArray();

            	    state._fsp--;


            	    	        if (current==null) {
            	    	            current = createModelElementForParent(grammarAccess.getImageRule());
            	    	        }
            	           		add(
            	           			current, 
            	           			"ValueColor",
            	            		lv_ValueColor_18_0, 
            	            		"ColorArray");
            	    	        afterParserOrEnumRuleCall();
            	    	    

            	    }


            	    }

            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1783:2: (otherlv_19= ',' ( (lv_ValueColor_20_0= ruleColorArray ) ) )*
            	    loop26:
            	    do {
            	        int alt26=2;
            	        int LA26_0 = input.LA(1);

            	        if ( (LA26_0==20) ) {
            	            alt26=1;
            	        }


            	        switch (alt26) {
            	    	case 1 :
            	    	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1783:4: otherlv_19= ',' ( (lv_ValueColor_20_0= ruleColorArray ) )
            	    	    {
            	    	    otherlv_19=(Token)match(input,20,FOLLOW_20_in_ruleImage4291); 

            	    	        	newLeafNode(otherlv_19, grammarAccess.getImageAccess().getCommaKeyword_1_6_1_1_0());
            	    	        
            	    	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1787:1: ( (lv_ValueColor_20_0= ruleColorArray ) )
            	    	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1788:1: (lv_ValueColor_20_0= ruleColorArray )
            	    	    {
            	    	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1788:1: (lv_ValueColor_20_0= ruleColorArray )
            	    	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1789:3: lv_ValueColor_20_0= ruleColorArray
            	    	    {
            	    	     
            	    	    	        newCompositeNode(grammarAccess.getImageAccess().getValueColorColorArrayParserRuleCall_1_6_1_1_1_0()); 
            	    	    	    
            	    	    pushFollow(FOLLOW_ruleColorArray_in_ruleImage4312);
            	    	    lv_ValueColor_20_0=ruleColorArray();

            	    	    state._fsp--;


            	    	    	        if (current==null) {
            	    	    	            current = createModelElementForParent(grammarAccess.getImageRule());
            	    	    	        }
            	    	           		add(
            	    	           			current, 
            	    	           			"ValueColor",
            	    	            		lv_ValueColor_20_0, 
            	    	            		"ColorArray");
            	    	    	        afterParserOrEnumRuleCall();
            	    	    	    

            	    	    }


            	    	    }


            	    	    }
            	    	    break;

            	    	default :
            	    	    break loop26;
            	        }
            	    } while (true);

            	    otherlv_21=(Token)match(input,21,FOLLOW_21_in_ruleImage4326); 

            	        	newLeafNode(otherlv_21, grammarAccess.getImageAccess().getRightSquareBracketKeyword_1_6_1_2());
            	        

            	    }


            	    }


            	    }

            	     
            	    	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getImageAccess().getUnorderedGroup_1());
            	    	 				

            	    }


            	    }


            	    }
            	    break;
            	case 8 :
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1816:4: ({...}? => ( ({...}? => (otherlv_22= 'iconcolor=[' ( ( (lv_IconColor_23_0= ruleColorArray ) ) (otherlv_24= ',' ( (lv_IconColor_25_0= ruleColorArray ) ) )* otherlv_26= ']' ) ) ) ) )
            	    {
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1816:4: ({...}? => ( ({...}? => (otherlv_22= 'iconcolor=[' ( ( (lv_IconColor_23_0= ruleColorArray ) ) (otherlv_24= ',' ( (lv_IconColor_25_0= ruleColorArray ) ) )* otherlv_26= ']' ) ) ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1817:5: {...}? => ( ({...}? => (otherlv_22= 'iconcolor=[' ( ( (lv_IconColor_23_0= ruleColorArray ) ) (otherlv_24= ',' ( (lv_IconColor_25_0= ruleColorArray ) ) )* otherlv_26= ']' ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getImageAccess().getUnorderedGroup_1(), 7) ) {
            	        throw new FailedPredicateException(input, "ruleImage", "getUnorderedGroupHelper().canSelect(grammarAccess.getImageAccess().getUnorderedGroup_1(), 7)");
            	    }
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1817:102: ( ({...}? => (otherlv_22= 'iconcolor=[' ( ( (lv_IconColor_23_0= ruleColorArray ) ) (otherlv_24= ',' ( (lv_IconColor_25_0= ruleColorArray ) ) )* otherlv_26= ']' ) ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1818:6: ({...}? => (otherlv_22= 'iconcolor=[' ( ( (lv_IconColor_23_0= ruleColorArray ) ) (otherlv_24= ',' ( (lv_IconColor_25_0= ruleColorArray ) ) )* otherlv_26= ']' ) ) )
            	    {
            	     
            	    	 				  getUnorderedGroupHelper().select(grammarAccess.getImageAccess().getUnorderedGroup_1(), 7);
            	    	 				
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1821:6: ({...}? => (otherlv_22= 'iconcolor=[' ( ( (lv_IconColor_23_0= ruleColorArray ) ) (otherlv_24= ',' ( (lv_IconColor_25_0= ruleColorArray ) ) )* otherlv_26= ']' ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1821:7: {...}? => (otherlv_22= 'iconcolor=[' ( ( (lv_IconColor_23_0= ruleColorArray ) ) (otherlv_24= ',' ( (lv_IconColor_25_0= ruleColorArray ) ) )* otherlv_26= ']' ) )
            	    {
            	    if ( !((true)) ) {
            	        throw new FailedPredicateException(input, "ruleImage", "true");
            	    }
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1821:16: (otherlv_22= 'iconcolor=[' ( ( (lv_IconColor_23_0= ruleColorArray ) ) (otherlv_24= ',' ( (lv_IconColor_25_0= ruleColorArray ) ) )* otherlv_26= ']' ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1821:18: otherlv_22= 'iconcolor=[' ( ( (lv_IconColor_23_0= ruleColorArray ) ) (otherlv_24= ',' ( (lv_IconColor_25_0= ruleColorArray ) ) )* otherlv_26= ']' )
            	    {
            	    otherlv_22=(Token)match(input,29,FOLLOW_29_in_ruleImage4395); 

            	        	newLeafNode(otherlv_22, grammarAccess.getImageAccess().getIconcolorKeyword_1_7_0());
            	        
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1825:1: ( ( (lv_IconColor_23_0= ruleColorArray ) ) (otherlv_24= ',' ( (lv_IconColor_25_0= ruleColorArray ) ) )* otherlv_26= ']' )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1825:2: ( (lv_IconColor_23_0= ruleColorArray ) ) (otherlv_24= ',' ( (lv_IconColor_25_0= ruleColorArray ) ) )* otherlv_26= ']'
            	    {
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1825:2: ( (lv_IconColor_23_0= ruleColorArray ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1826:1: (lv_IconColor_23_0= ruleColorArray )
            	    {
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1826:1: (lv_IconColor_23_0= ruleColorArray )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1827:3: lv_IconColor_23_0= ruleColorArray
            	    {
            	     
            	    	        newCompositeNode(grammarAccess.getImageAccess().getIconColorColorArrayParserRuleCall_1_7_1_0_0()); 
            	    	    
            	    pushFollow(FOLLOW_ruleColorArray_in_ruleImage4417);
            	    lv_IconColor_23_0=ruleColorArray();

            	    state._fsp--;


            	    	        if (current==null) {
            	    	            current = createModelElementForParent(grammarAccess.getImageRule());
            	    	        }
            	           		add(
            	           			current, 
            	           			"IconColor",
            	            		lv_IconColor_23_0, 
            	            		"ColorArray");
            	    	        afterParserOrEnumRuleCall();
            	    	    

            	    }


            	    }

            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1843:2: (otherlv_24= ',' ( (lv_IconColor_25_0= ruleColorArray ) ) )*
            	    loop27:
            	    do {
            	        int alt27=2;
            	        int LA27_0 = input.LA(1);

            	        if ( (LA27_0==20) ) {
            	            alt27=1;
            	        }


            	        switch (alt27) {
            	    	case 1 :
            	    	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1843:4: otherlv_24= ',' ( (lv_IconColor_25_0= ruleColorArray ) )
            	    	    {
            	    	    otherlv_24=(Token)match(input,20,FOLLOW_20_in_ruleImage4430); 

            	    	        	newLeafNode(otherlv_24, grammarAccess.getImageAccess().getCommaKeyword_1_7_1_1_0());
            	    	        
            	    	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1847:1: ( (lv_IconColor_25_0= ruleColorArray ) )
            	    	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1848:1: (lv_IconColor_25_0= ruleColorArray )
            	    	    {
            	    	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1848:1: (lv_IconColor_25_0= ruleColorArray )
            	    	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1849:3: lv_IconColor_25_0= ruleColorArray
            	    	    {
            	    	     
            	    	    	        newCompositeNode(grammarAccess.getImageAccess().getIconColorColorArrayParserRuleCall_1_7_1_1_1_0()); 
            	    	    	    
            	    	    pushFollow(FOLLOW_ruleColorArray_in_ruleImage4451);
            	    	    lv_IconColor_25_0=ruleColorArray();

            	    	    state._fsp--;


            	    	    	        if (current==null) {
            	    	    	            current = createModelElementForParent(grammarAccess.getImageRule());
            	    	    	        }
            	    	           		add(
            	    	           			current, 
            	    	           			"IconColor",
            	    	            		lv_IconColor_25_0, 
            	    	            		"ColorArray");
            	    	    	        afterParserOrEnumRuleCall();
            	    	    	    

            	    	    }


            	    	    }


            	    	    }
            	    	    break;

            	    	default :
            	    	    break loop27;
            	        }
            	    } while (true);

            	    otherlv_26=(Token)match(input,21,FOLLOW_21_in_ruleImage4465); 

            	        	newLeafNode(otherlv_26, grammarAccess.getImageAccess().getRightSquareBracketKeyword_1_7_1_2());
            	        

            	    }


            	    }


            	    }

            	     
            	    	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getImageAccess().getUnorderedGroup_1());
            	    	 				

            	    }


            	    }


            	    }
            	    break;
            	case 9 :
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1876:4: ({...}? => ( ({...}? => (otherlv_27= 'visibility=[' ( ( (lv_Visibility_28_0= ruleVisibilityRule ) ) (otherlv_29= ',' ( (lv_Visibility_30_0= ruleVisibilityRule ) ) )* otherlv_31= ']' ) ) ) ) )
            	    {
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1876:4: ({...}? => ( ({...}? => (otherlv_27= 'visibility=[' ( ( (lv_Visibility_28_0= ruleVisibilityRule ) ) (otherlv_29= ',' ( (lv_Visibility_30_0= ruleVisibilityRule ) ) )* otherlv_31= ']' ) ) ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1877:5: {...}? => ( ({...}? => (otherlv_27= 'visibility=[' ( ( (lv_Visibility_28_0= ruleVisibilityRule ) ) (otherlv_29= ',' ( (lv_Visibility_30_0= ruleVisibilityRule ) ) )* otherlv_31= ']' ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getImageAccess().getUnorderedGroup_1(), 8) ) {
            	        throw new FailedPredicateException(input, "ruleImage", "getUnorderedGroupHelper().canSelect(grammarAccess.getImageAccess().getUnorderedGroup_1(), 8)");
            	    }
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1877:102: ( ({...}? => (otherlv_27= 'visibility=[' ( ( (lv_Visibility_28_0= ruleVisibilityRule ) ) (otherlv_29= ',' ( (lv_Visibility_30_0= ruleVisibilityRule ) ) )* otherlv_31= ']' ) ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1878:6: ({...}? => (otherlv_27= 'visibility=[' ( ( (lv_Visibility_28_0= ruleVisibilityRule ) ) (otherlv_29= ',' ( (lv_Visibility_30_0= ruleVisibilityRule ) ) )* otherlv_31= ']' ) ) )
            	    {
            	     
            	    	 				  getUnorderedGroupHelper().select(grammarAccess.getImageAccess().getUnorderedGroup_1(), 8);
            	    	 				
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1881:6: ({...}? => (otherlv_27= 'visibility=[' ( ( (lv_Visibility_28_0= ruleVisibilityRule ) ) (otherlv_29= ',' ( (lv_Visibility_30_0= ruleVisibilityRule ) ) )* otherlv_31= ']' ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1881:7: {...}? => (otherlv_27= 'visibility=[' ( ( (lv_Visibility_28_0= ruleVisibilityRule ) ) (otherlv_29= ',' ( (lv_Visibility_30_0= ruleVisibilityRule ) ) )* otherlv_31= ']' ) )
            	    {
            	    if ( !((true)) ) {
            	        throw new FailedPredicateException(input, "ruleImage", "true");
            	    }
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1881:16: (otherlv_27= 'visibility=[' ( ( (lv_Visibility_28_0= ruleVisibilityRule ) ) (otherlv_29= ',' ( (lv_Visibility_30_0= ruleVisibilityRule ) ) )* otherlv_31= ']' ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1881:18: otherlv_27= 'visibility=[' ( ( (lv_Visibility_28_0= ruleVisibilityRule ) ) (otherlv_29= ',' ( (lv_Visibility_30_0= ruleVisibilityRule ) ) )* otherlv_31= ']' )
            	    {
            	    otherlv_27=(Token)match(input,23,FOLLOW_23_in_ruleImage4534); 

            	        	newLeafNode(otherlv_27, grammarAccess.getImageAccess().getVisibilityKeyword_1_8_0());
            	        
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1885:1: ( ( (lv_Visibility_28_0= ruleVisibilityRule ) ) (otherlv_29= ',' ( (lv_Visibility_30_0= ruleVisibilityRule ) ) )* otherlv_31= ']' )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1885:2: ( (lv_Visibility_28_0= ruleVisibilityRule ) ) (otherlv_29= ',' ( (lv_Visibility_30_0= ruleVisibilityRule ) ) )* otherlv_31= ']'
            	    {
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1885:2: ( (lv_Visibility_28_0= ruleVisibilityRule ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1886:1: (lv_Visibility_28_0= ruleVisibilityRule )
            	    {
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1886:1: (lv_Visibility_28_0= ruleVisibilityRule )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1887:3: lv_Visibility_28_0= ruleVisibilityRule
            	    {
            	     
            	    	        newCompositeNode(grammarAccess.getImageAccess().getVisibilityVisibilityRuleParserRuleCall_1_8_1_0_0()); 
            	    	    
            	    pushFollow(FOLLOW_ruleVisibilityRule_in_ruleImage4556);
            	    lv_Visibility_28_0=ruleVisibilityRule();

            	    state._fsp--;


            	    	        if (current==null) {
            	    	            current = createModelElementForParent(grammarAccess.getImageRule());
            	    	        }
            	           		add(
            	           			current, 
            	           			"Visibility",
            	            		lv_Visibility_28_0, 
            	            		"VisibilityRule");
            	    	        afterParserOrEnumRuleCall();
            	    	    

            	    }


            	    }

            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1903:2: (otherlv_29= ',' ( (lv_Visibility_30_0= ruleVisibilityRule ) ) )*
            	    loop28:
            	    do {
            	        int alt28=2;
            	        int LA28_0 = input.LA(1);

            	        if ( (LA28_0==20) ) {
            	            alt28=1;
            	        }


            	        switch (alt28) {
            	    	case 1 :
            	    	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1903:4: otherlv_29= ',' ( (lv_Visibility_30_0= ruleVisibilityRule ) )
            	    	    {
            	    	    otherlv_29=(Token)match(input,20,FOLLOW_20_in_ruleImage4569); 

            	    	        	newLeafNode(otherlv_29, grammarAccess.getImageAccess().getCommaKeyword_1_8_1_1_0());
            	    	        
            	    	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1907:1: ( (lv_Visibility_30_0= ruleVisibilityRule ) )
            	    	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1908:1: (lv_Visibility_30_0= ruleVisibilityRule )
            	    	    {
            	    	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1908:1: (lv_Visibility_30_0= ruleVisibilityRule )
            	    	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1909:3: lv_Visibility_30_0= ruleVisibilityRule
            	    	    {
            	    	     
            	    	    	        newCompositeNode(grammarAccess.getImageAccess().getVisibilityVisibilityRuleParserRuleCall_1_8_1_1_1_0()); 
            	    	    	    
            	    	    pushFollow(FOLLOW_ruleVisibilityRule_in_ruleImage4590);
            	    	    lv_Visibility_30_0=ruleVisibilityRule();

            	    	    state._fsp--;


            	    	    	        if (current==null) {
            	    	    	            current = createModelElementForParent(grammarAccess.getImageRule());
            	    	    	        }
            	    	           		add(
            	    	           			current, 
            	    	           			"Visibility",
            	    	            		lv_Visibility_30_0, 
            	    	            		"VisibilityRule");
            	    	    	        afterParserOrEnumRuleCall();
            	    	    	    

            	    	    }


            	    	    }


            	    	    }
            	    	    break;

            	    	default :
            	    	    break loop28;
            	        }
            	    } while (true);

            	    otherlv_31=(Token)match(input,21,FOLLOW_21_in_ruleImage4604); 

            	        	newLeafNode(otherlv_31, grammarAccess.getImageAccess().getRightSquareBracketKeyword_1_8_1_2());
            	        

            	    }


            	    }


            	    }

            	     
            	    	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getImageAccess().getUnorderedGroup_1());
            	    	 				

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    if ( cnt29 >= 1 ) break loop29;
                        EarlyExitException eee =
                            new EarlyExitException(29, input);
                        throw eee;
                }
                cnt29++;
            } while (true);

            if ( ! getUnorderedGroupHelper().canLeave(grammarAccess.getImageAccess().getUnorderedGroup_1()) ) {
                throw new FailedPredicateException(input, "ruleImage", "getUnorderedGroupHelper().canLeave(grammarAccess.getImageAccess().getUnorderedGroup_1())");
            }

            }


            }

             
            	  getUnorderedGroupHelper().leave(grammarAccess.getImageAccess().getUnorderedGroup_1());
            	

            }


            }


            }

             leaveRule(); 
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleImage"


    // $ANTLR start "entryRuleVideo"
    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1952:1: entryRuleVideo returns [EObject current=null] : iv_ruleVideo= ruleVideo EOF ;
    public final EObject entryRuleVideo() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleVideo = null;


        try {
            // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1953:2: (iv_ruleVideo= ruleVideo EOF )
            // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1954:2: iv_ruleVideo= ruleVideo EOF
            {
             newCompositeNode(grammarAccess.getVideoRule()); 
            pushFollow(FOLLOW_ruleVideo_in_entryRuleVideo4688);
            iv_ruleVideo=ruleVideo();

            state._fsp--;

             current =iv_ruleVideo; 
            match(input,EOF,FOLLOW_EOF_in_entryRuleVideo4698); 

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleVideo"


    // $ANTLR start "ruleVideo"
    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1961:1: ruleVideo returns [EObject current=null] : (otherlv_0= 'Video' ( ( ( ( ({...}? => ( ({...}? => (otherlv_2= 'item=' ( (lv_item_3_0= ruleItemRef ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= 'label=' ( ( (lv_label_5_1= RULE_ID | lv_label_5_2= RULE_STRING ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= 'icon=' ( (lv_icon_7_0= ruleIcon ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_8= 'url=' ( (lv_url_9_0= RULE_STRING ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= 'encoding=' ( (lv_encoding_11_0= RULE_STRING ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_12= 'labelcolor=[' ( ( (lv_LabelColor_13_0= ruleColorArray ) ) (otherlv_14= ',' ( (lv_LabelColor_15_0= ruleColorArray ) ) )* otherlv_16= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= 'valuecolor=[' ( ( (lv_ValueColor_18_0= ruleColorArray ) ) (otherlv_19= ',' ( (lv_ValueColor_20_0= ruleColorArray ) ) )* otherlv_21= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_22= 'visibility=[' ( ( (lv_Visibility_23_0= ruleVisibilityRule ) ) (otherlv_24= ',' ( (lv_Visibility_25_0= ruleVisibilityRule ) ) )* otherlv_26= ']' ) ) ) ) ) )+ {...}?) ) ) ) ;
    public final EObject ruleVideo() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_2=null;
        Token otherlv_4=null;
        Token lv_label_5_1=null;
        Token lv_label_5_2=null;
        Token otherlv_6=null;
        Token otherlv_8=null;
        Token lv_url_9_0=null;
        Token otherlv_10=null;
        Token lv_encoding_11_0=null;
        Token otherlv_12=null;
        Token otherlv_14=null;
        Token otherlv_16=null;
        Token otherlv_17=null;
        Token otherlv_19=null;
        Token otherlv_21=null;
        Token otherlv_22=null;
        Token otherlv_24=null;
        Token otherlv_26=null;
        AntlrDatatypeRuleToken lv_item_3_0 = null;

        AntlrDatatypeRuleToken lv_icon_7_0 = null;

        EObject lv_LabelColor_13_0 = null;

        EObject lv_LabelColor_15_0 = null;

        EObject lv_ValueColor_18_0 = null;

        EObject lv_ValueColor_20_0 = null;

        EObject lv_Visibility_23_0 = null;

        EObject lv_Visibility_25_0 = null;


         enterRule(); 
            
        try {
            // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1964:28: ( (otherlv_0= 'Video' ( ( ( ( ({...}? => ( ({...}? => (otherlv_2= 'item=' ( (lv_item_3_0= ruleItemRef ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= 'label=' ( ( (lv_label_5_1= RULE_ID | lv_label_5_2= RULE_STRING ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= 'icon=' ( (lv_icon_7_0= ruleIcon ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_8= 'url=' ( (lv_url_9_0= RULE_STRING ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= 'encoding=' ( (lv_encoding_11_0= RULE_STRING ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_12= 'labelcolor=[' ( ( (lv_LabelColor_13_0= ruleColorArray ) ) (otherlv_14= ',' ( (lv_LabelColor_15_0= ruleColorArray ) ) )* otherlv_16= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= 'valuecolor=[' ( ( (lv_ValueColor_18_0= ruleColorArray ) ) (otherlv_19= ',' ( (lv_ValueColor_20_0= ruleColorArray ) ) )* otherlv_21= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_22= 'visibility=[' ( ( (lv_Visibility_23_0= ruleVisibilityRule ) ) (otherlv_24= ',' ( (lv_Visibility_25_0= ruleVisibilityRule ) ) )* otherlv_26= ']' ) ) ) ) ) )+ {...}?) ) ) ) )
            // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1965:1: (otherlv_0= 'Video' ( ( ( ( ({...}? => ( ({...}? => (otherlv_2= 'item=' ( (lv_item_3_0= ruleItemRef ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= 'label=' ( ( (lv_label_5_1= RULE_ID | lv_label_5_2= RULE_STRING ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= 'icon=' ( (lv_icon_7_0= ruleIcon ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_8= 'url=' ( (lv_url_9_0= RULE_STRING ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= 'encoding=' ( (lv_encoding_11_0= RULE_STRING ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_12= 'labelcolor=[' ( ( (lv_LabelColor_13_0= ruleColorArray ) ) (otherlv_14= ',' ( (lv_LabelColor_15_0= ruleColorArray ) ) )* otherlv_16= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= 'valuecolor=[' ( ( (lv_ValueColor_18_0= ruleColorArray ) ) (otherlv_19= ',' ( (lv_ValueColor_20_0= ruleColorArray ) ) )* otherlv_21= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_22= 'visibility=[' ( ( (lv_Visibility_23_0= ruleVisibilityRule ) ) (otherlv_24= ',' ( (lv_Visibility_25_0= ruleVisibilityRule ) ) )* otherlv_26= ']' ) ) ) ) ) )+ {...}?) ) ) )
            {
            // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1965:1: (otherlv_0= 'Video' ( ( ( ( ({...}? => ( ({...}? => (otherlv_2= 'item=' ( (lv_item_3_0= ruleItemRef ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= 'label=' ( ( (lv_label_5_1= RULE_ID | lv_label_5_2= RULE_STRING ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= 'icon=' ( (lv_icon_7_0= ruleIcon ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_8= 'url=' ( (lv_url_9_0= RULE_STRING ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= 'encoding=' ( (lv_encoding_11_0= RULE_STRING ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_12= 'labelcolor=[' ( ( (lv_LabelColor_13_0= ruleColorArray ) ) (otherlv_14= ',' ( (lv_LabelColor_15_0= ruleColorArray ) ) )* otherlv_16= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= 'valuecolor=[' ( ( (lv_ValueColor_18_0= ruleColorArray ) ) (otherlv_19= ',' ( (lv_ValueColor_20_0= ruleColorArray ) ) )* otherlv_21= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_22= 'visibility=[' ( ( (lv_Visibility_23_0= ruleVisibilityRule ) ) (otherlv_24= ',' ( (lv_Visibility_25_0= ruleVisibilityRule ) ) )* otherlv_26= ']' ) ) ) ) ) )+ {...}?) ) ) )
            // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1965:3: otherlv_0= 'Video' ( ( ( ( ({...}? => ( ({...}? => (otherlv_2= 'item=' ( (lv_item_3_0= ruleItemRef ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= 'label=' ( ( (lv_label_5_1= RULE_ID | lv_label_5_2= RULE_STRING ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= 'icon=' ( (lv_icon_7_0= ruleIcon ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_8= 'url=' ( (lv_url_9_0= RULE_STRING ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= 'encoding=' ( (lv_encoding_11_0= RULE_STRING ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_12= 'labelcolor=[' ( ( (lv_LabelColor_13_0= ruleColorArray ) ) (otherlv_14= ',' ( (lv_LabelColor_15_0= ruleColorArray ) ) )* otherlv_16= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= 'valuecolor=[' ( ( (lv_ValueColor_18_0= ruleColorArray ) ) (otherlv_19= ',' ( (lv_ValueColor_20_0= ruleColorArray ) ) )* otherlv_21= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_22= 'visibility=[' ( ( (lv_Visibility_23_0= ruleVisibilityRule ) ) (otherlv_24= ',' ( (lv_Visibility_25_0= ruleVisibilityRule ) ) )* otherlv_26= ']' ) ) ) ) ) )+ {...}?) ) )
            {
            otherlv_0=(Token)match(input,30,FOLLOW_30_in_ruleVideo4735); 

                	newLeafNode(otherlv_0, grammarAccess.getVideoAccess().getVideoKeyword_0());
                
            // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1969:1: ( ( ( ( ({...}? => ( ({...}? => (otherlv_2= 'item=' ( (lv_item_3_0= ruleItemRef ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= 'label=' ( ( (lv_label_5_1= RULE_ID | lv_label_5_2= RULE_STRING ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= 'icon=' ( (lv_icon_7_0= ruleIcon ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_8= 'url=' ( (lv_url_9_0= RULE_STRING ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= 'encoding=' ( (lv_encoding_11_0= RULE_STRING ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_12= 'labelcolor=[' ( ( (lv_LabelColor_13_0= ruleColorArray ) ) (otherlv_14= ',' ( (lv_LabelColor_15_0= ruleColorArray ) ) )* otherlv_16= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= 'valuecolor=[' ( ( (lv_ValueColor_18_0= ruleColorArray ) ) (otherlv_19= ',' ( (lv_ValueColor_20_0= ruleColorArray ) ) )* otherlv_21= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_22= 'visibility=[' ( ( (lv_Visibility_23_0= ruleVisibilityRule ) ) (otherlv_24= ',' ( (lv_Visibility_25_0= ruleVisibilityRule ) ) )* otherlv_26= ']' ) ) ) ) ) )+ {...}?) ) )
            // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1971:1: ( ( ( ({...}? => ( ({...}? => (otherlv_2= 'item=' ( (lv_item_3_0= ruleItemRef ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= 'label=' ( ( (lv_label_5_1= RULE_ID | lv_label_5_2= RULE_STRING ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= 'icon=' ( (lv_icon_7_0= ruleIcon ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_8= 'url=' ( (lv_url_9_0= RULE_STRING ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= 'encoding=' ( (lv_encoding_11_0= RULE_STRING ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_12= 'labelcolor=[' ( ( (lv_LabelColor_13_0= ruleColorArray ) ) (otherlv_14= ',' ( (lv_LabelColor_15_0= ruleColorArray ) ) )* otherlv_16= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= 'valuecolor=[' ( ( (lv_ValueColor_18_0= ruleColorArray ) ) (otherlv_19= ',' ( (lv_ValueColor_20_0= ruleColorArray ) ) )* otherlv_21= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_22= 'visibility=[' ( ( (lv_Visibility_23_0= ruleVisibilityRule ) ) (otherlv_24= ',' ( (lv_Visibility_25_0= ruleVisibilityRule ) ) )* otherlv_26= ']' ) ) ) ) ) )+ {...}?) )
            {
            // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1971:1: ( ( ( ({...}? => ( ({...}? => (otherlv_2= 'item=' ( (lv_item_3_0= ruleItemRef ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= 'label=' ( ( (lv_label_5_1= RULE_ID | lv_label_5_2= RULE_STRING ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= 'icon=' ( (lv_icon_7_0= ruleIcon ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_8= 'url=' ( (lv_url_9_0= RULE_STRING ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= 'encoding=' ( (lv_encoding_11_0= RULE_STRING ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_12= 'labelcolor=[' ( ( (lv_LabelColor_13_0= ruleColorArray ) ) (otherlv_14= ',' ( (lv_LabelColor_15_0= ruleColorArray ) ) )* otherlv_16= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= 'valuecolor=[' ( ( (lv_ValueColor_18_0= ruleColorArray ) ) (otherlv_19= ',' ( (lv_ValueColor_20_0= ruleColorArray ) ) )* otherlv_21= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_22= 'visibility=[' ( ( (lv_Visibility_23_0= ruleVisibilityRule ) ) (otherlv_24= ',' ( (lv_Visibility_25_0= ruleVisibilityRule ) ) )* otherlv_26= ']' ) ) ) ) ) )+ {...}?) )
            // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1972:2: ( ( ({...}? => ( ({...}? => (otherlv_2= 'item=' ( (lv_item_3_0= ruleItemRef ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= 'label=' ( ( (lv_label_5_1= RULE_ID | lv_label_5_2= RULE_STRING ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= 'icon=' ( (lv_icon_7_0= ruleIcon ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_8= 'url=' ( (lv_url_9_0= RULE_STRING ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= 'encoding=' ( (lv_encoding_11_0= RULE_STRING ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_12= 'labelcolor=[' ( ( (lv_LabelColor_13_0= ruleColorArray ) ) (otherlv_14= ',' ( (lv_LabelColor_15_0= ruleColorArray ) ) )* otherlv_16= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= 'valuecolor=[' ( ( (lv_ValueColor_18_0= ruleColorArray ) ) (otherlv_19= ',' ( (lv_ValueColor_20_0= ruleColorArray ) ) )* otherlv_21= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_22= 'visibility=[' ( ( (lv_Visibility_23_0= ruleVisibilityRule ) ) (otherlv_24= ',' ( (lv_Visibility_25_0= ruleVisibilityRule ) ) )* otherlv_26= ']' ) ) ) ) ) )+ {...}?)
            {
             
            	  getUnorderedGroupHelper().enter(grammarAccess.getVideoAccess().getUnorderedGroup_1());
            	
            // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1975:2: ( ( ({...}? => ( ({...}? => (otherlv_2= 'item=' ( (lv_item_3_0= ruleItemRef ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= 'label=' ( ( (lv_label_5_1= RULE_ID | lv_label_5_2= RULE_STRING ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= 'icon=' ( (lv_icon_7_0= ruleIcon ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_8= 'url=' ( (lv_url_9_0= RULE_STRING ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= 'encoding=' ( (lv_encoding_11_0= RULE_STRING ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_12= 'labelcolor=[' ( ( (lv_LabelColor_13_0= ruleColorArray ) ) (otherlv_14= ',' ( (lv_LabelColor_15_0= ruleColorArray ) ) )* otherlv_16= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= 'valuecolor=[' ( ( (lv_ValueColor_18_0= ruleColorArray ) ) (otherlv_19= ',' ( (lv_ValueColor_20_0= ruleColorArray ) ) )* otherlv_21= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_22= 'visibility=[' ( ( (lv_Visibility_23_0= ruleVisibilityRule ) ) (otherlv_24= ',' ( (lv_Visibility_25_0= ruleVisibilityRule ) ) )* otherlv_26= ']' ) ) ) ) ) )+ {...}?)
            // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1976:3: ( ({...}? => ( ({...}? => (otherlv_2= 'item=' ( (lv_item_3_0= ruleItemRef ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= 'label=' ( ( (lv_label_5_1= RULE_ID | lv_label_5_2= RULE_STRING ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= 'icon=' ( (lv_icon_7_0= ruleIcon ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_8= 'url=' ( (lv_url_9_0= RULE_STRING ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= 'encoding=' ( (lv_encoding_11_0= RULE_STRING ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_12= 'labelcolor=[' ( ( (lv_LabelColor_13_0= ruleColorArray ) ) (otherlv_14= ',' ( (lv_LabelColor_15_0= ruleColorArray ) ) )* otherlv_16= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= 'valuecolor=[' ( ( (lv_ValueColor_18_0= ruleColorArray ) ) (otherlv_19= ',' ( (lv_ValueColor_20_0= ruleColorArray ) ) )* otherlv_21= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_22= 'visibility=[' ( ( (lv_Visibility_23_0= ruleVisibilityRule ) ) (otherlv_24= ',' ( (lv_Visibility_25_0= ruleVisibilityRule ) ) )* otherlv_26= ']' ) ) ) ) ) )+ {...}?
            {
            // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1976:3: ( ({...}? => ( ({...}? => (otherlv_2= 'item=' ( (lv_item_3_0= ruleItemRef ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= 'label=' ( ( (lv_label_5_1= RULE_ID | lv_label_5_2= RULE_STRING ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= 'icon=' ( (lv_icon_7_0= ruleIcon ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_8= 'url=' ( (lv_url_9_0= RULE_STRING ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= 'encoding=' ( (lv_encoding_11_0= RULE_STRING ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_12= 'labelcolor=[' ( ( (lv_LabelColor_13_0= ruleColorArray ) ) (otherlv_14= ',' ( (lv_LabelColor_15_0= ruleColorArray ) ) )* otherlv_16= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= 'valuecolor=[' ( ( (lv_ValueColor_18_0= ruleColorArray ) ) (otherlv_19= ',' ( (lv_ValueColor_20_0= ruleColorArray ) ) )* otherlv_21= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_22= 'visibility=[' ( ( (lv_Visibility_23_0= ruleVisibilityRule ) ) (otherlv_24= ',' ( (lv_Visibility_25_0= ruleVisibilityRule ) ) )* otherlv_26= ']' ) ) ) ) ) )+
            int cnt34=0;
            loop34:
            do {
                int alt34=9;
                alt34 = dfa34.predict(input);
                switch (alt34) {
            	case 1 :
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1978:4: ({...}? => ( ({...}? => (otherlv_2= 'item=' ( (lv_item_3_0= ruleItemRef ) ) ) ) ) )
            	    {
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1978:4: ({...}? => ( ({...}? => (otherlv_2= 'item=' ( (lv_item_3_0= ruleItemRef ) ) ) ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1979:5: {...}? => ( ({...}? => (otherlv_2= 'item=' ( (lv_item_3_0= ruleItemRef ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getVideoAccess().getUnorderedGroup_1(), 0) ) {
            	        throw new FailedPredicateException(input, "ruleVideo", "getUnorderedGroupHelper().canSelect(grammarAccess.getVideoAccess().getUnorderedGroup_1(), 0)");
            	    }
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1979:102: ( ({...}? => (otherlv_2= 'item=' ( (lv_item_3_0= ruleItemRef ) ) ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1980:6: ({...}? => (otherlv_2= 'item=' ( (lv_item_3_0= ruleItemRef ) ) ) )
            	    {
            	     
            	    	 				  getUnorderedGroupHelper().select(grammarAccess.getVideoAccess().getUnorderedGroup_1(), 0);
            	    	 				
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1983:6: ({...}? => (otherlv_2= 'item=' ( (lv_item_3_0= ruleItemRef ) ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1983:7: {...}? => (otherlv_2= 'item=' ( (lv_item_3_0= ruleItemRef ) ) )
            	    {
            	    if ( !((true)) ) {
            	        throw new FailedPredicateException(input, "ruleVideo", "true");
            	    }
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1983:16: (otherlv_2= 'item=' ( (lv_item_3_0= ruleItemRef ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1983:18: otherlv_2= 'item=' ( (lv_item_3_0= ruleItemRef ) )
            	    {
            	    otherlv_2=(Token)match(input,18,FOLLOW_18_in_ruleVideo4793); 

            	        	newLeafNode(otherlv_2, grammarAccess.getVideoAccess().getItemKeyword_1_0_0());
            	        
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1987:1: ( (lv_item_3_0= ruleItemRef ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1988:1: (lv_item_3_0= ruleItemRef )
            	    {
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1988:1: (lv_item_3_0= ruleItemRef )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:1989:3: lv_item_3_0= ruleItemRef
            	    {
            	     
            	    	        newCompositeNode(grammarAccess.getVideoAccess().getItemItemRefParserRuleCall_1_0_1_0()); 
            	    	    
            	    pushFollow(FOLLOW_ruleItemRef_in_ruleVideo4814);
            	    lv_item_3_0=ruleItemRef();

            	    state._fsp--;


            	    	        if (current==null) {
            	    	            current = createModelElementForParent(grammarAccess.getVideoRule());
            	    	        }
            	           		set(
            	           			current, 
            	           			"item",
            	            		lv_item_3_0, 
            	            		"ItemRef");
            	    	        afterParserOrEnumRuleCall();
            	    	    

            	    }


            	    }


            	    }


            	    }

            	     
            	    	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getVideoAccess().getUnorderedGroup_1());
            	    	 				

            	    }


            	    }


            	    }
            	    break;
            	case 2 :
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2012:4: ({...}? => ( ({...}? => (otherlv_4= 'label=' ( ( (lv_label_5_1= RULE_ID | lv_label_5_2= RULE_STRING ) ) ) ) ) ) )
            	    {
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2012:4: ({...}? => ( ({...}? => (otherlv_4= 'label=' ( ( (lv_label_5_1= RULE_ID | lv_label_5_2= RULE_STRING ) ) ) ) ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2013:5: {...}? => ( ({...}? => (otherlv_4= 'label=' ( ( (lv_label_5_1= RULE_ID | lv_label_5_2= RULE_STRING ) ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getVideoAccess().getUnorderedGroup_1(), 1) ) {
            	        throw new FailedPredicateException(input, "ruleVideo", "getUnorderedGroupHelper().canSelect(grammarAccess.getVideoAccess().getUnorderedGroup_1(), 1)");
            	    }
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2013:102: ( ({...}? => (otherlv_4= 'label=' ( ( (lv_label_5_1= RULE_ID | lv_label_5_2= RULE_STRING ) ) ) ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2014:6: ({...}? => (otherlv_4= 'label=' ( ( (lv_label_5_1= RULE_ID | lv_label_5_2= RULE_STRING ) ) ) ) )
            	    {
            	     
            	    	 				  getUnorderedGroupHelper().select(grammarAccess.getVideoAccess().getUnorderedGroup_1(), 1);
            	    	 				
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2017:6: ({...}? => (otherlv_4= 'label=' ( ( (lv_label_5_1= RULE_ID | lv_label_5_2= RULE_STRING ) ) ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2017:7: {...}? => (otherlv_4= 'label=' ( ( (lv_label_5_1= RULE_ID | lv_label_5_2= RULE_STRING ) ) ) )
            	    {
            	    if ( !((true)) ) {
            	        throw new FailedPredicateException(input, "ruleVideo", "true");
            	    }
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2017:16: (otherlv_4= 'label=' ( ( (lv_label_5_1= RULE_ID | lv_label_5_2= RULE_STRING ) ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2017:18: otherlv_4= 'label=' ( ( (lv_label_5_1= RULE_ID | lv_label_5_2= RULE_STRING ) ) )
            	    {
            	    otherlv_4=(Token)match(input,13,FOLLOW_13_in_ruleVideo4882); 

            	        	newLeafNode(otherlv_4, grammarAccess.getVideoAccess().getLabelKeyword_1_1_0());
            	        
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2021:1: ( ( (lv_label_5_1= RULE_ID | lv_label_5_2= RULE_STRING ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2022:1: ( (lv_label_5_1= RULE_ID | lv_label_5_2= RULE_STRING ) )
            	    {
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2022:1: ( (lv_label_5_1= RULE_ID | lv_label_5_2= RULE_STRING ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2023:1: (lv_label_5_1= RULE_ID | lv_label_5_2= RULE_STRING )
            	    {
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2023:1: (lv_label_5_1= RULE_ID | lv_label_5_2= RULE_STRING )
            	    int alt30=2;
            	    int LA30_0 = input.LA(1);

            	    if ( (LA30_0==RULE_ID) ) {
            	        alt30=1;
            	    }
            	    else if ( (LA30_0==RULE_STRING) ) {
            	        alt30=2;
            	    }
            	    else {
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 30, 0, input);

            	        throw nvae;
            	    }
            	    switch (alt30) {
            	        case 1 :
            	            // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2024:3: lv_label_5_1= RULE_ID
            	            {
            	            lv_label_5_1=(Token)match(input,RULE_ID,FOLLOW_RULE_ID_in_ruleVideo4901); 

            	            			newLeafNode(lv_label_5_1, grammarAccess.getVideoAccess().getLabelIDTerminalRuleCall_1_1_1_0_0()); 
            	            		

            	            	        if (current==null) {
            	            	            current = createModelElement(grammarAccess.getVideoRule());
            	            	        }
            	                   		setWithLastConsumed(
            	                   			current, 
            	                   			"label",
            	                    		lv_label_5_1, 
            	                    		"ID");
            	            	    

            	            }
            	            break;
            	        case 2 :
            	            // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2039:8: lv_label_5_2= RULE_STRING
            	            {
            	            lv_label_5_2=(Token)match(input,RULE_STRING,FOLLOW_RULE_STRING_in_ruleVideo4921); 

            	            			newLeafNode(lv_label_5_2, grammarAccess.getVideoAccess().getLabelSTRINGTerminalRuleCall_1_1_1_0_1()); 
            	            		

            	            	        if (current==null) {
            	            	            current = createModelElement(grammarAccess.getVideoRule());
            	            	        }
            	                   		setWithLastConsumed(
            	                   			current, 
            	                   			"label",
            	                    		lv_label_5_2, 
            	                    		"STRING");
            	            	    

            	            }
            	            break;

            	    }


            	    }


            	    }


            	    }


            	    }

            	     
            	    	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getVideoAccess().getUnorderedGroup_1());
            	    	 				

            	    }


            	    }


            	    }
            	    break;
            	case 3 :
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2064:4: ({...}? => ( ({...}? => (otherlv_6= 'icon=' ( (lv_icon_7_0= ruleIcon ) ) ) ) ) )
            	    {
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2064:4: ({...}? => ( ({...}? => (otherlv_6= 'icon=' ( (lv_icon_7_0= ruleIcon ) ) ) ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2065:5: {...}? => ( ({...}? => (otherlv_6= 'icon=' ( (lv_icon_7_0= ruleIcon ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getVideoAccess().getUnorderedGroup_1(), 2) ) {
            	        throw new FailedPredicateException(input, "ruleVideo", "getUnorderedGroupHelper().canSelect(grammarAccess.getVideoAccess().getUnorderedGroup_1(), 2)");
            	    }
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2065:102: ( ({...}? => (otherlv_6= 'icon=' ( (lv_icon_7_0= ruleIcon ) ) ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2066:6: ({...}? => (otherlv_6= 'icon=' ( (lv_icon_7_0= ruleIcon ) ) ) )
            	    {
            	     
            	    	 				  getUnorderedGroupHelper().select(grammarAccess.getVideoAccess().getUnorderedGroup_1(), 2);
            	    	 				
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2069:6: ({...}? => (otherlv_6= 'icon=' ( (lv_icon_7_0= ruleIcon ) ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2069:7: {...}? => (otherlv_6= 'icon=' ( (lv_icon_7_0= ruleIcon ) ) )
            	    {
            	    if ( !((true)) ) {
            	        throw new FailedPredicateException(input, "ruleVideo", "true");
            	    }
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2069:16: (otherlv_6= 'icon=' ( (lv_icon_7_0= ruleIcon ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2069:18: otherlv_6= 'icon=' ( (lv_icon_7_0= ruleIcon ) )
            	    {
            	    otherlv_6=(Token)match(input,14,FOLLOW_14_in_ruleVideo4997); 

            	        	newLeafNode(otherlv_6, grammarAccess.getVideoAccess().getIconKeyword_1_2_0());
            	        
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2073:1: ( (lv_icon_7_0= ruleIcon ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2074:1: (lv_icon_7_0= ruleIcon )
            	    {
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2074:1: (lv_icon_7_0= ruleIcon )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2075:3: lv_icon_7_0= ruleIcon
            	    {
            	     
            	    	        newCompositeNode(grammarAccess.getVideoAccess().getIconIconParserRuleCall_1_2_1_0()); 
            	    	    
            	    pushFollow(FOLLOW_ruleIcon_in_ruleVideo5018);
            	    lv_icon_7_0=ruleIcon();

            	    state._fsp--;


            	    	        if (current==null) {
            	    	            current = createModelElementForParent(grammarAccess.getVideoRule());
            	    	        }
            	           		set(
            	           			current, 
            	           			"icon",
            	            		lv_icon_7_0, 
            	            		"Icon");
            	    	        afterParserOrEnumRuleCall();
            	    	    

            	    }


            	    }


            	    }


            	    }

            	     
            	    	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getVideoAccess().getUnorderedGroup_1());
            	    	 				

            	    }


            	    }


            	    }
            	    break;
            	case 4 :
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2098:4: ({...}? => ( ({...}? => (otherlv_8= 'url=' ( (lv_url_9_0= RULE_STRING ) ) ) ) ) )
            	    {
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2098:4: ({...}? => ( ({...}? => (otherlv_8= 'url=' ( (lv_url_9_0= RULE_STRING ) ) ) ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2099:5: {...}? => ( ({...}? => (otherlv_8= 'url=' ( (lv_url_9_0= RULE_STRING ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getVideoAccess().getUnorderedGroup_1(), 3) ) {
            	        throw new FailedPredicateException(input, "ruleVideo", "getUnorderedGroupHelper().canSelect(grammarAccess.getVideoAccess().getUnorderedGroup_1(), 3)");
            	    }
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2099:102: ( ({...}? => (otherlv_8= 'url=' ( (lv_url_9_0= RULE_STRING ) ) ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2100:6: ({...}? => (otherlv_8= 'url=' ( (lv_url_9_0= RULE_STRING ) ) ) )
            	    {
            	     
            	    	 				  getUnorderedGroupHelper().select(grammarAccess.getVideoAccess().getUnorderedGroup_1(), 3);
            	    	 				
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2103:6: ({...}? => (otherlv_8= 'url=' ( (lv_url_9_0= RULE_STRING ) ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2103:7: {...}? => (otherlv_8= 'url=' ( (lv_url_9_0= RULE_STRING ) ) )
            	    {
            	    if ( !((true)) ) {
            	        throw new FailedPredicateException(input, "ruleVideo", "true");
            	    }
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2103:16: (otherlv_8= 'url=' ( (lv_url_9_0= RULE_STRING ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2103:18: otherlv_8= 'url=' ( (lv_url_9_0= RULE_STRING ) )
            	    {
            	    otherlv_8=(Token)match(input,27,FOLLOW_27_in_ruleVideo5086); 

            	        	newLeafNode(otherlv_8, grammarAccess.getVideoAccess().getUrlKeyword_1_3_0());
            	        
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2107:1: ( (lv_url_9_0= RULE_STRING ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2108:1: (lv_url_9_0= RULE_STRING )
            	    {
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2108:1: (lv_url_9_0= RULE_STRING )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2109:3: lv_url_9_0= RULE_STRING
            	    {
            	    lv_url_9_0=(Token)match(input,RULE_STRING,FOLLOW_RULE_STRING_in_ruleVideo5103); 

            	    			newLeafNode(lv_url_9_0, grammarAccess.getVideoAccess().getUrlSTRINGTerminalRuleCall_1_3_1_0()); 
            	    		

            	    	        if (current==null) {
            	    	            current = createModelElement(grammarAccess.getVideoRule());
            	    	        }
            	           		setWithLastConsumed(
            	           			current, 
            	           			"url",
            	            		lv_url_9_0, 
            	            		"STRING");
            	    	    

            	    }


            	    }


            	    }


            	    }

            	     
            	    	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getVideoAccess().getUnorderedGroup_1());
            	    	 				

            	    }


            	    }


            	    }
            	    break;
            	case 5 :
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2132:4: ({...}? => ( ({...}? => (otherlv_10= 'encoding=' ( (lv_encoding_11_0= RULE_STRING ) ) ) ) ) )
            	    {
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2132:4: ({...}? => ( ({...}? => (otherlv_10= 'encoding=' ( (lv_encoding_11_0= RULE_STRING ) ) ) ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2133:5: {...}? => ( ({...}? => (otherlv_10= 'encoding=' ( (lv_encoding_11_0= RULE_STRING ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getVideoAccess().getUnorderedGroup_1(), 4) ) {
            	        throw new FailedPredicateException(input, "ruleVideo", "getUnorderedGroupHelper().canSelect(grammarAccess.getVideoAccess().getUnorderedGroup_1(), 4)");
            	    }
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2133:102: ( ({...}? => (otherlv_10= 'encoding=' ( (lv_encoding_11_0= RULE_STRING ) ) ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2134:6: ({...}? => (otherlv_10= 'encoding=' ( (lv_encoding_11_0= RULE_STRING ) ) ) )
            	    {
            	     
            	    	 				  getUnorderedGroupHelper().select(grammarAccess.getVideoAccess().getUnorderedGroup_1(), 4);
            	    	 				
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2137:6: ({...}? => (otherlv_10= 'encoding=' ( (lv_encoding_11_0= RULE_STRING ) ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2137:7: {...}? => (otherlv_10= 'encoding=' ( (lv_encoding_11_0= RULE_STRING ) ) )
            	    {
            	    if ( !((true)) ) {
            	        throw new FailedPredicateException(input, "ruleVideo", "true");
            	    }
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2137:16: (otherlv_10= 'encoding=' ( (lv_encoding_11_0= RULE_STRING ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2137:18: otherlv_10= 'encoding=' ( (lv_encoding_11_0= RULE_STRING ) )
            	    {
            	    otherlv_10=(Token)match(input,31,FOLLOW_31_in_ruleVideo5176); 

            	        	newLeafNode(otherlv_10, grammarAccess.getVideoAccess().getEncodingKeyword_1_4_0());
            	        
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2141:1: ( (lv_encoding_11_0= RULE_STRING ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2142:1: (lv_encoding_11_0= RULE_STRING )
            	    {
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2142:1: (lv_encoding_11_0= RULE_STRING )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2143:3: lv_encoding_11_0= RULE_STRING
            	    {
            	    lv_encoding_11_0=(Token)match(input,RULE_STRING,FOLLOW_RULE_STRING_in_ruleVideo5193); 

            	    			newLeafNode(lv_encoding_11_0, grammarAccess.getVideoAccess().getEncodingSTRINGTerminalRuleCall_1_4_1_0()); 
            	    		

            	    	        if (current==null) {
            	    	            current = createModelElement(grammarAccess.getVideoRule());
            	    	        }
            	           		setWithLastConsumed(
            	           			current, 
            	           			"encoding",
            	            		lv_encoding_11_0, 
            	            		"STRING");
            	    	    

            	    }


            	    }


            	    }


            	    }

            	     
            	    	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getVideoAccess().getUnorderedGroup_1());
            	    	 				

            	    }


            	    }


            	    }
            	    break;
            	case 6 :
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2166:4: ({...}? => ( ({...}? => (otherlv_12= 'labelcolor=[' ( ( (lv_LabelColor_13_0= ruleColorArray ) ) (otherlv_14= ',' ( (lv_LabelColor_15_0= ruleColorArray ) ) )* otherlv_16= ']' ) ) ) ) )
            	    {
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2166:4: ({...}? => ( ({...}? => (otherlv_12= 'labelcolor=[' ( ( (lv_LabelColor_13_0= ruleColorArray ) ) (otherlv_14= ',' ( (lv_LabelColor_15_0= ruleColorArray ) ) )* otherlv_16= ']' ) ) ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2167:5: {...}? => ( ({...}? => (otherlv_12= 'labelcolor=[' ( ( (lv_LabelColor_13_0= ruleColorArray ) ) (otherlv_14= ',' ( (lv_LabelColor_15_0= ruleColorArray ) ) )* otherlv_16= ']' ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getVideoAccess().getUnorderedGroup_1(), 5) ) {
            	        throw new FailedPredicateException(input, "ruleVideo", "getUnorderedGroupHelper().canSelect(grammarAccess.getVideoAccess().getUnorderedGroup_1(), 5)");
            	    }
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2167:102: ( ({...}? => (otherlv_12= 'labelcolor=[' ( ( (lv_LabelColor_13_0= ruleColorArray ) ) (otherlv_14= ',' ( (lv_LabelColor_15_0= ruleColorArray ) ) )* otherlv_16= ']' ) ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2168:6: ({...}? => (otherlv_12= 'labelcolor=[' ( ( (lv_LabelColor_13_0= ruleColorArray ) ) (otherlv_14= ',' ( (lv_LabelColor_15_0= ruleColorArray ) ) )* otherlv_16= ']' ) ) )
            	    {
            	     
            	    	 				  getUnorderedGroupHelper().select(grammarAccess.getVideoAccess().getUnorderedGroup_1(), 5);
            	    	 				
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2171:6: ({...}? => (otherlv_12= 'labelcolor=[' ( ( (lv_LabelColor_13_0= ruleColorArray ) ) (otherlv_14= ',' ( (lv_LabelColor_15_0= ruleColorArray ) ) )* otherlv_16= ']' ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2171:7: {...}? => (otherlv_12= 'labelcolor=[' ( ( (lv_LabelColor_13_0= ruleColorArray ) ) (otherlv_14= ',' ( (lv_LabelColor_15_0= ruleColorArray ) ) )* otherlv_16= ']' ) )
            	    {
            	    if ( !((true)) ) {
            	        throw new FailedPredicateException(input, "ruleVideo", "true");
            	    }
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2171:16: (otherlv_12= 'labelcolor=[' ( ( (lv_LabelColor_13_0= ruleColorArray ) ) (otherlv_14= ',' ( (lv_LabelColor_15_0= ruleColorArray ) ) )* otherlv_16= ']' ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2171:18: otherlv_12= 'labelcolor=[' ( ( (lv_LabelColor_13_0= ruleColorArray ) ) (otherlv_14= ',' ( (lv_LabelColor_15_0= ruleColorArray ) ) )* otherlv_16= ']' )
            	    {
            	    otherlv_12=(Token)match(input,19,FOLLOW_19_in_ruleVideo5266); 

            	        	newLeafNode(otherlv_12, grammarAccess.getVideoAccess().getLabelcolorKeyword_1_5_0());
            	        
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2175:1: ( ( (lv_LabelColor_13_0= ruleColorArray ) ) (otherlv_14= ',' ( (lv_LabelColor_15_0= ruleColorArray ) ) )* otherlv_16= ']' )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2175:2: ( (lv_LabelColor_13_0= ruleColorArray ) ) (otherlv_14= ',' ( (lv_LabelColor_15_0= ruleColorArray ) ) )* otherlv_16= ']'
            	    {
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2175:2: ( (lv_LabelColor_13_0= ruleColorArray ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2176:1: (lv_LabelColor_13_0= ruleColorArray )
            	    {
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2176:1: (lv_LabelColor_13_0= ruleColorArray )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2177:3: lv_LabelColor_13_0= ruleColorArray
            	    {
            	     
            	    	        newCompositeNode(grammarAccess.getVideoAccess().getLabelColorColorArrayParserRuleCall_1_5_1_0_0()); 
            	    	    
            	    pushFollow(FOLLOW_ruleColorArray_in_ruleVideo5288);
            	    lv_LabelColor_13_0=ruleColorArray();

            	    state._fsp--;


            	    	        if (current==null) {
            	    	            current = createModelElementForParent(grammarAccess.getVideoRule());
            	    	        }
            	           		add(
            	           			current, 
            	           			"LabelColor",
            	            		lv_LabelColor_13_0, 
            	            		"ColorArray");
            	    	        afterParserOrEnumRuleCall();
            	    	    

            	    }


            	    }

            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2193:2: (otherlv_14= ',' ( (lv_LabelColor_15_0= ruleColorArray ) ) )*
            	    loop31:
            	    do {
            	        int alt31=2;
            	        int LA31_0 = input.LA(1);

            	        if ( (LA31_0==20) ) {
            	            alt31=1;
            	        }


            	        switch (alt31) {
            	    	case 1 :
            	    	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2193:4: otherlv_14= ',' ( (lv_LabelColor_15_0= ruleColorArray ) )
            	    	    {
            	    	    otherlv_14=(Token)match(input,20,FOLLOW_20_in_ruleVideo5301); 

            	    	        	newLeafNode(otherlv_14, grammarAccess.getVideoAccess().getCommaKeyword_1_5_1_1_0());
            	    	        
            	    	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2197:1: ( (lv_LabelColor_15_0= ruleColorArray ) )
            	    	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2198:1: (lv_LabelColor_15_0= ruleColorArray )
            	    	    {
            	    	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2198:1: (lv_LabelColor_15_0= ruleColorArray )
            	    	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2199:3: lv_LabelColor_15_0= ruleColorArray
            	    	    {
            	    	     
            	    	    	        newCompositeNode(grammarAccess.getVideoAccess().getLabelColorColorArrayParserRuleCall_1_5_1_1_1_0()); 
            	    	    	    
            	    	    pushFollow(FOLLOW_ruleColorArray_in_ruleVideo5322);
            	    	    lv_LabelColor_15_0=ruleColorArray();

            	    	    state._fsp--;


            	    	    	        if (current==null) {
            	    	    	            current = createModelElementForParent(grammarAccess.getVideoRule());
            	    	    	        }
            	    	           		add(
            	    	           			current, 
            	    	           			"LabelColor",
            	    	            		lv_LabelColor_15_0, 
            	    	            		"ColorArray");
            	    	    	        afterParserOrEnumRuleCall();
            	    	    	    

            	    	    }


            	    	    }


            	    	    }
            	    	    break;

            	    	default :
            	    	    break loop31;
            	        }
            	    } while (true);

            	    otherlv_16=(Token)match(input,21,FOLLOW_21_in_ruleVideo5336); 

            	        	newLeafNode(otherlv_16, grammarAccess.getVideoAccess().getRightSquareBracketKeyword_1_5_1_2());
            	        

            	    }


            	    }


            	    }

            	     
            	    	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getVideoAccess().getUnorderedGroup_1());
            	    	 				

            	    }


            	    }


            	    }
            	    break;
            	case 7 :
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2226:4: ({...}? => ( ({...}? => (otherlv_17= 'valuecolor=[' ( ( (lv_ValueColor_18_0= ruleColorArray ) ) (otherlv_19= ',' ( (lv_ValueColor_20_0= ruleColorArray ) ) )* otherlv_21= ']' ) ) ) ) )
            	    {
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2226:4: ({...}? => ( ({...}? => (otherlv_17= 'valuecolor=[' ( ( (lv_ValueColor_18_0= ruleColorArray ) ) (otherlv_19= ',' ( (lv_ValueColor_20_0= ruleColorArray ) ) )* otherlv_21= ']' ) ) ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2227:5: {...}? => ( ({...}? => (otherlv_17= 'valuecolor=[' ( ( (lv_ValueColor_18_0= ruleColorArray ) ) (otherlv_19= ',' ( (lv_ValueColor_20_0= ruleColorArray ) ) )* otherlv_21= ']' ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getVideoAccess().getUnorderedGroup_1(), 6) ) {
            	        throw new FailedPredicateException(input, "ruleVideo", "getUnorderedGroupHelper().canSelect(grammarAccess.getVideoAccess().getUnorderedGroup_1(), 6)");
            	    }
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2227:102: ( ({...}? => (otherlv_17= 'valuecolor=[' ( ( (lv_ValueColor_18_0= ruleColorArray ) ) (otherlv_19= ',' ( (lv_ValueColor_20_0= ruleColorArray ) ) )* otherlv_21= ']' ) ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2228:6: ({...}? => (otherlv_17= 'valuecolor=[' ( ( (lv_ValueColor_18_0= ruleColorArray ) ) (otherlv_19= ',' ( (lv_ValueColor_20_0= ruleColorArray ) ) )* otherlv_21= ']' ) ) )
            	    {
            	     
            	    	 				  getUnorderedGroupHelper().select(grammarAccess.getVideoAccess().getUnorderedGroup_1(), 6);
            	    	 				
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2231:6: ({...}? => (otherlv_17= 'valuecolor=[' ( ( (lv_ValueColor_18_0= ruleColorArray ) ) (otherlv_19= ',' ( (lv_ValueColor_20_0= ruleColorArray ) ) )* otherlv_21= ']' ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2231:7: {...}? => (otherlv_17= 'valuecolor=[' ( ( (lv_ValueColor_18_0= ruleColorArray ) ) (otherlv_19= ',' ( (lv_ValueColor_20_0= ruleColorArray ) ) )* otherlv_21= ']' ) )
            	    {
            	    if ( !((true)) ) {
            	        throw new FailedPredicateException(input, "ruleVideo", "true");
            	    }
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2231:16: (otherlv_17= 'valuecolor=[' ( ( (lv_ValueColor_18_0= ruleColorArray ) ) (otherlv_19= ',' ( (lv_ValueColor_20_0= ruleColorArray ) ) )* otherlv_21= ']' ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2231:18: otherlv_17= 'valuecolor=[' ( ( (lv_ValueColor_18_0= ruleColorArray ) ) (otherlv_19= ',' ( (lv_ValueColor_20_0= ruleColorArray ) ) )* otherlv_21= ']' )
            	    {
            	    otherlv_17=(Token)match(input,22,FOLLOW_22_in_ruleVideo5405); 

            	        	newLeafNode(otherlv_17, grammarAccess.getVideoAccess().getValuecolorKeyword_1_6_0());
            	        
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2235:1: ( ( (lv_ValueColor_18_0= ruleColorArray ) ) (otherlv_19= ',' ( (lv_ValueColor_20_0= ruleColorArray ) ) )* otherlv_21= ']' )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2235:2: ( (lv_ValueColor_18_0= ruleColorArray ) ) (otherlv_19= ',' ( (lv_ValueColor_20_0= ruleColorArray ) ) )* otherlv_21= ']'
            	    {
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2235:2: ( (lv_ValueColor_18_0= ruleColorArray ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2236:1: (lv_ValueColor_18_0= ruleColorArray )
            	    {
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2236:1: (lv_ValueColor_18_0= ruleColorArray )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2237:3: lv_ValueColor_18_0= ruleColorArray
            	    {
            	     
            	    	        newCompositeNode(grammarAccess.getVideoAccess().getValueColorColorArrayParserRuleCall_1_6_1_0_0()); 
            	    	    
            	    pushFollow(FOLLOW_ruleColorArray_in_ruleVideo5427);
            	    lv_ValueColor_18_0=ruleColorArray();

            	    state._fsp--;


            	    	        if (current==null) {
            	    	            current = createModelElementForParent(grammarAccess.getVideoRule());
            	    	        }
            	           		add(
            	           			current, 
            	           			"ValueColor",
            	            		lv_ValueColor_18_0, 
            	            		"ColorArray");
            	    	        afterParserOrEnumRuleCall();
            	    	    

            	    }


            	    }

            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2253:2: (otherlv_19= ',' ( (lv_ValueColor_20_0= ruleColorArray ) ) )*
            	    loop32:
            	    do {
            	        int alt32=2;
            	        int LA32_0 = input.LA(1);

            	        if ( (LA32_0==20) ) {
            	            alt32=1;
            	        }


            	        switch (alt32) {
            	    	case 1 :
            	    	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2253:4: otherlv_19= ',' ( (lv_ValueColor_20_0= ruleColorArray ) )
            	    	    {
            	    	    otherlv_19=(Token)match(input,20,FOLLOW_20_in_ruleVideo5440); 

            	    	        	newLeafNode(otherlv_19, grammarAccess.getVideoAccess().getCommaKeyword_1_6_1_1_0());
            	    	        
            	    	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2257:1: ( (lv_ValueColor_20_0= ruleColorArray ) )
            	    	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2258:1: (lv_ValueColor_20_0= ruleColorArray )
            	    	    {
            	    	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2258:1: (lv_ValueColor_20_0= ruleColorArray )
            	    	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2259:3: lv_ValueColor_20_0= ruleColorArray
            	    	    {
            	    	     
            	    	    	        newCompositeNode(grammarAccess.getVideoAccess().getValueColorColorArrayParserRuleCall_1_6_1_1_1_0()); 
            	    	    	    
            	    	    pushFollow(FOLLOW_ruleColorArray_in_ruleVideo5461);
            	    	    lv_ValueColor_20_0=ruleColorArray();

            	    	    state._fsp--;


            	    	    	        if (current==null) {
            	    	    	            current = createModelElementForParent(grammarAccess.getVideoRule());
            	    	    	        }
            	    	           		add(
            	    	           			current, 
            	    	           			"ValueColor",
            	    	            		lv_ValueColor_20_0, 
            	    	            		"ColorArray");
            	    	    	        afterParserOrEnumRuleCall();
            	    	    	    

            	    	    }


            	    	    }


            	    	    }
            	    	    break;

            	    	default :
            	    	    break loop32;
            	        }
            	    } while (true);

            	    otherlv_21=(Token)match(input,21,FOLLOW_21_in_ruleVideo5475); 

            	        	newLeafNode(otherlv_21, grammarAccess.getVideoAccess().getRightSquareBracketKeyword_1_6_1_2());
            	        

            	    }


            	    }


            	    }

            	     
            	    	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getVideoAccess().getUnorderedGroup_1());
            	    	 				

            	    }


            	    }


            	    }
            	    break;
            	case 8 :
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2286:4: ({...}? => ( ({...}? => (otherlv_22= 'visibility=[' ( ( (lv_Visibility_23_0= ruleVisibilityRule ) ) (otherlv_24= ',' ( (lv_Visibility_25_0= ruleVisibilityRule ) ) )* otherlv_26= ']' ) ) ) ) )
            	    {
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2286:4: ({...}? => ( ({...}? => (otherlv_22= 'visibility=[' ( ( (lv_Visibility_23_0= ruleVisibilityRule ) ) (otherlv_24= ',' ( (lv_Visibility_25_0= ruleVisibilityRule ) ) )* otherlv_26= ']' ) ) ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2287:5: {...}? => ( ({...}? => (otherlv_22= 'visibility=[' ( ( (lv_Visibility_23_0= ruleVisibilityRule ) ) (otherlv_24= ',' ( (lv_Visibility_25_0= ruleVisibilityRule ) ) )* otherlv_26= ']' ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getVideoAccess().getUnorderedGroup_1(), 7) ) {
            	        throw new FailedPredicateException(input, "ruleVideo", "getUnorderedGroupHelper().canSelect(grammarAccess.getVideoAccess().getUnorderedGroup_1(), 7)");
            	    }
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2287:102: ( ({...}? => (otherlv_22= 'visibility=[' ( ( (lv_Visibility_23_0= ruleVisibilityRule ) ) (otherlv_24= ',' ( (lv_Visibility_25_0= ruleVisibilityRule ) ) )* otherlv_26= ']' ) ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2288:6: ({...}? => (otherlv_22= 'visibility=[' ( ( (lv_Visibility_23_0= ruleVisibilityRule ) ) (otherlv_24= ',' ( (lv_Visibility_25_0= ruleVisibilityRule ) ) )* otherlv_26= ']' ) ) )
            	    {
            	     
            	    	 				  getUnorderedGroupHelper().select(grammarAccess.getVideoAccess().getUnorderedGroup_1(), 7);
            	    	 				
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2291:6: ({...}? => (otherlv_22= 'visibility=[' ( ( (lv_Visibility_23_0= ruleVisibilityRule ) ) (otherlv_24= ',' ( (lv_Visibility_25_0= ruleVisibilityRule ) ) )* otherlv_26= ']' ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2291:7: {...}? => (otherlv_22= 'visibility=[' ( ( (lv_Visibility_23_0= ruleVisibilityRule ) ) (otherlv_24= ',' ( (lv_Visibility_25_0= ruleVisibilityRule ) ) )* otherlv_26= ']' ) )
            	    {
            	    if ( !((true)) ) {
            	        throw new FailedPredicateException(input, "ruleVideo", "true");
            	    }
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2291:16: (otherlv_22= 'visibility=[' ( ( (lv_Visibility_23_0= ruleVisibilityRule ) ) (otherlv_24= ',' ( (lv_Visibility_25_0= ruleVisibilityRule ) ) )* otherlv_26= ']' ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2291:18: otherlv_22= 'visibility=[' ( ( (lv_Visibility_23_0= ruleVisibilityRule ) ) (otherlv_24= ',' ( (lv_Visibility_25_0= ruleVisibilityRule ) ) )* otherlv_26= ']' )
            	    {
            	    otherlv_22=(Token)match(input,23,FOLLOW_23_in_ruleVideo5544); 

            	        	newLeafNode(otherlv_22, grammarAccess.getVideoAccess().getVisibilityKeyword_1_7_0());
            	        
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2295:1: ( ( (lv_Visibility_23_0= ruleVisibilityRule ) ) (otherlv_24= ',' ( (lv_Visibility_25_0= ruleVisibilityRule ) ) )* otherlv_26= ']' )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2295:2: ( (lv_Visibility_23_0= ruleVisibilityRule ) ) (otherlv_24= ',' ( (lv_Visibility_25_0= ruleVisibilityRule ) ) )* otherlv_26= ']'
            	    {
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2295:2: ( (lv_Visibility_23_0= ruleVisibilityRule ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2296:1: (lv_Visibility_23_0= ruleVisibilityRule )
            	    {
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2296:1: (lv_Visibility_23_0= ruleVisibilityRule )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2297:3: lv_Visibility_23_0= ruleVisibilityRule
            	    {
            	     
            	    	        newCompositeNode(grammarAccess.getVideoAccess().getVisibilityVisibilityRuleParserRuleCall_1_7_1_0_0()); 
            	    	    
            	    pushFollow(FOLLOW_ruleVisibilityRule_in_ruleVideo5566);
            	    lv_Visibility_23_0=ruleVisibilityRule();

            	    state._fsp--;


            	    	        if (current==null) {
            	    	            current = createModelElementForParent(grammarAccess.getVideoRule());
            	    	        }
            	           		add(
            	           			current, 
            	           			"Visibility",
            	            		lv_Visibility_23_0, 
            	            		"VisibilityRule");
            	    	        afterParserOrEnumRuleCall();
            	    	    

            	    }


            	    }

            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2313:2: (otherlv_24= ',' ( (lv_Visibility_25_0= ruleVisibilityRule ) ) )*
            	    loop33:
            	    do {
            	        int alt33=2;
            	        int LA33_0 = input.LA(1);

            	        if ( (LA33_0==20) ) {
            	            alt33=1;
            	        }


            	        switch (alt33) {
            	    	case 1 :
            	    	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2313:4: otherlv_24= ',' ( (lv_Visibility_25_0= ruleVisibilityRule ) )
            	    	    {
            	    	    otherlv_24=(Token)match(input,20,FOLLOW_20_in_ruleVideo5579); 

            	    	        	newLeafNode(otherlv_24, grammarAccess.getVideoAccess().getCommaKeyword_1_7_1_1_0());
            	    	        
            	    	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2317:1: ( (lv_Visibility_25_0= ruleVisibilityRule ) )
            	    	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2318:1: (lv_Visibility_25_0= ruleVisibilityRule )
            	    	    {
            	    	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2318:1: (lv_Visibility_25_0= ruleVisibilityRule )
            	    	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2319:3: lv_Visibility_25_0= ruleVisibilityRule
            	    	    {
            	    	     
            	    	    	        newCompositeNode(grammarAccess.getVideoAccess().getVisibilityVisibilityRuleParserRuleCall_1_7_1_1_1_0()); 
            	    	    	    
            	    	    pushFollow(FOLLOW_ruleVisibilityRule_in_ruleVideo5600);
            	    	    lv_Visibility_25_0=ruleVisibilityRule();

            	    	    state._fsp--;


            	    	    	        if (current==null) {
            	    	    	            current = createModelElementForParent(grammarAccess.getVideoRule());
            	    	    	        }
            	    	           		add(
            	    	           			current, 
            	    	           			"Visibility",
            	    	            		lv_Visibility_25_0, 
            	    	            		"VisibilityRule");
            	    	    	        afterParserOrEnumRuleCall();
            	    	    	    

            	    	    }


            	    	    }


            	    	    }
            	    	    break;

            	    	default :
            	    	    break loop33;
            	        }
            	    } while (true);

            	    otherlv_26=(Token)match(input,21,FOLLOW_21_in_ruleVideo5614); 

            	        	newLeafNode(otherlv_26, grammarAccess.getVideoAccess().getRightSquareBracketKeyword_1_7_1_2());
            	        

            	    }


            	    }


            	    }

            	     
            	    	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getVideoAccess().getUnorderedGroup_1());
            	    	 				

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    if ( cnt34 >= 1 ) break loop34;
                        EarlyExitException eee =
                            new EarlyExitException(34, input);
                        throw eee;
                }
                cnt34++;
            } while (true);

            if ( ! getUnorderedGroupHelper().canLeave(grammarAccess.getVideoAccess().getUnorderedGroup_1()) ) {
                throw new FailedPredicateException(input, "ruleVideo", "getUnorderedGroupHelper().canLeave(grammarAccess.getVideoAccess().getUnorderedGroup_1())");
            }

            }


            }

             
            	  getUnorderedGroupHelper().leave(grammarAccess.getVideoAccess().getUnorderedGroup_1());
            	

            }


            }


            }

             leaveRule(); 
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleVideo"


    // $ANTLR start "entryRuleChart"
    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2362:1: entryRuleChart returns [EObject current=null] : iv_ruleChart= ruleChart EOF ;
    public final EObject entryRuleChart() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleChart = null;


        try {
            // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2363:2: (iv_ruleChart= ruleChart EOF )
            // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2364:2: iv_ruleChart= ruleChart EOF
            {
             newCompositeNode(grammarAccess.getChartRule()); 
            pushFollow(FOLLOW_ruleChart_in_entryRuleChart5698);
            iv_ruleChart=ruleChart();

            state._fsp--;

             current =iv_ruleChart; 
            match(input,EOF,FOLLOW_EOF_in_entryRuleChart5708); 

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleChart"


    // $ANTLR start "ruleChart"
    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2371:1: ruleChart returns [EObject current=null] : (otherlv_0= 'Chart' ( ( ( ( ({...}? => ( ({...}? => (otherlv_2= 'item=' ( (lv_item_3_0= ruleItemRef ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= 'label=' ( ( (lv_label_5_1= RULE_ID | lv_label_5_2= RULE_STRING ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= 'icon=' ( (lv_icon_7_0= ruleIcon ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_8= 'service=' ( (lv_service_9_0= RULE_STRING ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= 'refresh=' ( (lv_refresh_11_0= RULE_INT ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_12= 'period=' ( (lv_period_13_0= RULE_ID ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= 'labelcolor=[' ( ( (lv_LabelColor_15_0= ruleColorArray ) ) (otherlv_16= ',' ( (lv_LabelColor_17_0= ruleColorArray ) ) )* otherlv_18= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_19= 'valuecolor=[' ( ( (lv_ValueColor_20_0= ruleColorArray ) ) (otherlv_21= ',' ( (lv_ValueColor_22_0= ruleColorArray ) ) )* otherlv_23= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_24= 'visibility=[' ( ( (lv_Visibility_25_0= ruleVisibilityRule ) ) (otherlv_26= ',' ( (lv_Visibility_27_0= ruleVisibilityRule ) ) )* otherlv_28= ']' ) ) ) ) ) )+ {...}?) ) ) ) ;
    public final EObject ruleChart() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_2=null;
        Token otherlv_4=null;
        Token lv_label_5_1=null;
        Token lv_label_5_2=null;
        Token otherlv_6=null;
        Token otherlv_8=null;
        Token lv_service_9_0=null;
        Token otherlv_10=null;
        Token lv_refresh_11_0=null;
        Token otherlv_12=null;
        Token lv_period_13_0=null;
        Token otherlv_14=null;
        Token otherlv_16=null;
        Token otherlv_18=null;
        Token otherlv_19=null;
        Token otherlv_21=null;
        Token otherlv_23=null;
        Token otherlv_24=null;
        Token otherlv_26=null;
        Token otherlv_28=null;
        AntlrDatatypeRuleToken lv_item_3_0 = null;

        AntlrDatatypeRuleToken lv_icon_7_0 = null;

        EObject lv_LabelColor_15_0 = null;

        EObject lv_LabelColor_17_0 = null;

        EObject lv_ValueColor_20_0 = null;

        EObject lv_ValueColor_22_0 = null;

        EObject lv_Visibility_25_0 = null;

        EObject lv_Visibility_27_0 = null;


         enterRule(); 
            
        try {
            // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2374:28: ( (otherlv_0= 'Chart' ( ( ( ( ({...}? => ( ({...}? => (otherlv_2= 'item=' ( (lv_item_3_0= ruleItemRef ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= 'label=' ( ( (lv_label_5_1= RULE_ID | lv_label_5_2= RULE_STRING ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= 'icon=' ( (lv_icon_7_0= ruleIcon ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_8= 'service=' ( (lv_service_9_0= RULE_STRING ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= 'refresh=' ( (lv_refresh_11_0= RULE_INT ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_12= 'period=' ( (lv_period_13_0= RULE_ID ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= 'labelcolor=[' ( ( (lv_LabelColor_15_0= ruleColorArray ) ) (otherlv_16= ',' ( (lv_LabelColor_17_0= ruleColorArray ) ) )* otherlv_18= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_19= 'valuecolor=[' ( ( (lv_ValueColor_20_0= ruleColorArray ) ) (otherlv_21= ',' ( (lv_ValueColor_22_0= ruleColorArray ) ) )* otherlv_23= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_24= 'visibility=[' ( ( (lv_Visibility_25_0= ruleVisibilityRule ) ) (otherlv_26= ',' ( (lv_Visibility_27_0= ruleVisibilityRule ) ) )* otherlv_28= ']' ) ) ) ) ) )+ {...}?) ) ) ) )
            // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2375:1: (otherlv_0= 'Chart' ( ( ( ( ({...}? => ( ({...}? => (otherlv_2= 'item=' ( (lv_item_3_0= ruleItemRef ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= 'label=' ( ( (lv_label_5_1= RULE_ID | lv_label_5_2= RULE_STRING ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= 'icon=' ( (lv_icon_7_0= ruleIcon ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_8= 'service=' ( (lv_service_9_0= RULE_STRING ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= 'refresh=' ( (lv_refresh_11_0= RULE_INT ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_12= 'period=' ( (lv_period_13_0= RULE_ID ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= 'labelcolor=[' ( ( (lv_LabelColor_15_0= ruleColorArray ) ) (otherlv_16= ',' ( (lv_LabelColor_17_0= ruleColorArray ) ) )* otherlv_18= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_19= 'valuecolor=[' ( ( (lv_ValueColor_20_0= ruleColorArray ) ) (otherlv_21= ',' ( (lv_ValueColor_22_0= ruleColorArray ) ) )* otherlv_23= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_24= 'visibility=[' ( ( (lv_Visibility_25_0= ruleVisibilityRule ) ) (otherlv_26= ',' ( (lv_Visibility_27_0= ruleVisibilityRule ) ) )* otherlv_28= ']' ) ) ) ) ) )+ {...}?) ) ) )
            {
            // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2375:1: (otherlv_0= 'Chart' ( ( ( ( ({...}? => ( ({...}? => (otherlv_2= 'item=' ( (lv_item_3_0= ruleItemRef ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= 'label=' ( ( (lv_label_5_1= RULE_ID | lv_label_5_2= RULE_STRING ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= 'icon=' ( (lv_icon_7_0= ruleIcon ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_8= 'service=' ( (lv_service_9_0= RULE_STRING ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= 'refresh=' ( (lv_refresh_11_0= RULE_INT ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_12= 'period=' ( (lv_period_13_0= RULE_ID ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= 'labelcolor=[' ( ( (lv_LabelColor_15_0= ruleColorArray ) ) (otherlv_16= ',' ( (lv_LabelColor_17_0= ruleColorArray ) ) )* otherlv_18= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_19= 'valuecolor=[' ( ( (lv_ValueColor_20_0= ruleColorArray ) ) (otherlv_21= ',' ( (lv_ValueColor_22_0= ruleColorArray ) ) )* otherlv_23= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_24= 'visibility=[' ( ( (lv_Visibility_25_0= ruleVisibilityRule ) ) (otherlv_26= ',' ( (lv_Visibility_27_0= ruleVisibilityRule ) ) )* otherlv_28= ']' ) ) ) ) ) )+ {...}?) ) ) )
            // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2375:3: otherlv_0= 'Chart' ( ( ( ( ({...}? => ( ({...}? => (otherlv_2= 'item=' ( (lv_item_3_0= ruleItemRef ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= 'label=' ( ( (lv_label_5_1= RULE_ID | lv_label_5_2= RULE_STRING ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= 'icon=' ( (lv_icon_7_0= ruleIcon ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_8= 'service=' ( (lv_service_9_0= RULE_STRING ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= 'refresh=' ( (lv_refresh_11_0= RULE_INT ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_12= 'period=' ( (lv_period_13_0= RULE_ID ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= 'labelcolor=[' ( ( (lv_LabelColor_15_0= ruleColorArray ) ) (otherlv_16= ',' ( (lv_LabelColor_17_0= ruleColorArray ) ) )* otherlv_18= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_19= 'valuecolor=[' ( ( (lv_ValueColor_20_0= ruleColorArray ) ) (otherlv_21= ',' ( (lv_ValueColor_22_0= ruleColorArray ) ) )* otherlv_23= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_24= 'visibility=[' ( ( (lv_Visibility_25_0= ruleVisibilityRule ) ) (otherlv_26= ',' ( (lv_Visibility_27_0= ruleVisibilityRule ) ) )* otherlv_28= ']' ) ) ) ) ) )+ {...}?) ) )
            {
            otherlv_0=(Token)match(input,32,FOLLOW_32_in_ruleChart5745); 

                	newLeafNode(otherlv_0, grammarAccess.getChartAccess().getChartKeyword_0());
                
            // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2379:1: ( ( ( ( ({...}? => ( ({...}? => (otherlv_2= 'item=' ( (lv_item_3_0= ruleItemRef ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= 'label=' ( ( (lv_label_5_1= RULE_ID | lv_label_5_2= RULE_STRING ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= 'icon=' ( (lv_icon_7_0= ruleIcon ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_8= 'service=' ( (lv_service_9_0= RULE_STRING ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= 'refresh=' ( (lv_refresh_11_0= RULE_INT ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_12= 'period=' ( (lv_period_13_0= RULE_ID ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= 'labelcolor=[' ( ( (lv_LabelColor_15_0= ruleColorArray ) ) (otherlv_16= ',' ( (lv_LabelColor_17_0= ruleColorArray ) ) )* otherlv_18= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_19= 'valuecolor=[' ( ( (lv_ValueColor_20_0= ruleColorArray ) ) (otherlv_21= ',' ( (lv_ValueColor_22_0= ruleColorArray ) ) )* otherlv_23= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_24= 'visibility=[' ( ( (lv_Visibility_25_0= ruleVisibilityRule ) ) (otherlv_26= ',' ( (lv_Visibility_27_0= ruleVisibilityRule ) ) )* otherlv_28= ']' ) ) ) ) ) )+ {...}?) ) )
            // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2381:1: ( ( ( ({...}? => ( ({...}? => (otherlv_2= 'item=' ( (lv_item_3_0= ruleItemRef ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= 'label=' ( ( (lv_label_5_1= RULE_ID | lv_label_5_2= RULE_STRING ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= 'icon=' ( (lv_icon_7_0= ruleIcon ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_8= 'service=' ( (lv_service_9_0= RULE_STRING ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= 'refresh=' ( (lv_refresh_11_0= RULE_INT ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_12= 'period=' ( (lv_period_13_0= RULE_ID ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= 'labelcolor=[' ( ( (lv_LabelColor_15_0= ruleColorArray ) ) (otherlv_16= ',' ( (lv_LabelColor_17_0= ruleColorArray ) ) )* otherlv_18= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_19= 'valuecolor=[' ( ( (lv_ValueColor_20_0= ruleColorArray ) ) (otherlv_21= ',' ( (lv_ValueColor_22_0= ruleColorArray ) ) )* otherlv_23= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_24= 'visibility=[' ( ( (lv_Visibility_25_0= ruleVisibilityRule ) ) (otherlv_26= ',' ( (lv_Visibility_27_0= ruleVisibilityRule ) ) )* otherlv_28= ']' ) ) ) ) ) )+ {...}?) )
            {
            // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2381:1: ( ( ( ({...}? => ( ({...}? => (otherlv_2= 'item=' ( (lv_item_3_0= ruleItemRef ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= 'label=' ( ( (lv_label_5_1= RULE_ID | lv_label_5_2= RULE_STRING ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= 'icon=' ( (lv_icon_7_0= ruleIcon ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_8= 'service=' ( (lv_service_9_0= RULE_STRING ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= 'refresh=' ( (lv_refresh_11_0= RULE_INT ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_12= 'period=' ( (lv_period_13_0= RULE_ID ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= 'labelcolor=[' ( ( (lv_LabelColor_15_0= ruleColorArray ) ) (otherlv_16= ',' ( (lv_LabelColor_17_0= ruleColorArray ) ) )* otherlv_18= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_19= 'valuecolor=[' ( ( (lv_ValueColor_20_0= ruleColorArray ) ) (otherlv_21= ',' ( (lv_ValueColor_22_0= ruleColorArray ) ) )* otherlv_23= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_24= 'visibility=[' ( ( (lv_Visibility_25_0= ruleVisibilityRule ) ) (otherlv_26= ',' ( (lv_Visibility_27_0= ruleVisibilityRule ) ) )* otherlv_28= ']' ) ) ) ) ) )+ {...}?) )
            // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2382:2: ( ( ({...}? => ( ({...}? => (otherlv_2= 'item=' ( (lv_item_3_0= ruleItemRef ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= 'label=' ( ( (lv_label_5_1= RULE_ID | lv_label_5_2= RULE_STRING ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= 'icon=' ( (lv_icon_7_0= ruleIcon ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_8= 'service=' ( (lv_service_9_0= RULE_STRING ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= 'refresh=' ( (lv_refresh_11_0= RULE_INT ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_12= 'period=' ( (lv_period_13_0= RULE_ID ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= 'labelcolor=[' ( ( (lv_LabelColor_15_0= ruleColorArray ) ) (otherlv_16= ',' ( (lv_LabelColor_17_0= ruleColorArray ) ) )* otherlv_18= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_19= 'valuecolor=[' ( ( (lv_ValueColor_20_0= ruleColorArray ) ) (otherlv_21= ',' ( (lv_ValueColor_22_0= ruleColorArray ) ) )* otherlv_23= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_24= 'visibility=[' ( ( (lv_Visibility_25_0= ruleVisibilityRule ) ) (otherlv_26= ',' ( (lv_Visibility_27_0= ruleVisibilityRule ) ) )* otherlv_28= ']' ) ) ) ) ) )+ {...}?)
            {
             
            	  getUnorderedGroupHelper().enter(grammarAccess.getChartAccess().getUnorderedGroup_1());
            	
            // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2385:2: ( ( ({...}? => ( ({...}? => (otherlv_2= 'item=' ( (lv_item_3_0= ruleItemRef ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= 'label=' ( ( (lv_label_5_1= RULE_ID | lv_label_5_2= RULE_STRING ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= 'icon=' ( (lv_icon_7_0= ruleIcon ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_8= 'service=' ( (lv_service_9_0= RULE_STRING ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= 'refresh=' ( (lv_refresh_11_0= RULE_INT ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_12= 'period=' ( (lv_period_13_0= RULE_ID ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= 'labelcolor=[' ( ( (lv_LabelColor_15_0= ruleColorArray ) ) (otherlv_16= ',' ( (lv_LabelColor_17_0= ruleColorArray ) ) )* otherlv_18= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_19= 'valuecolor=[' ( ( (lv_ValueColor_20_0= ruleColorArray ) ) (otherlv_21= ',' ( (lv_ValueColor_22_0= ruleColorArray ) ) )* otherlv_23= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_24= 'visibility=[' ( ( (lv_Visibility_25_0= ruleVisibilityRule ) ) (otherlv_26= ',' ( (lv_Visibility_27_0= ruleVisibilityRule ) ) )* otherlv_28= ']' ) ) ) ) ) )+ {...}?)
            // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2386:3: ( ({...}? => ( ({...}? => (otherlv_2= 'item=' ( (lv_item_3_0= ruleItemRef ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= 'label=' ( ( (lv_label_5_1= RULE_ID | lv_label_5_2= RULE_STRING ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= 'icon=' ( (lv_icon_7_0= ruleIcon ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_8= 'service=' ( (lv_service_9_0= RULE_STRING ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= 'refresh=' ( (lv_refresh_11_0= RULE_INT ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_12= 'period=' ( (lv_period_13_0= RULE_ID ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= 'labelcolor=[' ( ( (lv_LabelColor_15_0= ruleColorArray ) ) (otherlv_16= ',' ( (lv_LabelColor_17_0= ruleColorArray ) ) )* otherlv_18= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_19= 'valuecolor=[' ( ( (lv_ValueColor_20_0= ruleColorArray ) ) (otherlv_21= ',' ( (lv_ValueColor_22_0= ruleColorArray ) ) )* otherlv_23= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_24= 'visibility=[' ( ( (lv_Visibility_25_0= ruleVisibilityRule ) ) (otherlv_26= ',' ( (lv_Visibility_27_0= ruleVisibilityRule ) ) )* otherlv_28= ']' ) ) ) ) ) )+ {...}?
            {
            // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2386:3: ( ({...}? => ( ({...}? => (otherlv_2= 'item=' ( (lv_item_3_0= ruleItemRef ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= 'label=' ( ( (lv_label_5_1= RULE_ID | lv_label_5_2= RULE_STRING ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= 'icon=' ( (lv_icon_7_0= ruleIcon ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_8= 'service=' ( (lv_service_9_0= RULE_STRING ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= 'refresh=' ( (lv_refresh_11_0= RULE_INT ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_12= 'period=' ( (lv_period_13_0= RULE_ID ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= 'labelcolor=[' ( ( (lv_LabelColor_15_0= ruleColorArray ) ) (otherlv_16= ',' ( (lv_LabelColor_17_0= ruleColorArray ) ) )* otherlv_18= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_19= 'valuecolor=[' ( ( (lv_ValueColor_20_0= ruleColorArray ) ) (otherlv_21= ',' ( (lv_ValueColor_22_0= ruleColorArray ) ) )* otherlv_23= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_24= 'visibility=[' ( ( (lv_Visibility_25_0= ruleVisibilityRule ) ) (otherlv_26= ',' ( (lv_Visibility_27_0= ruleVisibilityRule ) ) )* otherlv_28= ']' ) ) ) ) ) )+
            int cnt39=0;
            loop39:
            do {
                int alt39=10;
                alt39 = dfa39.predict(input);
                switch (alt39) {
            	case 1 :
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2388:4: ({...}? => ( ({...}? => (otherlv_2= 'item=' ( (lv_item_3_0= ruleItemRef ) ) ) ) ) )
            	    {
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2388:4: ({...}? => ( ({...}? => (otherlv_2= 'item=' ( (lv_item_3_0= ruleItemRef ) ) ) ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2389:5: {...}? => ( ({...}? => (otherlv_2= 'item=' ( (lv_item_3_0= ruleItemRef ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getChartAccess().getUnorderedGroup_1(), 0) ) {
            	        throw new FailedPredicateException(input, "ruleChart", "getUnorderedGroupHelper().canSelect(grammarAccess.getChartAccess().getUnorderedGroup_1(), 0)");
            	    }
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2389:102: ( ({...}? => (otherlv_2= 'item=' ( (lv_item_3_0= ruleItemRef ) ) ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2390:6: ({...}? => (otherlv_2= 'item=' ( (lv_item_3_0= ruleItemRef ) ) ) )
            	    {
            	     
            	    	 				  getUnorderedGroupHelper().select(grammarAccess.getChartAccess().getUnorderedGroup_1(), 0);
            	    	 				
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2393:6: ({...}? => (otherlv_2= 'item=' ( (lv_item_3_0= ruleItemRef ) ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2393:7: {...}? => (otherlv_2= 'item=' ( (lv_item_3_0= ruleItemRef ) ) )
            	    {
            	    if ( !((true)) ) {
            	        throw new FailedPredicateException(input, "ruleChart", "true");
            	    }
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2393:16: (otherlv_2= 'item=' ( (lv_item_3_0= ruleItemRef ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2393:18: otherlv_2= 'item=' ( (lv_item_3_0= ruleItemRef ) )
            	    {
            	    otherlv_2=(Token)match(input,18,FOLLOW_18_in_ruleChart5803); 

            	        	newLeafNode(otherlv_2, grammarAccess.getChartAccess().getItemKeyword_1_0_0());
            	        
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2397:1: ( (lv_item_3_0= ruleItemRef ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2398:1: (lv_item_3_0= ruleItemRef )
            	    {
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2398:1: (lv_item_3_0= ruleItemRef )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2399:3: lv_item_3_0= ruleItemRef
            	    {
            	     
            	    	        newCompositeNode(grammarAccess.getChartAccess().getItemItemRefParserRuleCall_1_0_1_0()); 
            	    	    
            	    pushFollow(FOLLOW_ruleItemRef_in_ruleChart5824);
            	    lv_item_3_0=ruleItemRef();

            	    state._fsp--;


            	    	        if (current==null) {
            	    	            current = createModelElementForParent(grammarAccess.getChartRule());
            	    	        }
            	           		set(
            	           			current, 
            	           			"item",
            	            		lv_item_3_0, 
            	            		"ItemRef");
            	    	        afterParserOrEnumRuleCall();
            	    	    

            	    }


            	    }


            	    }


            	    }

            	     
            	    	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getChartAccess().getUnorderedGroup_1());
            	    	 				

            	    }


            	    }


            	    }
            	    break;
            	case 2 :
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2422:4: ({...}? => ( ({...}? => (otherlv_4= 'label=' ( ( (lv_label_5_1= RULE_ID | lv_label_5_2= RULE_STRING ) ) ) ) ) ) )
            	    {
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2422:4: ({...}? => ( ({...}? => (otherlv_4= 'label=' ( ( (lv_label_5_1= RULE_ID | lv_label_5_2= RULE_STRING ) ) ) ) ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2423:5: {...}? => ( ({...}? => (otherlv_4= 'label=' ( ( (lv_label_5_1= RULE_ID | lv_label_5_2= RULE_STRING ) ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getChartAccess().getUnorderedGroup_1(), 1) ) {
            	        throw new FailedPredicateException(input, "ruleChart", "getUnorderedGroupHelper().canSelect(grammarAccess.getChartAccess().getUnorderedGroup_1(), 1)");
            	    }
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2423:102: ( ({...}? => (otherlv_4= 'label=' ( ( (lv_label_5_1= RULE_ID | lv_label_5_2= RULE_STRING ) ) ) ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2424:6: ({...}? => (otherlv_4= 'label=' ( ( (lv_label_5_1= RULE_ID | lv_label_5_2= RULE_STRING ) ) ) ) )
            	    {
            	     
            	    	 				  getUnorderedGroupHelper().select(grammarAccess.getChartAccess().getUnorderedGroup_1(), 1);
            	    	 				
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2427:6: ({...}? => (otherlv_4= 'label=' ( ( (lv_label_5_1= RULE_ID | lv_label_5_2= RULE_STRING ) ) ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2427:7: {...}? => (otherlv_4= 'label=' ( ( (lv_label_5_1= RULE_ID | lv_label_5_2= RULE_STRING ) ) ) )
            	    {
            	    if ( !((true)) ) {
            	        throw new FailedPredicateException(input, "ruleChart", "true");
            	    }
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2427:16: (otherlv_4= 'label=' ( ( (lv_label_5_1= RULE_ID | lv_label_5_2= RULE_STRING ) ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2427:18: otherlv_4= 'label=' ( ( (lv_label_5_1= RULE_ID | lv_label_5_2= RULE_STRING ) ) )
            	    {
            	    otherlv_4=(Token)match(input,13,FOLLOW_13_in_ruleChart5892); 

            	        	newLeafNode(otherlv_4, grammarAccess.getChartAccess().getLabelKeyword_1_1_0());
            	        
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2431:1: ( ( (lv_label_5_1= RULE_ID | lv_label_5_2= RULE_STRING ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2432:1: ( (lv_label_5_1= RULE_ID | lv_label_5_2= RULE_STRING ) )
            	    {
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2432:1: ( (lv_label_5_1= RULE_ID | lv_label_5_2= RULE_STRING ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2433:1: (lv_label_5_1= RULE_ID | lv_label_5_2= RULE_STRING )
            	    {
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2433:1: (lv_label_5_1= RULE_ID | lv_label_5_2= RULE_STRING )
            	    int alt35=2;
            	    int LA35_0 = input.LA(1);

            	    if ( (LA35_0==RULE_ID) ) {
            	        alt35=1;
            	    }
            	    else if ( (LA35_0==RULE_STRING) ) {
            	        alt35=2;
            	    }
            	    else {
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 35, 0, input);

            	        throw nvae;
            	    }
            	    switch (alt35) {
            	        case 1 :
            	            // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2434:3: lv_label_5_1= RULE_ID
            	            {
            	            lv_label_5_1=(Token)match(input,RULE_ID,FOLLOW_RULE_ID_in_ruleChart5911); 

            	            			newLeafNode(lv_label_5_1, grammarAccess.getChartAccess().getLabelIDTerminalRuleCall_1_1_1_0_0()); 
            	            		

            	            	        if (current==null) {
            	            	            current = createModelElement(grammarAccess.getChartRule());
            	            	        }
            	                   		setWithLastConsumed(
            	                   			current, 
            	                   			"label",
            	                    		lv_label_5_1, 
            	                    		"ID");
            	            	    

            	            }
            	            break;
            	        case 2 :
            	            // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2449:8: lv_label_5_2= RULE_STRING
            	            {
            	            lv_label_5_2=(Token)match(input,RULE_STRING,FOLLOW_RULE_STRING_in_ruleChart5931); 

            	            			newLeafNode(lv_label_5_2, grammarAccess.getChartAccess().getLabelSTRINGTerminalRuleCall_1_1_1_0_1()); 
            	            		

            	            	        if (current==null) {
            	            	            current = createModelElement(grammarAccess.getChartRule());
            	            	        }
            	                   		setWithLastConsumed(
            	                   			current, 
            	                   			"label",
            	                    		lv_label_5_2, 
            	                    		"STRING");
            	            	    

            	            }
            	            break;

            	    }


            	    }


            	    }


            	    }


            	    }

            	     
            	    	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getChartAccess().getUnorderedGroup_1());
            	    	 				

            	    }


            	    }


            	    }
            	    break;
            	case 3 :
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2474:4: ({...}? => ( ({...}? => (otherlv_6= 'icon=' ( (lv_icon_7_0= ruleIcon ) ) ) ) ) )
            	    {
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2474:4: ({...}? => ( ({...}? => (otherlv_6= 'icon=' ( (lv_icon_7_0= ruleIcon ) ) ) ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2475:5: {...}? => ( ({...}? => (otherlv_6= 'icon=' ( (lv_icon_7_0= ruleIcon ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getChartAccess().getUnorderedGroup_1(), 2) ) {
            	        throw new FailedPredicateException(input, "ruleChart", "getUnorderedGroupHelper().canSelect(grammarAccess.getChartAccess().getUnorderedGroup_1(), 2)");
            	    }
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2475:102: ( ({...}? => (otherlv_6= 'icon=' ( (lv_icon_7_0= ruleIcon ) ) ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2476:6: ({...}? => (otherlv_6= 'icon=' ( (lv_icon_7_0= ruleIcon ) ) ) )
            	    {
            	     
            	    	 				  getUnorderedGroupHelper().select(grammarAccess.getChartAccess().getUnorderedGroup_1(), 2);
            	    	 				
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2479:6: ({...}? => (otherlv_6= 'icon=' ( (lv_icon_7_0= ruleIcon ) ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2479:7: {...}? => (otherlv_6= 'icon=' ( (lv_icon_7_0= ruleIcon ) ) )
            	    {
            	    if ( !((true)) ) {
            	        throw new FailedPredicateException(input, "ruleChart", "true");
            	    }
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2479:16: (otherlv_6= 'icon=' ( (lv_icon_7_0= ruleIcon ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2479:18: otherlv_6= 'icon=' ( (lv_icon_7_0= ruleIcon ) )
            	    {
            	    otherlv_6=(Token)match(input,14,FOLLOW_14_in_ruleChart6007); 

            	        	newLeafNode(otherlv_6, grammarAccess.getChartAccess().getIconKeyword_1_2_0());
            	        
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2483:1: ( (lv_icon_7_0= ruleIcon ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2484:1: (lv_icon_7_0= ruleIcon )
            	    {
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2484:1: (lv_icon_7_0= ruleIcon )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2485:3: lv_icon_7_0= ruleIcon
            	    {
            	     
            	    	        newCompositeNode(grammarAccess.getChartAccess().getIconIconParserRuleCall_1_2_1_0()); 
            	    	    
            	    pushFollow(FOLLOW_ruleIcon_in_ruleChart6028);
            	    lv_icon_7_0=ruleIcon();

            	    state._fsp--;


            	    	        if (current==null) {
            	    	            current = createModelElementForParent(grammarAccess.getChartRule());
            	    	        }
            	           		set(
            	           			current, 
            	           			"icon",
            	            		lv_icon_7_0, 
            	            		"Icon");
            	    	        afterParserOrEnumRuleCall();
            	    	    

            	    }


            	    }


            	    }


            	    }

            	     
            	    	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getChartAccess().getUnorderedGroup_1());
            	    	 				

            	    }


            	    }


            	    }
            	    break;
            	case 4 :
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2508:4: ({...}? => ( ({...}? => (otherlv_8= 'service=' ( (lv_service_9_0= RULE_STRING ) ) ) ) ) )
            	    {
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2508:4: ({...}? => ( ({...}? => (otherlv_8= 'service=' ( (lv_service_9_0= RULE_STRING ) ) ) ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2509:5: {...}? => ( ({...}? => (otherlv_8= 'service=' ( (lv_service_9_0= RULE_STRING ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getChartAccess().getUnorderedGroup_1(), 3) ) {
            	        throw new FailedPredicateException(input, "ruleChart", "getUnorderedGroupHelper().canSelect(grammarAccess.getChartAccess().getUnorderedGroup_1(), 3)");
            	    }
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2509:102: ( ({...}? => (otherlv_8= 'service=' ( (lv_service_9_0= RULE_STRING ) ) ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2510:6: ({...}? => (otherlv_8= 'service=' ( (lv_service_9_0= RULE_STRING ) ) ) )
            	    {
            	     
            	    	 				  getUnorderedGroupHelper().select(grammarAccess.getChartAccess().getUnorderedGroup_1(), 3);
            	    	 				
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2513:6: ({...}? => (otherlv_8= 'service=' ( (lv_service_9_0= RULE_STRING ) ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2513:7: {...}? => (otherlv_8= 'service=' ( (lv_service_9_0= RULE_STRING ) ) )
            	    {
            	    if ( !((true)) ) {
            	        throw new FailedPredicateException(input, "ruleChart", "true");
            	    }
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2513:16: (otherlv_8= 'service=' ( (lv_service_9_0= RULE_STRING ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2513:18: otherlv_8= 'service=' ( (lv_service_9_0= RULE_STRING ) )
            	    {
            	    otherlv_8=(Token)match(input,33,FOLLOW_33_in_ruleChart6096); 

            	        	newLeafNode(otherlv_8, grammarAccess.getChartAccess().getServiceKeyword_1_3_0());
            	        
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2517:1: ( (lv_service_9_0= RULE_STRING ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2518:1: (lv_service_9_0= RULE_STRING )
            	    {
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2518:1: (lv_service_9_0= RULE_STRING )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2519:3: lv_service_9_0= RULE_STRING
            	    {
            	    lv_service_9_0=(Token)match(input,RULE_STRING,FOLLOW_RULE_STRING_in_ruleChart6113); 

            	    			newLeafNode(lv_service_9_0, grammarAccess.getChartAccess().getServiceSTRINGTerminalRuleCall_1_3_1_0()); 
            	    		

            	    	        if (current==null) {
            	    	            current = createModelElement(grammarAccess.getChartRule());
            	    	        }
            	           		setWithLastConsumed(
            	           			current, 
            	           			"service",
            	            		lv_service_9_0, 
            	            		"STRING");
            	    	    

            	    }


            	    }


            	    }


            	    }

            	     
            	    	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getChartAccess().getUnorderedGroup_1());
            	    	 				

            	    }


            	    }


            	    }
            	    break;
            	case 5 :
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2542:4: ({...}? => ( ({...}? => (otherlv_10= 'refresh=' ( (lv_refresh_11_0= RULE_INT ) ) ) ) ) )
            	    {
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2542:4: ({...}? => ( ({...}? => (otherlv_10= 'refresh=' ( (lv_refresh_11_0= RULE_INT ) ) ) ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2543:5: {...}? => ( ({...}? => (otherlv_10= 'refresh=' ( (lv_refresh_11_0= RULE_INT ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getChartAccess().getUnorderedGroup_1(), 4) ) {
            	        throw new FailedPredicateException(input, "ruleChart", "getUnorderedGroupHelper().canSelect(grammarAccess.getChartAccess().getUnorderedGroup_1(), 4)");
            	    }
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2543:102: ( ({...}? => (otherlv_10= 'refresh=' ( (lv_refresh_11_0= RULE_INT ) ) ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2544:6: ({...}? => (otherlv_10= 'refresh=' ( (lv_refresh_11_0= RULE_INT ) ) ) )
            	    {
            	     
            	    	 				  getUnorderedGroupHelper().select(grammarAccess.getChartAccess().getUnorderedGroup_1(), 4);
            	    	 				
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2547:6: ({...}? => (otherlv_10= 'refresh=' ( (lv_refresh_11_0= RULE_INT ) ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2547:7: {...}? => (otherlv_10= 'refresh=' ( (lv_refresh_11_0= RULE_INT ) ) )
            	    {
            	    if ( !((true)) ) {
            	        throw new FailedPredicateException(input, "ruleChart", "true");
            	    }
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2547:16: (otherlv_10= 'refresh=' ( (lv_refresh_11_0= RULE_INT ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2547:18: otherlv_10= 'refresh=' ( (lv_refresh_11_0= RULE_INT ) )
            	    {
            	    otherlv_10=(Token)match(input,28,FOLLOW_28_in_ruleChart6186); 

            	        	newLeafNode(otherlv_10, grammarAccess.getChartAccess().getRefreshKeyword_1_4_0());
            	        
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2551:1: ( (lv_refresh_11_0= RULE_INT ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2552:1: (lv_refresh_11_0= RULE_INT )
            	    {
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2552:1: (lv_refresh_11_0= RULE_INT )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2553:3: lv_refresh_11_0= RULE_INT
            	    {
            	    lv_refresh_11_0=(Token)match(input,RULE_INT,FOLLOW_RULE_INT_in_ruleChart6203); 

            	    			newLeafNode(lv_refresh_11_0, grammarAccess.getChartAccess().getRefreshINTTerminalRuleCall_1_4_1_0()); 
            	    		

            	    	        if (current==null) {
            	    	            current = createModelElement(grammarAccess.getChartRule());
            	    	        }
            	           		setWithLastConsumed(
            	           			current, 
            	           			"refresh",
            	            		lv_refresh_11_0, 
            	            		"INT");
            	    	    

            	    }


            	    }


            	    }


            	    }

            	     
            	    	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getChartAccess().getUnorderedGroup_1());
            	    	 				

            	    }


            	    }


            	    }
            	    break;
            	case 6 :
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2576:4: ({...}? => ( ({...}? => (otherlv_12= 'period=' ( (lv_period_13_0= RULE_ID ) ) ) ) ) )
            	    {
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2576:4: ({...}? => ( ({...}? => (otherlv_12= 'period=' ( (lv_period_13_0= RULE_ID ) ) ) ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2577:5: {...}? => ( ({...}? => (otherlv_12= 'period=' ( (lv_period_13_0= RULE_ID ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getChartAccess().getUnorderedGroup_1(), 5) ) {
            	        throw new FailedPredicateException(input, "ruleChart", "getUnorderedGroupHelper().canSelect(grammarAccess.getChartAccess().getUnorderedGroup_1(), 5)");
            	    }
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2577:102: ( ({...}? => (otherlv_12= 'period=' ( (lv_period_13_0= RULE_ID ) ) ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2578:6: ({...}? => (otherlv_12= 'period=' ( (lv_period_13_0= RULE_ID ) ) ) )
            	    {
            	     
            	    	 				  getUnorderedGroupHelper().select(grammarAccess.getChartAccess().getUnorderedGroup_1(), 5);
            	    	 				
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2581:6: ({...}? => (otherlv_12= 'period=' ( (lv_period_13_0= RULE_ID ) ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2581:7: {...}? => (otherlv_12= 'period=' ( (lv_period_13_0= RULE_ID ) ) )
            	    {
            	    if ( !((true)) ) {
            	        throw new FailedPredicateException(input, "ruleChart", "true");
            	    }
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2581:16: (otherlv_12= 'period=' ( (lv_period_13_0= RULE_ID ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2581:18: otherlv_12= 'period=' ( (lv_period_13_0= RULE_ID ) )
            	    {
            	    otherlv_12=(Token)match(input,34,FOLLOW_34_in_ruleChart6276); 

            	        	newLeafNode(otherlv_12, grammarAccess.getChartAccess().getPeriodKeyword_1_5_0());
            	        
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2585:1: ( (lv_period_13_0= RULE_ID ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2586:1: (lv_period_13_0= RULE_ID )
            	    {
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2586:1: (lv_period_13_0= RULE_ID )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2587:3: lv_period_13_0= RULE_ID
            	    {
            	    lv_period_13_0=(Token)match(input,RULE_ID,FOLLOW_RULE_ID_in_ruleChart6293); 

            	    			newLeafNode(lv_period_13_0, grammarAccess.getChartAccess().getPeriodIDTerminalRuleCall_1_5_1_0()); 
            	    		

            	    	        if (current==null) {
            	    	            current = createModelElement(grammarAccess.getChartRule());
            	    	        }
            	           		setWithLastConsumed(
            	           			current, 
            	           			"period",
            	            		lv_period_13_0, 
            	            		"ID");
            	    	    

            	    }


            	    }


            	    }


            	    }

            	     
            	    	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getChartAccess().getUnorderedGroup_1());
            	    	 				

            	    }


            	    }


            	    }
            	    break;
            	case 7 :
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2610:4: ({...}? => ( ({...}? => (otherlv_14= 'labelcolor=[' ( ( (lv_LabelColor_15_0= ruleColorArray ) ) (otherlv_16= ',' ( (lv_LabelColor_17_0= ruleColorArray ) ) )* otherlv_18= ']' ) ) ) ) )
            	    {
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2610:4: ({...}? => ( ({...}? => (otherlv_14= 'labelcolor=[' ( ( (lv_LabelColor_15_0= ruleColorArray ) ) (otherlv_16= ',' ( (lv_LabelColor_17_0= ruleColorArray ) ) )* otherlv_18= ']' ) ) ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2611:5: {...}? => ( ({...}? => (otherlv_14= 'labelcolor=[' ( ( (lv_LabelColor_15_0= ruleColorArray ) ) (otherlv_16= ',' ( (lv_LabelColor_17_0= ruleColorArray ) ) )* otherlv_18= ']' ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getChartAccess().getUnorderedGroup_1(), 6) ) {
            	        throw new FailedPredicateException(input, "ruleChart", "getUnorderedGroupHelper().canSelect(grammarAccess.getChartAccess().getUnorderedGroup_1(), 6)");
            	    }
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2611:102: ( ({...}? => (otherlv_14= 'labelcolor=[' ( ( (lv_LabelColor_15_0= ruleColorArray ) ) (otherlv_16= ',' ( (lv_LabelColor_17_0= ruleColorArray ) ) )* otherlv_18= ']' ) ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2612:6: ({...}? => (otherlv_14= 'labelcolor=[' ( ( (lv_LabelColor_15_0= ruleColorArray ) ) (otherlv_16= ',' ( (lv_LabelColor_17_0= ruleColorArray ) ) )* otherlv_18= ']' ) ) )
            	    {
            	     
            	    	 				  getUnorderedGroupHelper().select(grammarAccess.getChartAccess().getUnorderedGroup_1(), 6);
            	    	 				
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2615:6: ({...}? => (otherlv_14= 'labelcolor=[' ( ( (lv_LabelColor_15_0= ruleColorArray ) ) (otherlv_16= ',' ( (lv_LabelColor_17_0= ruleColorArray ) ) )* otherlv_18= ']' ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2615:7: {...}? => (otherlv_14= 'labelcolor=[' ( ( (lv_LabelColor_15_0= ruleColorArray ) ) (otherlv_16= ',' ( (lv_LabelColor_17_0= ruleColorArray ) ) )* otherlv_18= ']' ) )
            	    {
            	    if ( !((true)) ) {
            	        throw new FailedPredicateException(input, "ruleChart", "true");
            	    }
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2615:16: (otherlv_14= 'labelcolor=[' ( ( (lv_LabelColor_15_0= ruleColorArray ) ) (otherlv_16= ',' ( (lv_LabelColor_17_0= ruleColorArray ) ) )* otherlv_18= ']' ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2615:18: otherlv_14= 'labelcolor=[' ( ( (lv_LabelColor_15_0= ruleColorArray ) ) (otherlv_16= ',' ( (lv_LabelColor_17_0= ruleColorArray ) ) )* otherlv_18= ']' )
            	    {
            	    otherlv_14=(Token)match(input,19,FOLLOW_19_in_ruleChart6366); 

            	        	newLeafNode(otherlv_14, grammarAccess.getChartAccess().getLabelcolorKeyword_1_6_0());
            	        
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2619:1: ( ( (lv_LabelColor_15_0= ruleColorArray ) ) (otherlv_16= ',' ( (lv_LabelColor_17_0= ruleColorArray ) ) )* otherlv_18= ']' )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2619:2: ( (lv_LabelColor_15_0= ruleColorArray ) ) (otherlv_16= ',' ( (lv_LabelColor_17_0= ruleColorArray ) ) )* otherlv_18= ']'
            	    {
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2619:2: ( (lv_LabelColor_15_0= ruleColorArray ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2620:1: (lv_LabelColor_15_0= ruleColorArray )
            	    {
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2620:1: (lv_LabelColor_15_0= ruleColorArray )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2621:3: lv_LabelColor_15_0= ruleColorArray
            	    {
            	     
            	    	        newCompositeNode(grammarAccess.getChartAccess().getLabelColorColorArrayParserRuleCall_1_6_1_0_0()); 
            	    	    
            	    pushFollow(FOLLOW_ruleColorArray_in_ruleChart6388);
            	    lv_LabelColor_15_0=ruleColorArray();

            	    state._fsp--;


            	    	        if (current==null) {
            	    	            current = createModelElementForParent(grammarAccess.getChartRule());
            	    	        }
            	           		add(
            	           			current, 
            	           			"LabelColor",
            	            		lv_LabelColor_15_0, 
            	            		"ColorArray");
            	    	        afterParserOrEnumRuleCall();
            	    	    

            	    }


            	    }

            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2637:2: (otherlv_16= ',' ( (lv_LabelColor_17_0= ruleColorArray ) ) )*
            	    loop36:
            	    do {
            	        int alt36=2;
            	        int LA36_0 = input.LA(1);

            	        if ( (LA36_0==20) ) {
            	            alt36=1;
            	        }


            	        switch (alt36) {
            	    	case 1 :
            	    	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2637:4: otherlv_16= ',' ( (lv_LabelColor_17_0= ruleColorArray ) )
            	    	    {
            	    	    otherlv_16=(Token)match(input,20,FOLLOW_20_in_ruleChart6401); 

            	    	        	newLeafNode(otherlv_16, grammarAccess.getChartAccess().getCommaKeyword_1_6_1_1_0());
            	    	        
            	    	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2641:1: ( (lv_LabelColor_17_0= ruleColorArray ) )
            	    	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2642:1: (lv_LabelColor_17_0= ruleColorArray )
            	    	    {
            	    	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2642:1: (lv_LabelColor_17_0= ruleColorArray )
            	    	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2643:3: lv_LabelColor_17_0= ruleColorArray
            	    	    {
            	    	     
            	    	    	        newCompositeNode(grammarAccess.getChartAccess().getLabelColorColorArrayParserRuleCall_1_6_1_1_1_0()); 
            	    	    	    
            	    	    pushFollow(FOLLOW_ruleColorArray_in_ruleChart6422);
            	    	    lv_LabelColor_17_0=ruleColorArray();

            	    	    state._fsp--;


            	    	    	        if (current==null) {
            	    	    	            current = createModelElementForParent(grammarAccess.getChartRule());
            	    	    	        }
            	    	           		add(
            	    	           			current, 
            	    	           			"LabelColor",
            	    	            		lv_LabelColor_17_0, 
            	    	            		"ColorArray");
            	    	    	        afterParserOrEnumRuleCall();
            	    	    	    

            	    	    }


            	    	    }


            	    	    }
            	    	    break;

            	    	default :
            	    	    break loop36;
            	        }
            	    } while (true);

            	    otherlv_18=(Token)match(input,21,FOLLOW_21_in_ruleChart6436); 

            	        	newLeafNode(otherlv_18, grammarAccess.getChartAccess().getRightSquareBracketKeyword_1_6_1_2());
            	        

            	    }


            	    }


            	    }

            	     
            	    	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getChartAccess().getUnorderedGroup_1());
            	    	 				

            	    }


            	    }


            	    }
            	    break;
            	case 8 :
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2670:4: ({...}? => ( ({...}? => (otherlv_19= 'valuecolor=[' ( ( (lv_ValueColor_20_0= ruleColorArray ) ) (otherlv_21= ',' ( (lv_ValueColor_22_0= ruleColorArray ) ) )* otherlv_23= ']' ) ) ) ) )
            	    {
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2670:4: ({...}? => ( ({...}? => (otherlv_19= 'valuecolor=[' ( ( (lv_ValueColor_20_0= ruleColorArray ) ) (otherlv_21= ',' ( (lv_ValueColor_22_0= ruleColorArray ) ) )* otherlv_23= ']' ) ) ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2671:5: {...}? => ( ({...}? => (otherlv_19= 'valuecolor=[' ( ( (lv_ValueColor_20_0= ruleColorArray ) ) (otherlv_21= ',' ( (lv_ValueColor_22_0= ruleColorArray ) ) )* otherlv_23= ']' ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getChartAccess().getUnorderedGroup_1(), 7) ) {
            	        throw new FailedPredicateException(input, "ruleChart", "getUnorderedGroupHelper().canSelect(grammarAccess.getChartAccess().getUnorderedGroup_1(), 7)");
            	    }
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2671:102: ( ({...}? => (otherlv_19= 'valuecolor=[' ( ( (lv_ValueColor_20_0= ruleColorArray ) ) (otherlv_21= ',' ( (lv_ValueColor_22_0= ruleColorArray ) ) )* otherlv_23= ']' ) ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2672:6: ({...}? => (otherlv_19= 'valuecolor=[' ( ( (lv_ValueColor_20_0= ruleColorArray ) ) (otherlv_21= ',' ( (lv_ValueColor_22_0= ruleColorArray ) ) )* otherlv_23= ']' ) ) )
            	    {
            	     
            	    	 				  getUnorderedGroupHelper().select(grammarAccess.getChartAccess().getUnorderedGroup_1(), 7);
            	    	 				
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2675:6: ({...}? => (otherlv_19= 'valuecolor=[' ( ( (lv_ValueColor_20_0= ruleColorArray ) ) (otherlv_21= ',' ( (lv_ValueColor_22_0= ruleColorArray ) ) )* otherlv_23= ']' ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2675:7: {...}? => (otherlv_19= 'valuecolor=[' ( ( (lv_ValueColor_20_0= ruleColorArray ) ) (otherlv_21= ',' ( (lv_ValueColor_22_0= ruleColorArray ) ) )* otherlv_23= ']' ) )
            	    {
            	    if ( !((true)) ) {
            	        throw new FailedPredicateException(input, "ruleChart", "true");
            	    }
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2675:16: (otherlv_19= 'valuecolor=[' ( ( (lv_ValueColor_20_0= ruleColorArray ) ) (otherlv_21= ',' ( (lv_ValueColor_22_0= ruleColorArray ) ) )* otherlv_23= ']' ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2675:18: otherlv_19= 'valuecolor=[' ( ( (lv_ValueColor_20_0= ruleColorArray ) ) (otherlv_21= ',' ( (lv_ValueColor_22_0= ruleColorArray ) ) )* otherlv_23= ']' )
            	    {
            	    otherlv_19=(Token)match(input,22,FOLLOW_22_in_ruleChart6505); 

            	        	newLeafNode(otherlv_19, grammarAccess.getChartAccess().getValuecolorKeyword_1_7_0());
            	        
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2679:1: ( ( (lv_ValueColor_20_0= ruleColorArray ) ) (otherlv_21= ',' ( (lv_ValueColor_22_0= ruleColorArray ) ) )* otherlv_23= ']' )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2679:2: ( (lv_ValueColor_20_0= ruleColorArray ) ) (otherlv_21= ',' ( (lv_ValueColor_22_0= ruleColorArray ) ) )* otherlv_23= ']'
            	    {
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2679:2: ( (lv_ValueColor_20_0= ruleColorArray ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2680:1: (lv_ValueColor_20_0= ruleColorArray )
            	    {
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2680:1: (lv_ValueColor_20_0= ruleColorArray )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2681:3: lv_ValueColor_20_0= ruleColorArray
            	    {
            	     
            	    	        newCompositeNode(grammarAccess.getChartAccess().getValueColorColorArrayParserRuleCall_1_7_1_0_0()); 
            	    	    
            	    pushFollow(FOLLOW_ruleColorArray_in_ruleChart6527);
            	    lv_ValueColor_20_0=ruleColorArray();

            	    state._fsp--;


            	    	        if (current==null) {
            	    	            current = createModelElementForParent(grammarAccess.getChartRule());
            	    	        }
            	           		add(
            	           			current, 
            	           			"ValueColor",
            	            		lv_ValueColor_20_0, 
            	            		"ColorArray");
            	    	        afterParserOrEnumRuleCall();
            	    	    

            	    }


            	    }

            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2697:2: (otherlv_21= ',' ( (lv_ValueColor_22_0= ruleColorArray ) ) )*
            	    loop37:
            	    do {
            	        int alt37=2;
            	        int LA37_0 = input.LA(1);

            	        if ( (LA37_0==20) ) {
            	            alt37=1;
            	        }


            	        switch (alt37) {
            	    	case 1 :
            	    	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2697:4: otherlv_21= ',' ( (lv_ValueColor_22_0= ruleColorArray ) )
            	    	    {
            	    	    otherlv_21=(Token)match(input,20,FOLLOW_20_in_ruleChart6540); 

            	    	        	newLeafNode(otherlv_21, grammarAccess.getChartAccess().getCommaKeyword_1_7_1_1_0());
            	    	        
            	    	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2701:1: ( (lv_ValueColor_22_0= ruleColorArray ) )
            	    	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2702:1: (lv_ValueColor_22_0= ruleColorArray )
            	    	    {
            	    	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2702:1: (lv_ValueColor_22_0= ruleColorArray )
            	    	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2703:3: lv_ValueColor_22_0= ruleColorArray
            	    	    {
            	    	     
            	    	    	        newCompositeNode(grammarAccess.getChartAccess().getValueColorColorArrayParserRuleCall_1_7_1_1_1_0()); 
            	    	    	    
            	    	    pushFollow(FOLLOW_ruleColorArray_in_ruleChart6561);
            	    	    lv_ValueColor_22_0=ruleColorArray();

            	    	    state._fsp--;


            	    	    	        if (current==null) {
            	    	    	            current = createModelElementForParent(grammarAccess.getChartRule());
            	    	    	        }
            	    	           		add(
            	    	           			current, 
            	    	           			"ValueColor",
            	    	            		lv_ValueColor_22_0, 
            	    	            		"ColorArray");
            	    	    	        afterParserOrEnumRuleCall();
            	    	    	    

            	    	    }


            	    	    }


            	    	    }
            	    	    break;

            	    	default :
            	    	    break loop37;
            	        }
            	    } while (true);

            	    otherlv_23=(Token)match(input,21,FOLLOW_21_in_ruleChart6575); 

            	        	newLeafNode(otherlv_23, grammarAccess.getChartAccess().getRightSquareBracketKeyword_1_7_1_2());
            	        

            	    }


            	    }


            	    }

            	     
            	    	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getChartAccess().getUnorderedGroup_1());
            	    	 				

            	    }


            	    }


            	    }
            	    break;
            	case 9 :
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2730:4: ({...}? => ( ({...}? => (otherlv_24= 'visibility=[' ( ( (lv_Visibility_25_0= ruleVisibilityRule ) ) (otherlv_26= ',' ( (lv_Visibility_27_0= ruleVisibilityRule ) ) )* otherlv_28= ']' ) ) ) ) )
            	    {
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2730:4: ({...}? => ( ({...}? => (otherlv_24= 'visibility=[' ( ( (lv_Visibility_25_0= ruleVisibilityRule ) ) (otherlv_26= ',' ( (lv_Visibility_27_0= ruleVisibilityRule ) ) )* otherlv_28= ']' ) ) ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2731:5: {...}? => ( ({...}? => (otherlv_24= 'visibility=[' ( ( (lv_Visibility_25_0= ruleVisibilityRule ) ) (otherlv_26= ',' ( (lv_Visibility_27_0= ruleVisibilityRule ) ) )* otherlv_28= ']' ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getChartAccess().getUnorderedGroup_1(), 8) ) {
            	        throw new FailedPredicateException(input, "ruleChart", "getUnorderedGroupHelper().canSelect(grammarAccess.getChartAccess().getUnorderedGroup_1(), 8)");
            	    }
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2731:102: ( ({...}? => (otherlv_24= 'visibility=[' ( ( (lv_Visibility_25_0= ruleVisibilityRule ) ) (otherlv_26= ',' ( (lv_Visibility_27_0= ruleVisibilityRule ) ) )* otherlv_28= ']' ) ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2732:6: ({...}? => (otherlv_24= 'visibility=[' ( ( (lv_Visibility_25_0= ruleVisibilityRule ) ) (otherlv_26= ',' ( (lv_Visibility_27_0= ruleVisibilityRule ) ) )* otherlv_28= ']' ) ) )
            	    {
            	     
            	    	 				  getUnorderedGroupHelper().select(grammarAccess.getChartAccess().getUnorderedGroup_1(), 8);
            	    	 				
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2735:6: ({...}? => (otherlv_24= 'visibility=[' ( ( (lv_Visibility_25_0= ruleVisibilityRule ) ) (otherlv_26= ',' ( (lv_Visibility_27_0= ruleVisibilityRule ) ) )* otherlv_28= ']' ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2735:7: {...}? => (otherlv_24= 'visibility=[' ( ( (lv_Visibility_25_0= ruleVisibilityRule ) ) (otherlv_26= ',' ( (lv_Visibility_27_0= ruleVisibilityRule ) ) )* otherlv_28= ']' ) )
            	    {
            	    if ( !((true)) ) {
            	        throw new FailedPredicateException(input, "ruleChart", "true");
            	    }
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2735:16: (otherlv_24= 'visibility=[' ( ( (lv_Visibility_25_0= ruleVisibilityRule ) ) (otherlv_26= ',' ( (lv_Visibility_27_0= ruleVisibilityRule ) ) )* otherlv_28= ']' ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2735:18: otherlv_24= 'visibility=[' ( ( (lv_Visibility_25_0= ruleVisibilityRule ) ) (otherlv_26= ',' ( (lv_Visibility_27_0= ruleVisibilityRule ) ) )* otherlv_28= ']' )
            	    {
            	    otherlv_24=(Token)match(input,23,FOLLOW_23_in_ruleChart6644); 

            	        	newLeafNode(otherlv_24, grammarAccess.getChartAccess().getVisibilityKeyword_1_8_0());
            	        
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2739:1: ( ( (lv_Visibility_25_0= ruleVisibilityRule ) ) (otherlv_26= ',' ( (lv_Visibility_27_0= ruleVisibilityRule ) ) )* otherlv_28= ']' )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2739:2: ( (lv_Visibility_25_0= ruleVisibilityRule ) ) (otherlv_26= ',' ( (lv_Visibility_27_0= ruleVisibilityRule ) ) )* otherlv_28= ']'
            	    {
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2739:2: ( (lv_Visibility_25_0= ruleVisibilityRule ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2740:1: (lv_Visibility_25_0= ruleVisibilityRule )
            	    {
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2740:1: (lv_Visibility_25_0= ruleVisibilityRule )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2741:3: lv_Visibility_25_0= ruleVisibilityRule
            	    {
            	     
            	    	        newCompositeNode(grammarAccess.getChartAccess().getVisibilityVisibilityRuleParserRuleCall_1_8_1_0_0()); 
            	    	    
            	    pushFollow(FOLLOW_ruleVisibilityRule_in_ruleChart6666);
            	    lv_Visibility_25_0=ruleVisibilityRule();

            	    state._fsp--;


            	    	        if (current==null) {
            	    	            current = createModelElementForParent(grammarAccess.getChartRule());
            	    	        }
            	           		add(
            	           			current, 
            	           			"Visibility",
            	            		lv_Visibility_25_0, 
            	            		"VisibilityRule");
            	    	        afterParserOrEnumRuleCall();
            	    	    

            	    }


            	    }

            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2757:2: (otherlv_26= ',' ( (lv_Visibility_27_0= ruleVisibilityRule ) ) )*
            	    loop38:
            	    do {
            	        int alt38=2;
            	        int LA38_0 = input.LA(1);

            	        if ( (LA38_0==20) ) {
            	            alt38=1;
            	        }


            	        switch (alt38) {
            	    	case 1 :
            	    	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2757:4: otherlv_26= ',' ( (lv_Visibility_27_0= ruleVisibilityRule ) )
            	    	    {
            	    	    otherlv_26=(Token)match(input,20,FOLLOW_20_in_ruleChart6679); 

            	    	        	newLeafNode(otherlv_26, grammarAccess.getChartAccess().getCommaKeyword_1_8_1_1_0());
            	    	        
            	    	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2761:1: ( (lv_Visibility_27_0= ruleVisibilityRule ) )
            	    	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2762:1: (lv_Visibility_27_0= ruleVisibilityRule )
            	    	    {
            	    	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2762:1: (lv_Visibility_27_0= ruleVisibilityRule )
            	    	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2763:3: lv_Visibility_27_0= ruleVisibilityRule
            	    	    {
            	    	     
            	    	    	        newCompositeNode(grammarAccess.getChartAccess().getVisibilityVisibilityRuleParserRuleCall_1_8_1_1_1_0()); 
            	    	    	    
            	    	    pushFollow(FOLLOW_ruleVisibilityRule_in_ruleChart6700);
            	    	    lv_Visibility_27_0=ruleVisibilityRule();

            	    	    state._fsp--;


            	    	    	        if (current==null) {
            	    	    	            current = createModelElementForParent(grammarAccess.getChartRule());
            	    	    	        }
            	    	           		add(
            	    	           			current, 
            	    	           			"Visibility",
            	    	            		lv_Visibility_27_0, 
            	    	            		"VisibilityRule");
            	    	    	        afterParserOrEnumRuleCall();
            	    	    	    

            	    	    }


            	    	    }


            	    	    }
            	    	    break;

            	    	default :
            	    	    break loop38;
            	        }
            	    } while (true);

            	    otherlv_28=(Token)match(input,21,FOLLOW_21_in_ruleChart6714); 

            	        	newLeafNode(otherlv_28, grammarAccess.getChartAccess().getRightSquareBracketKeyword_1_8_1_2());
            	        

            	    }


            	    }


            	    }

            	     
            	    	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getChartAccess().getUnorderedGroup_1());
            	    	 				

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    if ( cnt39 >= 1 ) break loop39;
                        EarlyExitException eee =
                            new EarlyExitException(39, input);
                        throw eee;
                }
                cnt39++;
            } while (true);

            if ( ! getUnorderedGroupHelper().canLeave(grammarAccess.getChartAccess().getUnorderedGroup_1()) ) {
                throw new FailedPredicateException(input, "ruleChart", "getUnorderedGroupHelper().canLeave(grammarAccess.getChartAccess().getUnorderedGroup_1())");
            }

            }


            }

             
            	  getUnorderedGroupHelper().leave(grammarAccess.getChartAccess().getUnorderedGroup_1());
            	

            }


            }


            }

             leaveRule(); 
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleChart"


    // $ANTLR start "entryRuleWebview"
    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2806:1: entryRuleWebview returns [EObject current=null] : iv_ruleWebview= ruleWebview EOF ;
    public final EObject entryRuleWebview() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleWebview = null;


        try {
            // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2807:2: (iv_ruleWebview= ruleWebview EOF )
            // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2808:2: iv_ruleWebview= ruleWebview EOF
            {
             newCompositeNode(grammarAccess.getWebviewRule()); 
            pushFollow(FOLLOW_ruleWebview_in_entryRuleWebview6798);
            iv_ruleWebview=ruleWebview();

            state._fsp--;

             current =iv_ruleWebview; 
            match(input,EOF,FOLLOW_EOF_in_entryRuleWebview6808); 

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleWebview"


    // $ANTLR start "ruleWebview"
    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2815:1: ruleWebview returns [EObject current=null] : (otherlv_0= 'Webview' ( ( ( ( ({...}? => ( ({...}? => (otherlv_2= 'item=' ( (lv_item_3_0= ruleItemRef ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= 'label=' ( ( (lv_label_5_1= RULE_ID | lv_label_5_2= RULE_STRING ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= 'icon=' ( (lv_icon_7_0= ruleIcon ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_8= 'height=' ( (lv_height_9_0= RULE_INT ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= 'url=' ( (lv_url_11_0= RULE_STRING ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_12= 'labelcolor=[' ( ( (lv_LabelColor_13_0= ruleColorArray ) ) (otherlv_14= ',' ( (lv_LabelColor_15_0= ruleColorArray ) ) )* otherlv_16= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= 'valuecolor=[' ( ( (lv_ValueColor_18_0= ruleColorArray ) ) (otherlv_19= ',' ( (lv_ValueColor_20_0= ruleColorArray ) ) )* otherlv_21= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_22= 'visibility=[' ( ( (lv_Visibility_23_0= ruleVisibilityRule ) ) (otherlv_24= ',' ( (lv_Visibility_25_0= ruleVisibilityRule ) ) )* otherlv_26= ']' ) ) ) ) ) )+ {...}?) ) ) ) ;
    public final EObject ruleWebview() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_2=null;
        Token otherlv_4=null;
        Token lv_label_5_1=null;
        Token lv_label_5_2=null;
        Token otherlv_6=null;
        Token otherlv_8=null;
        Token lv_height_9_0=null;
        Token otherlv_10=null;
        Token lv_url_11_0=null;
        Token otherlv_12=null;
        Token otherlv_14=null;
        Token otherlv_16=null;
        Token otherlv_17=null;
        Token otherlv_19=null;
        Token otherlv_21=null;
        Token otherlv_22=null;
        Token otherlv_24=null;
        Token otherlv_26=null;
        AntlrDatatypeRuleToken lv_item_3_0 = null;

        AntlrDatatypeRuleToken lv_icon_7_0 = null;

        EObject lv_LabelColor_13_0 = null;

        EObject lv_LabelColor_15_0 = null;

        EObject lv_ValueColor_18_0 = null;

        EObject lv_ValueColor_20_0 = null;

        EObject lv_Visibility_23_0 = null;

        EObject lv_Visibility_25_0 = null;


         enterRule(); 
            
        try {
            // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2818:28: ( (otherlv_0= 'Webview' ( ( ( ( ({...}? => ( ({...}? => (otherlv_2= 'item=' ( (lv_item_3_0= ruleItemRef ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= 'label=' ( ( (lv_label_5_1= RULE_ID | lv_label_5_2= RULE_STRING ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= 'icon=' ( (lv_icon_7_0= ruleIcon ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_8= 'height=' ( (lv_height_9_0= RULE_INT ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= 'url=' ( (lv_url_11_0= RULE_STRING ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_12= 'labelcolor=[' ( ( (lv_LabelColor_13_0= ruleColorArray ) ) (otherlv_14= ',' ( (lv_LabelColor_15_0= ruleColorArray ) ) )* otherlv_16= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= 'valuecolor=[' ( ( (lv_ValueColor_18_0= ruleColorArray ) ) (otherlv_19= ',' ( (lv_ValueColor_20_0= ruleColorArray ) ) )* otherlv_21= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_22= 'visibility=[' ( ( (lv_Visibility_23_0= ruleVisibilityRule ) ) (otherlv_24= ',' ( (lv_Visibility_25_0= ruleVisibilityRule ) ) )* otherlv_26= ']' ) ) ) ) ) )+ {...}?) ) ) ) )
            // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2819:1: (otherlv_0= 'Webview' ( ( ( ( ({...}? => ( ({...}? => (otherlv_2= 'item=' ( (lv_item_3_0= ruleItemRef ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= 'label=' ( ( (lv_label_5_1= RULE_ID | lv_label_5_2= RULE_STRING ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= 'icon=' ( (lv_icon_7_0= ruleIcon ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_8= 'height=' ( (lv_height_9_0= RULE_INT ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= 'url=' ( (lv_url_11_0= RULE_STRING ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_12= 'labelcolor=[' ( ( (lv_LabelColor_13_0= ruleColorArray ) ) (otherlv_14= ',' ( (lv_LabelColor_15_0= ruleColorArray ) ) )* otherlv_16= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= 'valuecolor=[' ( ( (lv_ValueColor_18_0= ruleColorArray ) ) (otherlv_19= ',' ( (lv_ValueColor_20_0= ruleColorArray ) ) )* otherlv_21= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_22= 'visibility=[' ( ( (lv_Visibility_23_0= ruleVisibilityRule ) ) (otherlv_24= ',' ( (lv_Visibility_25_0= ruleVisibilityRule ) ) )* otherlv_26= ']' ) ) ) ) ) )+ {...}?) ) ) )
            {
            // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2819:1: (otherlv_0= 'Webview' ( ( ( ( ({...}? => ( ({...}? => (otherlv_2= 'item=' ( (lv_item_3_0= ruleItemRef ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= 'label=' ( ( (lv_label_5_1= RULE_ID | lv_label_5_2= RULE_STRING ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= 'icon=' ( (lv_icon_7_0= ruleIcon ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_8= 'height=' ( (lv_height_9_0= RULE_INT ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= 'url=' ( (lv_url_11_0= RULE_STRING ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_12= 'labelcolor=[' ( ( (lv_LabelColor_13_0= ruleColorArray ) ) (otherlv_14= ',' ( (lv_LabelColor_15_0= ruleColorArray ) ) )* otherlv_16= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= 'valuecolor=[' ( ( (lv_ValueColor_18_0= ruleColorArray ) ) (otherlv_19= ',' ( (lv_ValueColor_20_0= ruleColorArray ) ) )* otherlv_21= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_22= 'visibility=[' ( ( (lv_Visibility_23_0= ruleVisibilityRule ) ) (otherlv_24= ',' ( (lv_Visibility_25_0= ruleVisibilityRule ) ) )* otherlv_26= ']' ) ) ) ) ) )+ {...}?) ) ) )
            // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2819:3: otherlv_0= 'Webview' ( ( ( ( ({...}? => ( ({...}? => (otherlv_2= 'item=' ( (lv_item_3_0= ruleItemRef ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= 'label=' ( ( (lv_label_5_1= RULE_ID | lv_label_5_2= RULE_STRING ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= 'icon=' ( (lv_icon_7_0= ruleIcon ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_8= 'height=' ( (lv_height_9_0= RULE_INT ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= 'url=' ( (lv_url_11_0= RULE_STRING ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_12= 'labelcolor=[' ( ( (lv_LabelColor_13_0= ruleColorArray ) ) (otherlv_14= ',' ( (lv_LabelColor_15_0= ruleColorArray ) ) )* otherlv_16= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= 'valuecolor=[' ( ( (lv_ValueColor_18_0= ruleColorArray ) ) (otherlv_19= ',' ( (lv_ValueColor_20_0= ruleColorArray ) ) )* otherlv_21= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_22= 'visibility=[' ( ( (lv_Visibility_23_0= ruleVisibilityRule ) ) (otherlv_24= ',' ( (lv_Visibility_25_0= ruleVisibilityRule ) ) )* otherlv_26= ']' ) ) ) ) ) )+ {...}?) ) )
            {
            otherlv_0=(Token)match(input,35,FOLLOW_35_in_ruleWebview6845); 

                	newLeafNode(otherlv_0, grammarAccess.getWebviewAccess().getWebviewKeyword_0());
                
            // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2823:1: ( ( ( ( ({...}? => ( ({...}? => (otherlv_2= 'item=' ( (lv_item_3_0= ruleItemRef ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= 'label=' ( ( (lv_label_5_1= RULE_ID | lv_label_5_2= RULE_STRING ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= 'icon=' ( (lv_icon_7_0= ruleIcon ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_8= 'height=' ( (lv_height_9_0= RULE_INT ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= 'url=' ( (lv_url_11_0= RULE_STRING ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_12= 'labelcolor=[' ( ( (lv_LabelColor_13_0= ruleColorArray ) ) (otherlv_14= ',' ( (lv_LabelColor_15_0= ruleColorArray ) ) )* otherlv_16= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= 'valuecolor=[' ( ( (lv_ValueColor_18_0= ruleColorArray ) ) (otherlv_19= ',' ( (lv_ValueColor_20_0= ruleColorArray ) ) )* otherlv_21= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_22= 'visibility=[' ( ( (lv_Visibility_23_0= ruleVisibilityRule ) ) (otherlv_24= ',' ( (lv_Visibility_25_0= ruleVisibilityRule ) ) )* otherlv_26= ']' ) ) ) ) ) )+ {...}?) ) )
            // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2825:1: ( ( ( ({...}? => ( ({...}? => (otherlv_2= 'item=' ( (lv_item_3_0= ruleItemRef ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= 'label=' ( ( (lv_label_5_1= RULE_ID | lv_label_5_2= RULE_STRING ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= 'icon=' ( (lv_icon_7_0= ruleIcon ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_8= 'height=' ( (lv_height_9_0= RULE_INT ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= 'url=' ( (lv_url_11_0= RULE_STRING ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_12= 'labelcolor=[' ( ( (lv_LabelColor_13_0= ruleColorArray ) ) (otherlv_14= ',' ( (lv_LabelColor_15_0= ruleColorArray ) ) )* otherlv_16= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= 'valuecolor=[' ( ( (lv_ValueColor_18_0= ruleColorArray ) ) (otherlv_19= ',' ( (lv_ValueColor_20_0= ruleColorArray ) ) )* otherlv_21= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_22= 'visibility=[' ( ( (lv_Visibility_23_0= ruleVisibilityRule ) ) (otherlv_24= ',' ( (lv_Visibility_25_0= ruleVisibilityRule ) ) )* otherlv_26= ']' ) ) ) ) ) )+ {...}?) )
            {
            // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2825:1: ( ( ( ({...}? => ( ({...}? => (otherlv_2= 'item=' ( (lv_item_3_0= ruleItemRef ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= 'label=' ( ( (lv_label_5_1= RULE_ID | lv_label_5_2= RULE_STRING ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= 'icon=' ( (lv_icon_7_0= ruleIcon ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_8= 'height=' ( (lv_height_9_0= RULE_INT ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= 'url=' ( (lv_url_11_0= RULE_STRING ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_12= 'labelcolor=[' ( ( (lv_LabelColor_13_0= ruleColorArray ) ) (otherlv_14= ',' ( (lv_LabelColor_15_0= ruleColorArray ) ) )* otherlv_16= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= 'valuecolor=[' ( ( (lv_ValueColor_18_0= ruleColorArray ) ) (otherlv_19= ',' ( (lv_ValueColor_20_0= ruleColorArray ) ) )* otherlv_21= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_22= 'visibility=[' ( ( (lv_Visibility_23_0= ruleVisibilityRule ) ) (otherlv_24= ',' ( (lv_Visibility_25_0= ruleVisibilityRule ) ) )* otherlv_26= ']' ) ) ) ) ) )+ {...}?) )
            // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2826:2: ( ( ({...}? => ( ({...}? => (otherlv_2= 'item=' ( (lv_item_3_0= ruleItemRef ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= 'label=' ( ( (lv_label_5_1= RULE_ID | lv_label_5_2= RULE_STRING ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= 'icon=' ( (lv_icon_7_0= ruleIcon ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_8= 'height=' ( (lv_height_9_0= RULE_INT ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= 'url=' ( (lv_url_11_0= RULE_STRING ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_12= 'labelcolor=[' ( ( (lv_LabelColor_13_0= ruleColorArray ) ) (otherlv_14= ',' ( (lv_LabelColor_15_0= ruleColorArray ) ) )* otherlv_16= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= 'valuecolor=[' ( ( (lv_ValueColor_18_0= ruleColorArray ) ) (otherlv_19= ',' ( (lv_ValueColor_20_0= ruleColorArray ) ) )* otherlv_21= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_22= 'visibility=[' ( ( (lv_Visibility_23_0= ruleVisibilityRule ) ) (otherlv_24= ',' ( (lv_Visibility_25_0= ruleVisibilityRule ) ) )* otherlv_26= ']' ) ) ) ) ) )+ {...}?)
            {
             
            	  getUnorderedGroupHelper().enter(grammarAccess.getWebviewAccess().getUnorderedGroup_1());
            	
            // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2829:2: ( ( ({...}? => ( ({...}? => (otherlv_2= 'item=' ( (lv_item_3_0= ruleItemRef ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= 'label=' ( ( (lv_label_5_1= RULE_ID | lv_label_5_2= RULE_STRING ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= 'icon=' ( (lv_icon_7_0= ruleIcon ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_8= 'height=' ( (lv_height_9_0= RULE_INT ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= 'url=' ( (lv_url_11_0= RULE_STRING ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_12= 'labelcolor=[' ( ( (lv_LabelColor_13_0= ruleColorArray ) ) (otherlv_14= ',' ( (lv_LabelColor_15_0= ruleColorArray ) ) )* otherlv_16= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= 'valuecolor=[' ( ( (lv_ValueColor_18_0= ruleColorArray ) ) (otherlv_19= ',' ( (lv_ValueColor_20_0= ruleColorArray ) ) )* otherlv_21= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_22= 'visibility=[' ( ( (lv_Visibility_23_0= ruleVisibilityRule ) ) (otherlv_24= ',' ( (lv_Visibility_25_0= ruleVisibilityRule ) ) )* otherlv_26= ']' ) ) ) ) ) )+ {...}?)
            // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2830:3: ( ({...}? => ( ({...}? => (otherlv_2= 'item=' ( (lv_item_3_0= ruleItemRef ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= 'label=' ( ( (lv_label_5_1= RULE_ID | lv_label_5_2= RULE_STRING ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= 'icon=' ( (lv_icon_7_0= ruleIcon ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_8= 'height=' ( (lv_height_9_0= RULE_INT ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= 'url=' ( (lv_url_11_0= RULE_STRING ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_12= 'labelcolor=[' ( ( (lv_LabelColor_13_0= ruleColorArray ) ) (otherlv_14= ',' ( (lv_LabelColor_15_0= ruleColorArray ) ) )* otherlv_16= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= 'valuecolor=[' ( ( (lv_ValueColor_18_0= ruleColorArray ) ) (otherlv_19= ',' ( (lv_ValueColor_20_0= ruleColorArray ) ) )* otherlv_21= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_22= 'visibility=[' ( ( (lv_Visibility_23_0= ruleVisibilityRule ) ) (otherlv_24= ',' ( (lv_Visibility_25_0= ruleVisibilityRule ) ) )* otherlv_26= ']' ) ) ) ) ) )+ {...}?
            {
            // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2830:3: ( ({...}? => ( ({...}? => (otherlv_2= 'item=' ( (lv_item_3_0= ruleItemRef ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= 'label=' ( ( (lv_label_5_1= RULE_ID | lv_label_5_2= RULE_STRING ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= 'icon=' ( (lv_icon_7_0= ruleIcon ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_8= 'height=' ( (lv_height_9_0= RULE_INT ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= 'url=' ( (lv_url_11_0= RULE_STRING ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_12= 'labelcolor=[' ( ( (lv_LabelColor_13_0= ruleColorArray ) ) (otherlv_14= ',' ( (lv_LabelColor_15_0= ruleColorArray ) ) )* otherlv_16= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= 'valuecolor=[' ( ( (lv_ValueColor_18_0= ruleColorArray ) ) (otherlv_19= ',' ( (lv_ValueColor_20_0= ruleColorArray ) ) )* otherlv_21= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_22= 'visibility=[' ( ( (lv_Visibility_23_0= ruleVisibilityRule ) ) (otherlv_24= ',' ( (lv_Visibility_25_0= ruleVisibilityRule ) ) )* otherlv_26= ']' ) ) ) ) ) )+
            int cnt44=0;
            loop44:
            do {
                int alt44=9;
                alt44 = dfa44.predict(input);
                switch (alt44) {
            	case 1 :
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2832:4: ({...}? => ( ({...}? => (otherlv_2= 'item=' ( (lv_item_3_0= ruleItemRef ) ) ) ) ) )
            	    {
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2832:4: ({...}? => ( ({...}? => (otherlv_2= 'item=' ( (lv_item_3_0= ruleItemRef ) ) ) ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2833:5: {...}? => ( ({...}? => (otherlv_2= 'item=' ( (lv_item_3_0= ruleItemRef ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getWebviewAccess().getUnorderedGroup_1(), 0) ) {
            	        throw new FailedPredicateException(input, "ruleWebview", "getUnorderedGroupHelper().canSelect(grammarAccess.getWebviewAccess().getUnorderedGroup_1(), 0)");
            	    }
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2833:104: ( ({...}? => (otherlv_2= 'item=' ( (lv_item_3_0= ruleItemRef ) ) ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2834:6: ({...}? => (otherlv_2= 'item=' ( (lv_item_3_0= ruleItemRef ) ) ) )
            	    {
            	     
            	    	 				  getUnorderedGroupHelper().select(grammarAccess.getWebviewAccess().getUnorderedGroup_1(), 0);
            	    	 				
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2837:6: ({...}? => (otherlv_2= 'item=' ( (lv_item_3_0= ruleItemRef ) ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2837:7: {...}? => (otherlv_2= 'item=' ( (lv_item_3_0= ruleItemRef ) ) )
            	    {
            	    if ( !((true)) ) {
            	        throw new FailedPredicateException(input, "ruleWebview", "true");
            	    }
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2837:16: (otherlv_2= 'item=' ( (lv_item_3_0= ruleItemRef ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2837:18: otherlv_2= 'item=' ( (lv_item_3_0= ruleItemRef ) )
            	    {
            	    otherlv_2=(Token)match(input,18,FOLLOW_18_in_ruleWebview6903); 

            	        	newLeafNode(otherlv_2, grammarAccess.getWebviewAccess().getItemKeyword_1_0_0());
            	        
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2841:1: ( (lv_item_3_0= ruleItemRef ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2842:1: (lv_item_3_0= ruleItemRef )
            	    {
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2842:1: (lv_item_3_0= ruleItemRef )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2843:3: lv_item_3_0= ruleItemRef
            	    {
            	     
            	    	        newCompositeNode(grammarAccess.getWebviewAccess().getItemItemRefParserRuleCall_1_0_1_0()); 
            	    	    
            	    pushFollow(FOLLOW_ruleItemRef_in_ruleWebview6924);
            	    lv_item_3_0=ruleItemRef();

            	    state._fsp--;


            	    	        if (current==null) {
            	    	            current = createModelElementForParent(grammarAccess.getWebviewRule());
            	    	        }
            	           		set(
            	           			current, 
            	           			"item",
            	            		lv_item_3_0, 
            	            		"ItemRef");
            	    	        afterParserOrEnumRuleCall();
            	    	    

            	    }


            	    }


            	    }


            	    }

            	     
            	    	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getWebviewAccess().getUnorderedGroup_1());
            	    	 				

            	    }


            	    }


            	    }
            	    break;
            	case 2 :
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2866:4: ({...}? => ( ({...}? => (otherlv_4= 'label=' ( ( (lv_label_5_1= RULE_ID | lv_label_5_2= RULE_STRING ) ) ) ) ) ) )
            	    {
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2866:4: ({...}? => ( ({...}? => (otherlv_4= 'label=' ( ( (lv_label_5_1= RULE_ID | lv_label_5_2= RULE_STRING ) ) ) ) ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2867:5: {...}? => ( ({...}? => (otherlv_4= 'label=' ( ( (lv_label_5_1= RULE_ID | lv_label_5_2= RULE_STRING ) ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getWebviewAccess().getUnorderedGroup_1(), 1) ) {
            	        throw new FailedPredicateException(input, "ruleWebview", "getUnorderedGroupHelper().canSelect(grammarAccess.getWebviewAccess().getUnorderedGroup_1(), 1)");
            	    }
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2867:104: ( ({...}? => (otherlv_4= 'label=' ( ( (lv_label_5_1= RULE_ID | lv_label_5_2= RULE_STRING ) ) ) ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2868:6: ({...}? => (otherlv_4= 'label=' ( ( (lv_label_5_1= RULE_ID | lv_label_5_2= RULE_STRING ) ) ) ) )
            	    {
            	     
            	    	 				  getUnorderedGroupHelper().select(grammarAccess.getWebviewAccess().getUnorderedGroup_1(), 1);
            	    	 				
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2871:6: ({...}? => (otherlv_4= 'label=' ( ( (lv_label_5_1= RULE_ID | lv_label_5_2= RULE_STRING ) ) ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2871:7: {...}? => (otherlv_4= 'label=' ( ( (lv_label_5_1= RULE_ID | lv_label_5_2= RULE_STRING ) ) ) )
            	    {
            	    if ( !((true)) ) {
            	        throw new FailedPredicateException(input, "ruleWebview", "true");
            	    }
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2871:16: (otherlv_4= 'label=' ( ( (lv_label_5_1= RULE_ID | lv_label_5_2= RULE_STRING ) ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2871:18: otherlv_4= 'label=' ( ( (lv_label_5_1= RULE_ID | lv_label_5_2= RULE_STRING ) ) )
            	    {
            	    otherlv_4=(Token)match(input,13,FOLLOW_13_in_ruleWebview6992); 

            	        	newLeafNode(otherlv_4, grammarAccess.getWebviewAccess().getLabelKeyword_1_1_0());
            	        
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2875:1: ( ( (lv_label_5_1= RULE_ID | lv_label_5_2= RULE_STRING ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2876:1: ( (lv_label_5_1= RULE_ID | lv_label_5_2= RULE_STRING ) )
            	    {
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2876:1: ( (lv_label_5_1= RULE_ID | lv_label_5_2= RULE_STRING ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2877:1: (lv_label_5_1= RULE_ID | lv_label_5_2= RULE_STRING )
            	    {
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2877:1: (lv_label_5_1= RULE_ID | lv_label_5_2= RULE_STRING )
            	    int alt40=2;
            	    int LA40_0 = input.LA(1);

            	    if ( (LA40_0==RULE_ID) ) {
            	        alt40=1;
            	    }
            	    else if ( (LA40_0==RULE_STRING) ) {
            	        alt40=2;
            	    }
            	    else {
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 40, 0, input);

            	        throw nvae;
            	    }
            	    switch (alt40) {
            	        case 1 :
            	            // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2878:3: lv_label_5_1= RULE_ID
            	            {
            	            lv_label_5_1=(Token)match(input,RULE_ID,FOLLOW_RULE_ID_in_ruleWebview7011); 

            	            			newLeafNode(lv_label_5_1, grammarAccess.getWebviewAccess().getLabelIDTerminalRuleCall_1_1_1_0_0()); 
            	            		

            	            	        if (current==null) {
            	            	            current = createModelElement(grammarAccess.getWebviewRule());
            	            	        }
            	                   		setWithLastConsumed(
            	                   			current, 
            	                   			"label",
            	                    		lv_label_5_1, 
            	                    		"ID");
            	            	    

            	            }
            	            break;
            	        case 2 :
            	            // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2893:8: lv_label_5_2= RULE_STRING
            	            {
            	            lv_label_5_2=(Token)match(input,RULE_STRING,FOLLOW_RULE_STRING_in_ruleWebview7031); 

            	            			newLeafNode(lv_label_5_2, grammarAccess.getWebviewAccess().getLabelSTRINGTerminalRuleCall_1_1_1_0_1()); 
            	            		

            	            	        if (current==null) {
            	            	            current = createModelElement(grammarAccess.getWebviewRule());
            	            	        }
            	                   		setWithLastConsumed(
            	                   			current, 
            	                   			"label",
            	                    		lv_label_5_2, 
            	                    		"STRING");
            	            	    

            	            }
            	            break;

            	    }


            	    }


            	    }


            	    }


            	    }

            	     
            	    	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getWebviewAccess().getUnorderedGroup_1());
            	    	 				

            	    }


            	    }


            	    }
            	    break;
            	case 3 :
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2918:4: ({...}? => ( ({...}? => (otherlv_6= 'icon=' ( (lv_icon_7_0= ruleIcon ) ) ) ) ) )
            	    {
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2918:4: ({...}? => ( ({...}? => (otherlv_6= 'icon=' ( (lv_icon_7_0= ruleIcon ) ) ) ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2919:5: {...}? => ( ({...}? => (otherlv_6= 'icon=' ( (lv_icon_7_0= ruleIcon ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getWebviewAccess().getUnorderedGroup_1(), 2) ) {
            	        throw new FailedPredicateException(input, "ruleWebview", "getUnorderedGroupHelper().canSelect(grammarAccess.getWebviewAccess().getUnorderedGroup_1(), 2)");
            	    }
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2919:104: ( ({...}? => (otherlv_6= 'icon=' ( (lv_icon_7_0= ruleIcon ) ) ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2920:6: ({...}? => (otherlv_6= 'icon=' ( (lv_icon_7_0= ruleIcon ) ) ) )
            	    {
            	     
            	    	 				  getUnorderedGroupHelper().select(grammarAccess.getWebviewAccess().getUnorderedGroup_1(), 2);
            	    	 				
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2923:6: ({...}? => (otherlv_6= 'icon=' ( (lv_icon_7_0= ruleIcon ) ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2923:7: {...}? => (otherlv_6= 'icon=' ( (lv_icon_7_0= ruleIcon ) ) )
            	    {
            	    if ( !((true)) ) {
            	        throw new FailedPredicateException(input, "ruleWebview", "true");
            	    }
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2923:16: (otherlv_6= 'icon=' ( (lv_icon_7_0= ruleIcon ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2923:18: otherlv_6= 'icon=' ( (lv_icon_7_0= ruleIcon ) )
            	    {
            	    otherlv_6=(Token)match(input,14,FOLLOW_14_in_ruleWebview7107); 

            	        	newLeafNode(otherlv_6, grammarAccess.getWebviewAccess().getIconKeyword_1_2_0());
            	        
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2927:1: ( (lv_icon_7_0= ruleIcon ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2928:1: (lv_icon_7_0= ruleIcon )
            	    {
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2928:1: (lv_icon_7_0= ruleIcon )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2929:3: lv_icon_7_0= ruleIcon
            	    {
            	     
            	    	        newCompositeNode(grammarAccess.getWebviewAccess().getIconIconParserRuleCall_1_2_1_0()); 
            	    	    
            	    pushFollow(FOLLOW_ruleIcon_in_ruleWebview7128);
            	    lv_icon_7_0=ruleIcon();

            	    state._fsp--;


            	    	        if (current==null) {
            	    	            current = createModelElementForParent(grammarAccess.getWebviewRule());
            	    	        }
            	           		set(
            	           			current, 
            	           			"icon",
            	            		lv_icon_7_0, 
            	            		"Icon");
            	    	        afterParserOrEnumRuleCall();
            	    	    

            	    }


            	    }


            	    }


            	    }

            	     
            	    	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getWebviewAccess().getUnorderedGroup_1());
            	    	 				

            	    }


            	    }


            	    }
            	    break;
            	case 4 :
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2952:4: ({...}? => ( ({...}? => (otherlv_8= 'height=' ( (lv_height_9_0= RULE_INT ) ) ) ) ) )
            	    {
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2952:4: ({...}? => ( ({...}? => (otherlv_8= 'height=' ( (lv_height_9_0= RULE_INT ) ) ) ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2953:5: {...}? => ( ({...}? => (otherlv_8= 'height=' ( (lv_height_9_0= RULE_INT ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getWebviewAccess().getUnorderedGroup_1(), 3) ) {
            	        throw new FailedPredicateException(input, "ruleWebview", "getUnorderedGroupHelper().canSelect(grammarAccess.getWebviewAccess().getUnorderedGroup_1(), 3)");
            	    }
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2953:104: ( ({...}? => (otherlv_8= 'height=' ( (lv_height_9_0= RULE_INT ) ) ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2954:6: ({...}? => (otherlv_8= 'height=' ( (lv_height_9_0= RULE_INT ) ) ) )
            	    {
            	     
            	    	 				  getUnorderedGroupHelper().select(grammarAccess.getWebviewAccess().getUnorderedGroup_1(), 3);
            	    	 				
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2957:6: ({...}? => (otherlv_8= 'height=' ( (lv_height_9_0= RULE_INT ) ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2957:7: {...}? => (otherlv_8= 'height=' ( (lv_height_9_0= RULE_INT ) ) )
            	    {
            	    if ( !((true)) ) {
            	        throw new FailedPredicateException(input, "ruleWebview", "true");
            	    }
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2957:16: (otherlv_8= 'height=' ( (lv_height_9_0= RULE_INT ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2957:18: otherlv_8= 'height=' ( (lv_height_9_0= RULE_INT ) )
            	    {
            	    otherlv_8=(Token)match(input,36,FOLLOW_36_in_ruleWebview7196); 

            	        	newLeafNode(otherlv_8, grammarAccess.getWebviewAccess().getHeightKeyword_1_3_0());
            	        
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2961:1: ( (lv_height_9_0= RULE_INT ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2962:1: (lv_height_9_0= RULE_INT )
            	    {
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2962:1: (lv_height_9_0= RULE_INT )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2963:3: lv_height_9_0= RULE_INT
            	    {
            	    lv_height_9_0=(Token)match(input,RULE_INT,FOLLOW_RULE_INT_in_ruleWebview7213); 

            	    			newLeafNode(lv_height_9_0, grammarAccess.getWebviewAccess().getHeightINTTerminalRuleCall_1_3_1_0()); 
            	    		

            	    	        if (current==null) {
            	    	            current = createModelElement(grammarAccess.getWebviewRule());
            	    	        }
            	           		setWithLastConsumed(
            	           			current, 
            	           			"height",
            	            		lv_height_9_0, 
            	            		"INT");
            	    	    

            	    }


            	    }


            	    }


            	    }

            	     
            	    	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getWebviewAccess().getUnorderedGroup_1());
            	    	 				

            	    }


            	    }


            	    }
            	    break;
            	case 5 :
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2986:4: ({...}? => ( ({...}? => (otherlv_10= 'url=' ( (lv_url_11_0= RULE_STRING ) ) ) ) ) )
            	    {
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2986:4: ({...}? => ( ({...}? => (otherlv_10= 'url=' ( (lv_url_11_0= RULE_STRING ) ) ) ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2987:5: {...}? => ( ({...}? => (otherlv_10= 'url=' ( (lv_url_11_0= RULE_STRING ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getWebviewAccess().getUnorderedGroup_1(), 4) ) {
            	        throw new FailedPredicateException(input, "ruleWebview", "getUnorderedGroupHelper().canSelect(grammarAccess.getWebviewAccess().getUnorderedGroup_1(), 4)");
            	    }
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2987:104: ( ({...}? => (otherlv_10= 'url=' ( (lv_url_11_0= RULE_STRING ) ) ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2988:6: ({...}? => (otherlv_10= 'url=' ( (lv_url_11_0= RULE_STRING ) ) ) )
            	    {
            	     
            	    	 				  getUnorderedGroupHelper().select(grammarAccess.getWebviewAccess().getUnorderedGroup_1(), 4);
            	    	 				
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2991:6: ({...}? => (otherlv_10= 'url=' ( (lv_url_11_0= RULE_STRING ) ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2991:7: {...}? => (otherlv_10= 'url=' ( (lv_url_11_0= RULE_STRING ) ) )
            	    {
            	    if ( !((true)) ) {
            	        throw new FailedPredicateException(input, "ruleWebview", "true");
            	    }
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2991:16: (otherlv_10= 'url=' ( (lv_url_11_0= RULE_STRING ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2991:18: otherlv_10= 'url=' ( (lv_url_11_0= RULE_STRING ) )
            	    {
            	    otherlv_10=(Token)match(input,27,FOLLOW_27_in_ruleWebview7286); 

            	        	newLeafNode(otherlv_10, grammarAccess.getWebviewAccess().getUrlKeyword_1_4_0());
            	        
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2995:1: ( (lv_url_11_0= RULE_STRING ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2996:1: (lv_url_11_0= RULE_STRING )
            	    {
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2996:1: (lv_url_11_0= RULE_STRING )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:2997:3: lv_url_11_0= RULE_STRING
            	    {
            	    lv_url_11_0=(Token)match(input,RULE_STRING,FOLLOW_RULE_STRING_in_ruleWebview7303); 

            	    			newLeafNode(lv_url_11_0, grammarAccess.getWebviewAccess().getUrlSTRINGTerminalRuleCall_1_4_1_0()); 
            	    		

            	    	        if (current==null) {
            	    	            current = createModelElement(grammarAccess.getWebviewRule());
            	    	        }
            	           		setWithLastConsumed(
            	           			current, 
            	           			"url",
            	            		lv_url_11_0, 
            	            		"STRING");
            	    	    

            	    }


            	    }


            	    }


            	    }

            	     
            	    	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getWebviewAccess().getUnorderedGroup_1());
            	    	 				

            	    }


            	    }


            	    }
            	    break;
            	case 6 :
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3020:4: ({...}? => ( ({...}? => (otherlv_12= 'labelcolor=[' ( ( (lv_LabelColor_13_0= ruleColorArray ) ) (otherlv_14= ',' ( (lv_LabelColor_15_0= ruleColorArray ) ) )* otherlv_16= ']' ) ) ) ) )
            	    {
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3020:4: ({...}? => ( ({...}? => (otherlv_12= 'labelcolor=[' ( ( (lv_LabelColor_13_0= ruleColorArray ) ) (otherlv_14= ',' ( (lv_LabelColor_15_0= ruleColorArray ) ) )* otherlv_16= ']' ) ) ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3021:5: {...}? => ( ({...}? => (otherlv_12= 'labelcolor=[' ( ( (lv_LabelColor_13_0= ruleColorArray ) ) (otherlv_14= ',' ( (lv_LabelColor_15_0= ruleColorArray ) ) )* otherlv_16= ']' ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getWebviewAccess().getUnorderedGroup_1(), 5) ) {
            	        throw new FailedPredicateException(input, "ruleWebview", "getUnorderedGroupHelper().canSelect(grammarAccess.getWebviewAccess().getUnorderedGroup_1(), 5)");
            	    }
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3021:104: ( ({...}? => (otherlv_12= 'labelcolor=[' ( ( (lv_LabelColor_13_0= ruleColorArray ) ) (otherlv_14= ',' ( (lv_LabelColor_15_0= ruleColorArray ) ) )* otherlv_16= ']' ) ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3022:6: ({...}? => (otherlv_12= 'labelcolor=[' ( ( (lv_LabelColor_13_0= ruleColorArray ) ) (otherlv_14= ',' ( (lv_LabelColor_15_0= ruleColorArray ) ) )* otherlv_16= ']' ) ) )
            	    {
            	     
            	    	 				  getUnorderedGroupHelper().select(grammarAccess.getWebviewAccess().getUnorderedGroup_1(), 5);
            	    	 				
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3025:6: ({...}? => (otherlv_12= 'labelcolor=[' ( ( (lv_LabelColor_13_0= ruleColorArray ) ) (otherlv_14= ',' ( (lv_LabelColor_15_0= ruleColorArray ) ) )* otherlv_16= ']' ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3025:7: {...}? => (otherlv_12= 'labelcolor=[' ( ( (lv_LabelColor_13_0= ruleColorArray ) ) (otherlv_14= ',' ( (lv_LabelColor_15_0= ruleColorArray ) ) )* otherlv_16= ']' ) )
            	    {
            	    if ( !((true)) ) {
            	        throw new FailedPredicateException(input, "ruleWebview", "true");
            	    }
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3025:16: (otherlv_12= 'labelcolor=[' ( ( (lv_LabelColor_13_0= ruleColorArray ) ) (otherlv_14= ',' ( (lv_LabelColor_15_0= ruleColorArray ) ) )* otherlv_16= ']' ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3025:18: otherlv_12= 'labelcolor=[' ( ( (lv_LabelColor_13_0= ruleColorArray ) ) (otherlv_14= ',' ( (lv_LabelColor_15_0= ruleColorArray ) ) )* otherlv_16= ']' )
            	    {
            	    otherlv_12=(Token)match(input,19,FOLLOW_19_in_ruleWebview7376); 

            	        	newLeafNode(otherlv_12, grammarAccess.getWebviewAccess().getLabelcolorKeyword_1_5_0());
            	        
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3029:1: ( ( (lv_LabelColor_13_0= ruleColorArray ) ) (otherlv_14= ',' ( (lv_LabelColor_15_0= ruleColorArray ) ) )* otherlv_16= ']' )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3029:2: ( (lv_LabelColor_13_0= ruleColorArray ) ) (otherlv_14= ',' ( (lv_LabelColor_15_0= ruleColorArray ) ) )* otherlv_16= ']'
            	    {
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3029:2: ( (lv_LabelColor_13_0= ruleColorArray ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3030:1: (lv_LabelColor_13_0= ruleColorArray )
            	    {
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3030:1: (lv_LabelColor_13_0= ruleColorArray )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3031:3: lv_LabelColor_13_0= ruleColorArray
            	    {
            	     
            	    	        newCompositeNode(grammarAccess.getWebviewAccess().getLabelColorColorArrayParserRuleCall_1_5_1_0_0()); 
            	    	    
            	    pushFollow(FOLLOW_ruleColorArray_in_ruleWebview7398);
            	    lv_LabelColor_13_0=ruleColorArray();

            	    state._fsp--;


            	    	        if (current==null) {
            	    	            current = createModelElementForParent(grammarAccess.getWebviewRule());
            	    	        }
            	           		add(
            	           			current, 
            	           			"LabelColor",
            	            		lv_LabelColor_13_0, 
            	            		"ColorArray");
            	    	        afterParserOrEnumRuleCall();
            	    	    

            	    }


            	    }

            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3047:2: (otherlv_14= ',' ( (lv_LabelColor_15_0= ruleColorArray ) ) )*
            	    loop41:
            	    do {
            	        int alt41=2;
            	        int LA41_0 = input.LA(1);

            	        if ( (LA41_0==20) ) {
            	            alt41=1;
            	        }


            	        switch (alt41) {
            	    	case 1 :
            	    	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3047:4: otherlv_14= ',' ( (lv_LabelColor_15_0= ruleColorArray ) )
            	    	    {
            	    	    otherlv_14=(Token)match(input,20,FOLLOW_20_in_ruleWebview7411); 

            	    	        	newLeafNode(otherlv_14, grammarAccess.getWebviewAccess().getCommaKeyword_1_5_1_1_0());
            	    	        
            	    	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3051:1: ( (lv_LabelColor_15_0= ruleColorArray ) )
            	    	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3052:1: (lv_LabelColor_15_0= ruleColorArray )
            	    	    {
            	    	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3052:1: (lv_LabelColor_15_0= ruleColorArray )
            	    	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3053:3: lv_LabelColor_15_0= ruleColorArray
            	    	    {
            	    	     
            	    	    	        newCompositeNode(grammarAccess.getWebviewAccess().getLabelColorColorArrayParserRuleCall_1_5_1_1_1_0()); 
            	    	    	    
            	    	    pushFollow(FOLLOW_ruleColorArray_in_ruleWebview7432);
            	    	    lv_LabelColor_15_0=ruleColorArray();

            	    	    state._fsp--;


            	    	    	        if (current==null) {
            	    	    	            current = createModelElementForParent(grammarAccess.getWebviewRule());
            	    	    	        }
            	    	           		add(
            	    	           			current, 
            	    	           			"LabelColor",
            	    	            		lv_LabelColor_15_0, 
            	    	            		"ColorArray");
            	    	    	        afterParserOrEnumRuleCall();
            	    	    	    

            	    	    }


            	    	    }


            	    	    }
            	    	    break;

            	    	default :
            	    	    break loop41;
            	        }
            	    } while (true);

            	    otherlv_16=(Token)match(input,21,FOLLOW_21_in_ruleWebview7446); 

            	        	newLeafNode(otherlv_16, grammarAccess.getWebviewAccess().getRightSquareBracketKeyword_1_5_1_2());
            	        

            	    }


            	    }


            	    }

            	     
            	    	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getWebviewAccess().getUnorderedGroup_1());
            	    	 				

            	    }


            	    }


            	    }
            	    break;
            	case 7 :
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3080:4: ({...}? => ( ({...}? => (otherlv_17= 'valuecolor=[' ( ( (lv_ValueColor_18_0= ruleColorArray ) ) (otherlv_19= ',' ( (lv_ValueColor_20_0= ruleColorArray ) ) )* otherlv_21= ']' ) ) ) ) )
            	    {
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3080:4: ({...}? => ( ({...}? => (otherlv_17= 'valuecolor=[' ( ( (lv_ValueColor_18_0= ruleColorArray ) ) (otherlv_19= ',' ( (lv_ValueColor_20_0= ruleColorArray ) ) )* otherlv_21= ']' ) ) ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3081:5: {...}? => ( ({...}? => (otherlv_17= 'valuecolor=[' ( ( (lv_ValueColor_18_0= ruleColorArray ) ) (otherlv_19= ',' ( (lv_ValueColor_20_0= ruleColorArray ) ) )* otherlv_21= ']' ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getWebviewAccess().getUnorderedGroup_1(), 6) ) {
            	        throw new FailedPredicateException(input, "ruleWebview", "getUnorderedGroupHelper().canSelect(grammarAccess.getWebviewAccess().getUnorderedGroup_1(), 6)");
            	    }
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3081:104: ( ({...}? => (otherlv_17= 'valuecolor=[' ( ( (lv_ValueColor_18_0= ruleColorArray ) ) (otherlv_19= ',' ( (lv_ValueColor_20_0= ruleColorArray ) ) )* otherlv_21= ']' ) ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3082:6: ({...}? => (otherlv_17= 'valuecolor=[' ( ( (lv_ValueColor_18_0= ruleColorArray ) ) (otherlv_19= ',' ( (lv_ValueColor_20_0= ruleColorArray ) ) )* otherlv_21= ']' ) ) )
            	    {
            	     
            	    	 				  getUnorderedGroupHelper().select(grammarAccess.getWebviewAccess().getUnorderedGroup_1(), 6);
            	    	 				
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3085:6: ({...}? => (otherlv_17= 'valuecolor=[' ( ( (lv_ValueColor_18_0= ruleColorArray ) ) (otherlv_19= ',' ( (lv_ValueColor_20_0= ruleColorArray ) ) )* otherlv_21= ']' ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3085:7: {...}? => (otherlv_17= 'valuecolor=[' ( ( (lv_ValueColor_18_0= ruleColorArray ) ) (otherlv_19= ',' ( (lv_ValueColor_20_0= ruleColorArray ) ) )* otherlv_21= ']' ) )
            	    {
            	    if ( !((true)) ) {
            	        throw new FailedPredicateException(input, "ruleWebview", "true");
            	    }
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3085:16: (otherlv_17= 'valuecolor=[' ( ( (lv_ValueColor_18_0= ruleColorArray ) ) (otherlv_19= ',' ( (lv_ValueColor_20_0= ruleColorArray ) ) )* otherlv_21= ']' ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3085:18: otherlv_17= 'valuecolor=[' ( ( (lv_ValueColor_18_0= ruleColorArray ) ) (otherlv_19= ',' ( (lv_ValueColor_20_0= ruleColorArray ) ) )* otherlv_21= ']' )
            	    {
            	    otherlv_17=(Token)match(input,22,FOLLOW_22_in_ruleWebview7515); 

            	        	newLeafNode(otherlv_17, grammarAccess.getWebviewAccess().getValuecolorKeyword_1_6_0());
            	        
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3089:1: ( ( (lv_ValueColor_18_0= ruleColorArray ) ) (otherlv_19= ',' ( (lv_ValueColor_20_0= ruleColorArray ) ) )* otherlv_21= ']' )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3089:2: ( (lv_ValueColor_18_0= ruleColorArray ) ) (otherlv_19= ',' ( (lv_ValueColor_20_0= ruleColorArray ) ) )* otherlv_21= ']'
            	    {
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3089:2: ( (lv_ValueColor_18_0= ruleColorArray ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3090:1: (lv_ValueColor_18_0= ruleColorArray )
            	    {
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3090:1: (lv_ValueColor_18_0= ruleColorArray )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3091:3: lv_ValueColor_18_0= ruleColorArray
            	    {
            	     
            	    	        newCompositeNode(grammarAccess.getWebviewAccess().getValueColorColorArrayParserRuleCall_1_6_1_0_0()); 
            	    	    
            	    pushFollow(FOLLOW_ruleColorArray_in_ruleWebview7537);
            	    lv_ValueColor_18_0=ruleColorArray();

            	    state._fsp--;


            	    	        if (current==null) {
            	    	            current = createModelElementForParent(grammarAccess.getWebviewRule());
            	    	        }
            	           		add(
            	           			current, 
            	           			"ValueColor",
            	            		lv_ValueColor_18_0, 
            	            		"ColorArray");
            	    	        afterParserOrEnumRuleCall();
            	    	    

            	    }


            	    }

            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3107:2: (otherlv_19= ',' ( (lv_ValueColor_20_0= ruleColorArray ) ) )*
            	    loop42:
            	    do {
            	        int alt42=2;
            	        int LA42_0 = input.LA(1);

            	        if ( (LA42_0==20) ) {
            	            alt42=1;
            	        }


            	        switch (alt42) {
            	    	case 1 :
            	    	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3107:4: otherlv_19= ',' ( (lv_ValueColor_20_0= ruleColorArray ) )
            	    	    {
            	    	    otherlv_19=(Token)match(input,20,FOLLOW_20_in_ruleWebview7550); 

            	    	        	newLeafNode(otherlv_19, grammarAccess.getWebviewAccess().getCommaKeyword_1_6_1_1_0());
            	    	        
            	    	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3111:1: ( (lv_ValueColor_20_0= ruleColorArray ) )
            	    	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3112:1: (lv_ValueColor_20_0= ruleColorArray )
            	    	    {
            	    	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3112:1: (lv_ValueColor_20_0= ruleColorArray )
            	    	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3113:3: lv_ValueColor_20_0= ruleColorArray
            	    	    {
            	    	     
            	    	    	        newCompositeNode(grammarAccess.getWebviewAccess().getValueColorColorArrayParserRuleCall_1_6_1_1_1_0()); 
            	    	    	    
            	    	    pushFollow(FOLLOW_ruleColorArray_in_ruleWebview7571);
            	    	    lv_ValueColor_20_0=ruleColorArray();

            	    	    state._fsp--;


            	    	    	        if (current==null) {
            	    	    	            current = createModelElementForParent(grammarAccess.getWebviewRule());
            	    	    	        }
            	    	           		add(
            	    	           			current, 
            	    	           			"ValueColor",
            	    	            		lv_ValueColor_20_0, 
            	    	            		"ColorArray");
            	    	    	        afterParserOrEnumRuleCall();
            	    	    	    

            	    	    }


            	    	    }


            	    	    }
            	    	    break;

            	    	default :
            	    	    break loop42;
            	        }
            	    } while (true);

            	    otherlv_21=(Token)match(input,21,FOLLOW_21_in_ruleWebview7585); 

            	        	newLeafNode(otherlv_21, grammarAccess.getWebviewAccess().getRightSquareBracketKeyword_1_6_1_2());
            	        

            	    }


            	    }


            	    }

            	     
            	    	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getWebviewAccess().getUnorderedGroup_1());
            	    	 				

            	    }


            	    }


            	    }
            	    break;
            	case 8 :
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3140:4: ({...}? => ( ({...}? => (otherlv_22= 'visibility=[' ( ( (lv_Visibility_23_0= ruleVisibilityRule ) ) (otherlv_24= ',' ( (lv_Visibility_25_0= ruleVisibilityRule ) ) )* otherlv_26= ']' ) ) ) ) )
            	    {
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3140:4: ({...}? => ( ({...}? => (otherlv_22= 'visibility=[' ( ( (lv_Visibility_23_0= ruleVisibilityRule ) ) (otherlv_24= ',' ( (lv_Visibility_25_0= ruleVisibilityRule ) ) )* otherlv_26= ']' ) ) ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3141:5: {...}? => ( ({...}? => (otherlv_22= 'visibility=[' ( ( (lv_Visibility_23_0= ruleVisibilityRule ) ) (otherlv_24= ',' ( (lv_Visibility_25_0= ruleVisibilityRule ) ) )* otherlv_26= ']' ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getWebviewAccess().getUnorderedGroup_1(), 7) ) {
            	        throw new FailedPredicateException(input, "ruleWebview", "getUnorderedGroupHelper().canSelect(grammarAccess.getWebviewAccess().getUnorderedGroup_1(), 7)");
            	    }
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3141:104: ( ({...}? => (otherlv_22= 'visibility=[' ( ( (lv_Visibility_23_0= ruleVisibilityRule ) ) (otherlv_24= ',' ( (lv_Visibility_25_0= ruleVisibilityRule ) ) )* otherlv_26= ']' ) ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3142:6: ({...}? => (otherlv_22= 'visibility=[' ( ( (lv_Visibility_23_0= ruleVisibilityRule ) ) (otherlv_24= ',' ( (lv_Visibility_25_0= ruleVisibilityRule ) ) )* otherlv_26= ']' ) ) )
            	    {
            	     
            	    	 				  getUnorderedGroupHelper().select(grammarAccess.getWebviewAccess().getUnorderedGroup_1(), 7);
            	    	 				
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3145:6: ({...}? => (otherlv_22= 'visibility=[' ( ( (lv_Visibility_23_0= ruleVisibilityRule ) ) (otherlv_24= ',' ( (lv_Visibility_25_0= ruleVisibilityRule ) ) )* otherlv_26= ']' ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3145:7: {...}? => (otherlv_22= 'visibility=[' ( ( (lv_Visibility_23_0= ruleVisibilityRule ) ) (otherlv_24= ',' ( (lv_Visibility_25_0= ruleVisibilityRule ) ) )* otherlv_26= ']' ) )
            	    {
            	    if ( !((true)) ) {
            	        throw new FailedPredicateException(input, "ruleWebview", "true");
            	    }
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3145:16: (otherlv_22= 'visibility=[' ( ( (lv_Visibility_23_0= ruleVisibilityRule ) ) (otherlv_24= ',' ( (lv_Visibility_25_0= ruleVisibilityRule ) ) )* otherlv_26= ']' ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3145:18: otherlv_22= 'visibility=[' ( ( (lv_Visibility_23_0= ruleVisibilityRule ) ) (otherlv_24= ',' ( (lv_Visibility_25_0= ruleVisibilityRule ) ) )* otherlv_26= ']' )
            	    {
            	    otherlv_22=(Token)match(input,23,FOLLOW_23_in_ruleWebview7654); 

            	        	newLeafNode(otherlv_22, grammarAccess.getWebviewAccess().getVisibilityKeyword_1_7_0());
            	        
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3149:1: ( ( (lv_Visibility_23_0= ruleVisibilityRule ) ) (otherlv_24= ',' ( (lv_Visibility_25_0= ruleVisibilityRule ) ) )* otherlv_26= ']' )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3149:2: ( (lv_Visibility_23_0= ruleVisibilityRule ) ) (otherlv_24= ',' ( (lv_Visibility_25_0= ruleVisibilityRule ) ) )* otherlv_26= ']'
            	    {
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3149:2: ( (lv_Visibility_23_0= ruleVisibilityRule ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3150:1: (lv_Visibility_23_0= ruleVisibilityRule )
            	    {
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3150:1: (lv_Visibility_23_0= ruleVisibilityRule )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3151:3: lv_Visibility_23_0= ruleVisibilityRule
            	    {
            	     
            	    	        newCompositeNode(grammarAccess.getWebviewAccess().getVisibilityVisibilityRuleParserRuleCall_1_7_1_0_0()); 
            	    	    
            	    pushFollow(FOLLOW_ruleVisibilityRule_in_ruleWebview7676);
            	    lv_Visibility_23_0=ruleVisibilityRule();

            	    state._fsp--;


            	    	        if (current==null) {
            	    	            current = createModelElementForParent(grammarAccess.getWebviewRule());
            	    	        }
            	           		add(
            	           			current, 
            	           			"Visibility",
            	            		lv_Visibility_23_0, 
            	            		"VisibilityRule");
            	    	        afterParserOrEnumRuleCall();
            	    	    

            	    }


            	    }

            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3167:2: (otherlv_24= ',' ( (lv_Visibility_25_0= ruleVisibilityRule ) ) )*
            	    loop43:
            	    do {
            	        int alt43=2;
            	        int LA43_0 = input.LA(1);

            	        if ( (LA43_0==20) ) {
            	            alt43=1;
            	        }


            	        switch (alt43) {
            	    	case 1 :
            	    	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3167:4: otherlv_24= ',' ( (lv_Visibility_25_0= ruleVisibilityRule ) )
            	    	    {
            	    	    otherlv_24=(Token)match(input,20,FOLLOW_20_in_ruleWebview7689); 

            	    	        	newLeafNode(otherlv_24, grammarAccess.getWebviewAccess().getCommaKeyword_1_7_1_1_0());
            	    	        
            	    	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3171:1: ( (lv_Visibility_25_0= ruleVisibilityRule ) )
            	    	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3172:1: (lv_Visibility_25_0= ruleVisibilityRule )
            	    	    {
            	    	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3172:1: (lv_Visibility_25_0= ruleVisibilityRule )
            	    	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3173:3: lv_Visibility_25_0= ruleVisibilityRule
            	    	    {
            	    	     
            	    	    	        newCompositeNode(grammarAccess.getWebviewAccess().getVisibilityVisibilityRuleParserRuleCall_1_7_1_1_1_0()); 
            	    	    	    
            	    	    pushFollow(FOLLOW_ruleVisibilityRule_in_ruleWebview7710);
            	    	    lv_Visibility_25_0=ruleVisibilityRule();

            	    	    state._fsp--;


            	    	    	        if (current==null) {
            	    	    	            current = createModelElementForParent(grammarAccess.getWebviewRule());
            	    	    	        }
            	    	           		add(
            	    	           			current, 
            	    	           			"Visibility",
            	    	            		lv_Visibility_25_0, 
            	    	            		"VisibilityRule");
            	    	    	        afterParserOrEnumRuleCall();
            	    	    	    

            	    	    }


            	    	    }


            	    	    }
            	    	    break;

            	    	default :
            	    	    break loop43;
            	        }
            	    } while (true);

            	    otherlv_26=(Token)match(input,21,FOLLOW_21_in_ruleWebview7724); 

            	        	newLeafNode(otherlv_26, grammarAccess.getWebviewAccess().getRightSquareBracketKeyword_1_7_1_2());
            	        

            	    }


            	    }


            	    }

            	     
            	    	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getWebviewAccess().getUnorderedGroup_1());
            	    	 				

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    if ( cnt44 >= 1 ) break loop44;
                        EarlyExitException eee =
                            new EarlyExitException(44, input);
                        throw eee;
                }
                cnt44++;
            } while (true);

            if ( ! getUnorderedGroupHelper().canLeave(grammarAccess.getWebviewAccess().getUnorderedGroup_1()) ) {
                throw new FailedPredicateException(input, "ruleWebview", "getUnorderedGroupHelper().canLeave(grammarAccess.getWebviewAccess().getUnorderedGroup_1())");
            }

            }


            }

             
            	  getUnorderedGroupHelper().leave(grammarAccess.getWebviewAccess().getUnorderedGroup_1());
            	

            }


            }


            }

             leaveRule(); 
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleWebview"


    // $ANTLR start "entryRuleSwitch"
    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3216:1: entryRuleSwitch returns [EObject current=null] : iv_ruleSwitch= ruleSwitch EOF ;
    public final EObject entryRuleSwitch() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleSwitch = null;


        try {
            // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3217:2: (iv_ruleSwitch= ruleSwitch EOF )
            // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3218:2: iv_ruleSwitch= ruleSwitch EOF
            {
             newCompositeNode(grammarAccess.getSwitchRule()); 
            pushFollow(FOLLOW_ruleSwitch_in_entryRuleSwitch7808);
            iv_ruleSwitch=ruleSwitch();

            state._fsp--;

             current =iv_ruleSwitch; 
            match(input,EOF,FOLLOW_EOF_in_entryRuleSwitch7818); 

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleSwitch"


    // $ANTLR start "ruleSwitch"
    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3225:1: ruleSwitch returns [EObject current=null] : (otherlv_0= 'Switch' ( ( ( ( ({...}? => ( ({...}? => (otherlv_2= 'item=' ( (lv_item_3_0= ruleItemRef ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= 'label=' ( ( (lv_label_5_1= RULE_ID | lv_label_5_2= RULE_STRING ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= 'icon=' ( (lv_icon_7_0= ruleIcon ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_8= 'mappings=[' ( (lv_mappings_9_0= ruleMapping ) ) (otherlv_10= ',' ( (lv_mappings_11_0= ruleMapping ) ) )* otherlv_12= ']' ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= 'labelcolor=[' ( ( (lv_LabelColor_14_0= ruleColorArray ) ) (otherlv_15= ',' ( (lv_LabelColor_16_0= ruleColorArray ) ) )* otherlv_17= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= 'valuecolor=[' ( ( (lv_ValueColor_19_0= ruleColorArray ) ) (otherlv_20= ',' ( (lv_ValueColor_21_0= ruleColorArray ) ) )* otherlv_22= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_23= 'visibility=[' ( ( (lv_Visibility_24_0= ruleVisibilityRule ) ) (otherlv_25= ',' ( (lv_Visibility_26_0= ruleVisibilityRule ) ) )* otherlv_27= ']' ) ) ) ) ) )+ {...}?) ) ) ) ;
    public final EObject ruleSwitch() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_2=null;
        Token otherlv_4=null;
        Token lv_label_5_1=null;
        Token lv_label_5_2=null;
        Token otherlv_6=null;
        Token otherlv_8=null;
        Token otherlv_10=null;
        Token otherlv_12=null;
        Token otherlv_13=null;
        Token otherlv_15=null;
        Token otherlv_17=null;
        Token otherlv_18=null;
        Token otherlv_20=null;
        Token otherlv_22=null;
        Token otherlv_23=null;
        Token otherlv_25=null;
        Token otherlv_27=null;
        AntlrDatatypeRuleToken lv_item_3_0 = null;

        AntlrDatatypeRuleToken lv_icon_7_0 = null;

        EObject lv_mappings_9_0 = null;

        EObject lv_mappings_11_0 = null;

        EObject lv_LabelColor_14_0 = null;

        EObject lv_LabelColor_16_0 = null;

        EObject lv_ValueColor_19_0 = null;

        EObject lv_ValueColor_21_0 = null;

        EObject lv_Visibility_24_0 = null;

        EObject lv_Visibility_26_0 = null;


         enterRule(); 
            
        try {
            // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3228:28: ( (otherlv_0= 'Switch' ( ( ( ( ({...}? => ( ({...}? => (otherlv_2= 'item=' ( (lv_item_3_0= ruleItemRef ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= 'label=' ( ( (lv_label_5_1= RULE_ID | lv_label_5_2= RULE_STRING ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= 'icon=' ( (lv_icon_7_0= ruleIcon ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_8= 'mappings=[' ( (lv_mappings_9_0= ruleMapping ) ) (otherlv_10= ',' ( (lv_mappings_11_0= ruleMapping ) ) )* otherlv_12= ']' ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= 'labelcolor=[' ( ( (lv_LabelColor_14_0= ruleColorArray ) ) (otherlv_15= ',' ( (lv_LabelColor_16_0= ruleColorArray ) ) )* otherlv_17= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= 'valuecolor=[' ( ( (lv_ValueColor_19_0= ruleColorArray ) ) (otherlv_20= ',' ( (lv_ValueColor_21_0= ruleColorArray ) ) )* otherlv_22= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_23= 'visibility=[' ( ( (lv_Visibility_24_0= ruleVisibilityRule ) ) (otherlv_25= ',' ( (lv_Visibility_26_0= ruleVisibilityRule ) ) )* otherlv_27= ']' ) ) ) ) ) )+ {...}?) ) ) ) )
            // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3229:1: (otherlv_0= 'Switch' ( ( ( ( ({...}? => ( ({...}? => (otherlv_2= 'item=' ( (lv_item_3_0= ruleItemRef ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= 'label=' ( ( (lv_label_5_1= RULE_ID | lv_label_5_2= RULE_STRING ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= 'icon=' ( (lv_icon_7_0= ruleIcon ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_8= 'mappings=[' ( (lv_mappings_9_0= ruleMapping ) ) (otherlv_10= ',' ( (lv_mappings_11_0= ruleMapping ) ) )* otherlv_12= ']' ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= 'labelcolor=[' ( ( (lv_LabelColor_14_0= ruleColorArray ) ) (otherlv_15= ',' ( (lv_LabelColor_16_0= ruleColorArray ) ) )* otherlv_17= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= 'valuecolor=[' ( ( (lv_ValueColor_19_0= ruleColorArray ) ) (otherlv_20= ',' ( (lv_ValueColor_21_0= ruleColorArray ) ) )* otherlv_22= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_23= 'visibility=[' ( ( (lv_Visibility_24_0= ruleVisibilityRule ) ) (otherlv_25= ',' ( (lv_Visibility_26_0= ruleVisibilityRule ) ) )* otherlv_27= ']' ) ) ) ) ) )+ {...}?) ) ) )
            {
            // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3229:1: (otherlv_0= 'Switch' ( ( ( ( ({...}? => ( ({...}? => (otherlv_2= 'item=' ( (lv_item_3_0= ruleItemRef ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= 'label=' ( ( (lv_label_5_1= RULE_ID | lv_label_5_2= RULE_STRING ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= 'icon=' ( (lv_icon_7_0= ruleIcon ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_8= 'mappings=[' ( (lv_mappings_9_0= ruleMapping ) ) (otherlv_10= ',' ( (lv_mappings_11_0= ruleMapping ) ) )* otherlv_12= ']' ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= 'labelcolor=[' ( ( (lv_LabelColor_14_0= ruleColorArray ) ) (otherlv_15= ',' ( (lv_LabelColor_16_0= ruleColorArray ) ) )* otherlv_17= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= 'valuecolor=[' ( ( (lv_ValueColor_19_0= ruleColorArray ) ) (otherlv_20= ',' ( (lv_ValueColor_21_0= ruleColorArray ) ) )* otherlv_22= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_23= 'visibility=[' ( ( (lv_Visibility_24_0= ruleVisibilityRule ) ) (otherlv_25= ',' ( (lv_Visibility_26_0= ruleVisibilityRule ) ) )* otherlv_27= ']' ) ) ) ) ) )+ {...}?) ) ) )
            // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3229:3: otherlv_0= 'Switch' ( ( ( ( ({...}? => ( ({...}? => (otherlv_2= 'item=' ( (lv_item_3_0= ruleItemRef ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= 'label=' ( ( (lv_label_5_1= RULE_ID | lv_label_5_2= RULE_STRING ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= 'icon=' ( (lv_icon_7_0= ruleIcon ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_8= 'mappings=[' ( (lv_mappings_9_0= ruleMapping ) ) (otherlv_10= ',' ( (lv_mappings_11_0= ruleMapping ) ) )* otherlv_12= ']' ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= 'labelcolor=[' ( ( (lv_LabelColor_14_0= ruleColorArray ) ) (otherlv_15= ',' ( (lv_LabelColor_16_0= ruleColorArray ) ) )* otherlv_17= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= 'valuecolor=[' ( ( (lv_ValueColor_19_0= ruleColorArray ) ) (otherlv_20= ',' ( (lv_ValueColor_21_0= ruleColorArray ) ) )* otherlv_22= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_23= 'visibility=[' ( ( (lv_Visibility_24_0= ruleVisibilityRule ) ) (otherlv_25= ',' ( (lv_Visibility_26_0= ruleVisibilityRule ) ) )* otherlv_27= ']' ) ) ) ) ) )+ {...}?) ) )
            {
            otherlv_0=(Token)match(input,37,FOLLOW_37_in_ruleSwitch7855); 

                	newLeafNode(otherlv_0, grammarAccess.getSwitchAccess().getSwitchKeyword_0());
                
            // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3233:1: ( ( ( ( ({...}? => ( ({...}? => (otherlv_2= 'item=' ( (lv_item_3_0= ruleItemRef ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= 'label=' ( ( (lv_label_5_1= RULE_ID | lv_label_5_2= RULE_STRING ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= 'icon=' ( (lv_icon_7_0= ruleIcon ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_8= 'mappings=[' ( (lv_mappings_9_0= ruleMapping ) ) (otherlv_10= ',' ( (lv_mappings_11_0= ruleMapping ) ) )* otherlv_12= ']' ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= 'labelcolor=[' ( ( (lv_LabelColor_14_0= ruleColorArray ) ) (otherlv_15= ',' ( (lv_LabelColor_16_0= ruleColorArray ) ) )* otherlv_17= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= 'valuecolor=[' ( ( (lv_ValueColor_19_0= ruleColorArray ) ) (otherlv_20= ',' ( (lv_ValueColor_21_0= ruleColorArray ) ) )* otherlv_22= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_23= 'visibility=[' ( ( (lv_Visibility_24_0= ruleVisibilityRule ) ) (otherlv_25= ',' ( (lv_Visibility_26_0= ruleVisibilityRule ) ) )* otherlv_27= ']' ) ) ) ) ) )+ {...}?) ) )
            // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3235:1: ( ( ( ({...}? => ( ({...}? => (otherlv_2= 'item=' ( (lv_item_3_0= ruleItemRef ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= 'label=' ( ( (lv_label_5_1= RULE_ID | lv_label_5_2= RULE_STRING ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= 'icon=' ( (lv_icon_7_0= ruleIcon ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_8= 'mappings=[' ( (lv_mappings_9_0= ruleMapping ) ) (otherlv_10= ',' ( (lv_mappings_11_0= ruleMapping ) ) )* otherlv_12= ']' ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= 'labelcolor=[' ( ( (lv_LabelColor_14_0= ruleColorArray ) ) (otherlv_15= ',' ( (lv_LabelColor_16_0= ruleColorArray ) ) )* otherlv_17= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= 'valuecolor=[' ( ( (lv_ValueColor_19_0= ruleColorArray ) ) (otherlv_20= ',' ( (lv_ValueColor_21_0= ruleColorArray ) ) )* otherlv_22= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_23= 'visibility=[' ( ( (lv_Visibility_24_0= ruleVisibilityRule ) ) (otherlv_25= ',' ( (lv_Visibility_26_0= ruleVisibilityRule ) ) )* otherlv_27= ']' ) ) ) ) ) )+ {...}?) )
            {
            // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3235:1: ( ( ( ({...}? => ( ({...}? => (otherlv_2= 'item=' ( (lv_item_3_0= ruleItemRef ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= 'label=' ( ( (lv_label_5_1= RULE_ID | lv_label_5_2= RULE_STRING ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= 'icon=' ( (lv_icon_7_0= ruleIcon ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_8= 'mappings=[' ( (lv_mappings_9_0= ruleMapping ) ) (otherlv_10= ',' ( (lv_mappings_11_0= ruleMapping ) ) )* otherlv_12= ']' ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= 'labelcolor=[' ( ( (lv_LabelColor_14_0= ruleColorArray ) ) (otherlv_15= ',' ( (lv_LabelColor_16_0= ruleColorArray ) ) )* otherlv_17= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= 'valuecolor=[' ( ( (lv_ValueColor_19_0= ruleColorArray ) ) (otherlv_20= ',' ( (lv_ValueColor_21_0= ruleColorArray ) ) )* otherlv_22= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_23= 'visibility=[' ( ( (lv_Visibility_24_0= ruleVisibilityRule ) ) (otherlv_25= ',' ( (lv_Visibility_26_0= ruleVisibilityRule ) ) )* otherlv_27= ']' ) ) ) ) ) )+ {...}?) )
            // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3236:2: ( ( ({...}? => ( ({...}? => (otherlv_2= 'item=' ( (lv_item_3_0= ruleItemRef ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= 'label=' ( ( (lv_label_5_1= RULE_ID | lv_label_5_2= RULE_STRING ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= 'icon=' ( (lv_icon_7_0= ruleIcon ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_8= 'mappings=[' ( (lv_mappings_9_0= ruleMapping ) ) (otherlv_10= ',' ( (lv_mappings_11_0= ruleMapping ) ) )* otherlv_12= ']' ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= 'labelcolor=[' ( ( (lv_LabelColor_14_0= ruleColorArray ) ) (otherlv_15= ',' ( (lv_LabelColor_16_0= ruleColorArray ) ) )* otherlv_17= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= 'valuecolor=[' ( ( (lv_ValueColor_19_0= ruleColorArray ) ) (otherlv_20= ',' ( (lv_ValueColor_21_0= ruleColorArray ) ) )* otherlv_22= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_23= 'visibility=[' ( ( (lv_Visibility_24_0= ruleVisibilityRule ) ) (otherlv_25= ',' ( (lv_Visibility_26_0= ruleVisibilityRule ) ) )* otherlv_27= ']' ) ) ) ) ) )+ {...}?)
            {
             
            	  getUnorderedGroupHelper().enter(grammarAccess.getSwitchAccess().getUnorderedGroup_1());
            	
            // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3239:2: ( ( ({...}? => ( ({...}? => (otherlv_2= 'item=' ( (lv_item_3_0= ruleItemRef ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= 'label=' ( ( (lv_label_5_1= RULE_ID | lv_label_5_2= RULE_STRING ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= 'icon=' ( (lv_icon_7_0= ruleIcon ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_8= 'mappings=[' ( (lv_mappings_9_0= ruleMapping ) ) (otherlv_10= ',' ( (lv_mappings_11_0= ruleMapping ) ) )* otherlv_12= ']' ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= 'labelcolor=[' ( ( (lv_LabelColor_14_0= ruleColorArray ) ) (otherlv_15= ',' ( (lv_LabelColor_16_0= ruleColorArray ) ) )* otherlv_17= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= 'valuecolor=[' ( ( (lv_ValueColor_19_0= ruleColorArray ) ) (otherlv_20= ',' ( (lv_ValueColor_21_0= ruleColorArray ) ) )* otherlv_22= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_23= 'visibility=[' ( ( (lv_Visibility_24_0= ruleVisibilityRule ) ) (otherlv_25= ',' ( (lv_Visibility_26_0= ruleVisibilityRule ) ) )* otherlv_27= ']' ) ) ) ) ) )+ {...}?)
            // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3240:3: ( ({...}? => ( ({...}? => (otherlv_2= 'item=' ( (lv_item_3_0= ruleItemRef ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= 'label=' ( ( (lv_label_5_1= RULE_ID | lv_label_5_2= RULE_STRING ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= 'icon=' ( (lv_icon_7_0= ruleIcon ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_8= 'mappings=[' ( (lv_mappings_9_0= ruleMapping ) ) (otherlv_10= ',' ( (lv_mappings_11_0= ruleMapping ) ) )* otherlv_12= ']' ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= 'labelcolor=[' ( ( (lv_LabelColor_14_0= ruleColorArray ) ) (otherlv_15= ',' ( (lv_LabelColor_16_0= ruleColorArray ) ) )* otherlv_17= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= 'valuecolor=[' ( ( (lv_ValueColor_19_0= ruleColorArray ) ) (otherlv_20= ',' ( (lv_ValueColor_21_0= ruleColorArray ) ) )* otherlv_22= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_23= 'visibility=[' ( ( (lv_Visibility_24_0= ruleVisibilityRule ) ) (otherlv_25= ',' ( (lv_Visibility_26_0= ruleVisibilityRule ) ) )* otherlv_27= ']' ) ) ) ) ) )+ {...}?
            {
            // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3240:3: ( ({...}? => ( ({...}? => (otherlv_2= 'item=' ( (lv_item_3_0= ruleItemRef ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= 'label=' ( ( (lv_label_5_1= RULE_ID | lv_label_5_2= RULE_STRING ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= 'icon=' ( (lv_icon_7_0= ruleIcon ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_8= 'mappings=[' ( (lv_mappings_9_0= ruleMapping ) ) (otherlv_10= ',' ( (lv_mappings_11_0= ruleMapping ) ) )* otherlv_12= ']' ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= 'labelcolor=[' ( ( (lv_LabelColor_14_0= ruleColorArray ) ) (otherlv_15= ',' ( (lv_LabelColor_16_0= ruleColorArray ) ) )* otherlv_17= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= 'valuecolor=[' ( ( (lv_ValueColor_19_0= ruleColorArray ) ) (otherlv_20= ',' ( (lv_ValueColor_21_0= ruleColorArray ) ) )* otherlv_22= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_23= 'visibility=[' ( ( (lv_Visibility_24_0= ruleVisibilityRule ) ) (otherlv_25= ',' ( (lv_Visibility_26_0= ruleVisibilityRule ) ) )* otherlv_27= ']' ) ) ) ) ) )+
            int cnt50=0;
            loop50:
            do {
                int alt50=8;
                int LA50_0 = input.LA(1);

                if ( LA50_0 ==18 && getUnorderedGroupHelper().canSelect(grammarAccess.getSwitchAccess().getUnorderedGroup_1(), 0) ) {
                    alt50=1;
                }
                else if ( LA50_0 ==13 && getUnorderedGroupHelper().canSelect(grammarAccess.getSwitchAccess().getUnorderedGroup_1(), 1) ) {
                    alt50=2;
                }
                else if ( LA50_0 ==14 && getUnorderedGroupHelper().canSelect(grammarAccess.getSwitchAccess().getUnorderedGroup_1(), 2) ) {
                    alt50=3;
                }
                else if ( LA50_0 ==38 && getUnorderedGroupHelper().canSelect(grammarAccess.getSwitchAccess().getUnorderedGroup_1(), 3) ) {
                    alt50=4;
                }
                else if ( LA50_0 ==19 && getUnorderedGroupHelper().canSelect(grammarAccess.getSwitchAccess().getUnorderedGroup_1(), 4) ) {
                    alt50=5;
                }
                else if ( LA50_0 ==22 && getUnorderedGroupHelper().canSelect(grammarAccess.getSwitchAccess().getUnorderedGroup_1(), 5) ) {
                    alt50=6;
                }
                else if ( LA50_0 ==23 && getUnorderedGroupHelper().canSelect(grammarAccess.getSwitchAccess().getUnorderedGroup_1(), 6) ) {
                    alt50=7;
                }


                switch (alt50) {
            	case 1 :
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3242:4: ({...}? => ( ({...}? => (otherlv_2= 'item=' ( (lv_item_3_0= ruleItemRef ) ) ) ) ) )
            	    {
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3242:4: ({...}? => ( ({...}? => (otherlv_2= 'item=' ( (lv_item_3_0= ruleItemRef ) ) ) ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3243:5: {...}? => ( ({...}? => (otherlv_2= 'item=' ( (lv_item_3_0= ruleItemRef ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getSwitchAccess().getUnorderedGroup_1(), 0) ) {
            	        throw new FailedPredicateException(input, "ruleSwitch", "getUnorderedGroupHelper().canSelect(grammarAccess.getSwitchAccess().getUnorderedGroup_1(), 0)");
            	    }
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3243:103: ( ({...}? => (otherlv_2= 'item=' ( (lv_item_3_0= ruleItemRef ) ) ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3244:6: ({...}? => (otherlv_2= 'item=' ( (lv_item_3_0= ruleItemRef ) ) ) )
            	    {
            	     
            	    	 				  getUnorderedGroupHelper().select(grammarAccess.getSwitchAccess().getUnorderedGroup_1(), 0);
            	    	 				
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3247:6: ({...}? => (otherlv_2= 'item=' ( (lv_item_3_0= ruleItemRef ) ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3247:7: {...}? => (otherlv_2= 'item=' ( (lv_item_3_0= ruleItemRef ) ) )
            	    {
            	    if ( !((true)) ) {
            	        throw new FailedPredicateException(input, "ruleSwitch", "true");
            	    }
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3247:16: (otherlv_2= 'item=' ( (lv_item_3_0= ruleItemRef ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3247:18: otherlv_2= 'item=' ( (lv_item_3_0= ruleItemRef ) )
            	    {
            	    otherlv_2=(Token)match(input,18,FOLLOW_18_in_ruleSwitch7913); 

            	        	newLeafNode(otherlv_2, grammarAccess.getSwitchAccess().getItemKeyword_1_0_0());
            	        
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3251:1: ( (lv_item_3_0= ruleItemRef ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3252:1: (lv_item_3_0= ruleItemRef )
            	    {
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3252:1: (lv_item_3_0= ruleItemRef )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3253:3: lv_item_3_0= ruleItemRef
            	    {
            	     
            	    	        newCompositeNode(grammarAccess.getSwitchAccess().getItemItemRefParserRuleCall_1_0_1_0()); 
            	    	    
            	    pushFollow(FOLLOW_ruleItemRef_in_ruleSwitch7934);
            	    lv_item_3_0=ruleItemRef();

            	    state._fsp--;


            	    	        if (current==null) {
            	    	            current = createModelElementForParent(grammarAccess.getSwitchRule());
            	    	        }
            	           		set(
            	           			current, 
            	           			"item",
            	            		lv_item_3_0, 
            	            		"ItemRef");
            	    	        afterParserOrEnumRuleCall();
            	    	    

            	    }


            	    }


            	    }


            	    }

            	     
            	    	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getSwitchAccess().getUnorderedGroup_1());
            	    	 				

            	    }


            	    }


            	    }
            	    break;
            	case 2 :
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3276:4: ({...}? => ( ({...}? => (otherlv_4= 'label=' ( ( (lv_label_5_1= RULE_ID | lv_label_5_2= RULE_STRING ) ) ) ) ) ) )
            	    {
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3276:4: ({...}? => ( ({...}? => (otherlv_4= 'label=' ( ( (lv_label_5_1= RULE_ID | lv_label_5_2= RULE_STRING ) ) ) ) ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3277:5: {...}? => ( ({...}? => (otherlv_4= 'label=' ( ( (lv_label_5_1= RULE_ID | lv_label_5_2= RULE_STRING ) ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getSwitchAccess().getUnorderedGroup_1(), 1) ) {
            	        throw new FailedPredicateException(input, "ruleSwitch", "getUnorderedGroupHelper().canSelect(grammarAccess.getSwitchAccess().getUnorderedGroup_1(), 1)");
            	    }
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3277:103: ( ({...}? => (otherlv_4= 'label=' ( ( (lv_label_5_1= RULE_ID | lv_label_5_2= RULE_STRING ) ) ) ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3278:6: ({...}? => (otherlv_4= 'label=' ( ( (lv_label_5_1= RULE_ID | lv_label_5_2= RULE_STRING ) ) ) ) )
            	    {
            	     
            	    	 				  getUnorderedGroupHelper().select(grammarAccess.getSwitchAccess().getUnorderedGroup_1(), 1);
            	    	 				
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3281:6: ({...}? => (otherlv_4= 'label=' ( ( (lv_label_5_1= RULE_ID | lv_label_5_2= RULE_STRING ) ) ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3281:7: {...}? => (otherlv_4= 'label=' ( ( (lv_label_5_1= RULE_ID | lv_label_5_2= RULE_STRING ) ) ) )
            	    {
            	    if ( !((true)) ) {
            	        throw new FailedPredicateException(input, "ruleSwitch", "true");
            	    }
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3281:16: (otherlv_4= 'label=' ( ( (lv_label_5_1= RULE_ID | lv_label_5_2= RULE_STRING ) ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3281:18: otherlv_4= 'label=' ( ( (lv_label_5_1= RULE_ID | lv_label_5_2= RULE_STRING ) ) )
            	    {
            	    otherlv_4=(Token)match(input,13,FOLLOW_13_in_ruleSwitch8002); 

            	        	newLeafNode(otherlv_4, grammarAccess.getSwitchAccess().getLabelKeyword_1_1_0());
            	        
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3285:1: ( ( (lv_label_5_1= RULE_ID | lv_label_5_2= RULE_STRING ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3286:1: ( (lv_label_5_1= RULE_ID | lv_label_5_2= RULE_STRING ) )
            	    {
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3286:1: ( (lv_label_5_1= RULE_ID | lv_label_5_2= RULE_STRING ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3287:1: (lv_label_5_1= RULE_ID | lv_label_5_2= RULE_STRING )
            	    {
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3287:1: (lv_label_5_1= RULE_ID | lv_label_5_2= RULE_STRING )
            	    int alt45=2;
            	    int LA45_0 = input.LA(1);

            	    if ( (LA45_0==RULE_ID) ) {
            	        alt45=1;
            	    }
            	    else if ( (LA45_0==RULE_STRING) ) {
            	        alt45=2;
            	    }
            	    else {
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 45, 0, input);

            	        throw nvae;
            	    }
            	    switch (alt45) {
            	        case 1 :
            	            // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3288:3: lv_label_5_1= RULE_ID
            	            {
            	            lv_label_5_1=(Token)match(input,RULE_ID,FOLLOW_RULE_ID_in_ruleSwitch8021); 

            	            			newLeafNode(lv_label_5_1, grammarAccess.getSwitchAccess().getLabelIDTerminalRuleCall_1_1_1_0_0()); 
            	            		

            	            	        if (current==null) {
            	            	            current = createModelElement(grammarAccess.getSwitchRule());
            	            	        }
            	                   		setWithLastConsumed(
            	                   			current, 
            	                   			"label",
            	                    		lv_label_5_1, 
            	                    		"ID");
            	            	    

            	            }
            	            break;
            	        case 2 :
            	            // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3303:8: lv_label_5_2= RULE_STRING
            	            {
            	            lv_label_5_2=(Token)match(input,RULE_STRING,FOLLOW_RULE_STRING_in_ruleSwitch8041); 

            	            			newLeafNode(lv_label_5_2, grammarAccess.getSwitchAccess().getLabelSTRINGTerminalRuleCall_1_1_1_0_1()); 
            	            		

            	            	        if (current==null) {
            	            	            current = createModelElement(grammarAccess.getSwitchRule());
            	            	        }
            	                   		setWithLastConsumed(
            	                   			current, 
            	                   			"label",
            	                    		lv_label_5_2, 
            	                    		"STRING");
            	            	    

            	            }
            	            break;

            	    }


            	    }


            	    }


            	    }


            	    }

            	     
            	    	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getSwitchAccess().getUnorderedGroup_1());
            	    	 				

            	    }


            	    }


            	    }
            	    break;
            	case 3 :
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3328:4: ({...}? => ( ({...}? => (otherlv_6= 'icon=' ( (lv_icon_7_0= ruleIcon ) ) ) ) ) )
            	    {
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3328:4: ({...}? => ( ({...}? => (otherlv_6= 'icon=' ( (lv_icon_7_0= ruleIcon ) ) ) ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3329:5: {...}? => ( ({...}? => (otherlv_6= 'icon=' ( (lv_icon_7_0= ruleIcon ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getSwitchAccess().getUnorderedGroup_1(), 2) ) {
            	        throw new FailedPredicateException(input, "ruleSwitch", "getUnorderedGroupHelper().canSelect(grammarAccess.getSwitchAccess().getUnorderedGroup_1(), 2)");
            	    }
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3329:103: ( ({...}? => (otherlv_6= 'icon=' ( (lv_icon_7_0= ruleIcon ) ) ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3330:6: ({...}? => (otherlv_6= 'icon=' ( (lv_icon_7_0= ruleIcon ) ) ) )
            	    {
            	     
            	    	 				  getUnorderedGroupHelper().select(grammarAccess.getSwitchAccess().getUnorderedGroup_1(), 2);
            	    	 				
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3333:6: ({...}? => (otherlv_6= 'icon=' ( (lv_icon_7_0= ruleIcon ) ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3333:7: {...}? => (otherlv_6= 'icon=' ( (lv_icon_7_0= ruleIcon ) ) )
            	    {
            	    if ( !((true)) ) {
            	        throw new FailedPredicateException(input, "ruleSwitch", "true");
            	    }
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3333:16: (otherlv_6= 'icon=' ( (lv_icon_7_0= ruleIcon ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3333:18: otherlv_6= 'icon=' ( (lv_icon_7_0= ruleIcon ) )
            	    {
            	    otherlv_6=(Token)match(input,14,FOLLOW_14_in_ruleSwitch8117); 

            	        	newLeafNode(otherlv_6, grammarAccess.getSwitchAccess().getIconKeyword_1_2_0());
            	        
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3337:1: ( (lv_icon_7_0= ruleIcon ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3338:1: (lv_icon_7_0= ruleIcon )
            	    {
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3338:1: (lv_icon_7_0= ruleIcon )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3339:3: lv_icon_7_0= ruleIcon
            	    {
            	     
            	    	        newCompositeNode(grammarAccess.getSwitchAccess().getIconIconParserRuleCall_1_2_1_0()); 
            	    	    
            	    pushFollow(FOLLOW_ruleIcon_in_ruleSwitch8138);
            	    lv_icon_7_0=ruleIcon();

            	    state._fsp--;


            	    	        if (current==null) {
            	    	            current = createModelElementForParent(grammarAccess.getSwitchRule());
            	    	        }
            	           		set(
            	           			current, 
            	           			"icon",
            	            		lv_icon_7_0, 
            	            		"Icon");
            	    	        afterParserOrEnumRuleCall();
            	    	    

            	    }


            	    }


            	    }


            	    }

            	     
            	    	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getSwitchAccess().getUnorderedGroup_1());
            	    	 				

            	    }


            	    }


            	    }
            	    break;
            	case 4 :
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3362:4: ({...}? => ( ({...}? => (otherlv_8= 'mappings=[' ( (lv_mappings_9_0= ruleMapping ) ) (otherlv_10= ',' ( (lv_mappings_11_0= ruleMapping ) ) )* otherlv_12= ']' ) ) ) )
            	    {
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3362:4: ({...}? => ( ({...}? => (otherlv_8= 'mappings=[' ( (lv_mappings_9_0= ruleMapping ) ) (otherlv_10= ',' ( (lv_mappings_11_0= ruleMapping ) ) )* otherlv_12= ']' ) ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3363:5: {...}? => ( ({...}? => (otherlv_8= 'mappings=[' ( (lv_mappings_9_0= ruleMapping ) ) (otherlv_10= ',' ( (lv_mappings_11_0= ruleMapping ) ) )* otherlv_12= ']' ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getSwitchAccess().getUnorderedGroup_1(), 3) ) {
            	        throw new FailedPredicateException(input, "ruleSwitch", "getUnorderedGroupHelper().canSelect(grammarAccess.getSwitchAccess().getUnorderedGroup_1(), 3)");
            	    }
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3363:103: ( ({...}? => (otherlv_8= 'mappings=[' ( (lv_mappings_9_0= ruleMapping ) ) (otherlv_10= ',' ( (lv_mappings_11_0= ruleMapping ) ) )* otherlv_12= ']' ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3364:6: ({...}? => (otherlv_8= 'mappings=[' ( (lv_mappings_9_0= ruleMapping ) ) (otherlv_10= ',' ( (lv_mappings_11_0= ruleMapping ) ) )* otherlv_12= ']' ) )
            	    {
            	     
            	    	 				  getUnorderedGroupHelper().select(grammarAccess.getSwitchAccess().getUnorderedGroup_1(), 3);
            	    	 				
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3367:6: ({...}? => (otherlv_8= 'mappings=[' ( (lv_mappings_9_0= ruleMapping ) ) (otherlv_10= ',' ( (lv_mappings_11_0= ruleMapping ) ) )* otherlv_12= ']' ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3367:7: {...}? => (otherlv_8= 'mappings=[' ( (lv_mappings_9_0= ruleMapping ) ) (otherlv_10= ',' ( (lv_mappings_11_0= ruleMapping ) ) )* otherlv_12= ']' )
            	    {
            	    if ( !((true)) ) {
            	        throw new FailedPredicateException(input, "ruleSwitch", "true");
            	    }
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3367:16: (otherlv_8= 'mappings=[' ( (lv_mappings_9_0= ruleMapping ) ) (otherlv_10= ',' ( (lv_mappings_11_0= ruleMapping ) ) )* otherlv_12= ']' )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3367:18: otherlv_8= 'mappings=[' ( (lv_mappings_9_0= ruleMapping ) ) (otherlv_10= ',' ( (lv_mappings_11_0= ruleMapping ) ) )* otherlv_12= ']'
            	    {
            	    otherlv_8=(Token)match(input,38,FOLLOW_38_in_ruleSwitch8206); 

            	        	newLeafNode(otherlv_8, grammarAccess.getSwitchAccess().getMappingsKeyword_1_3_0());
            	        
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3371:1: ( (lv_mappings_9_0= ruleMapping ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3372:1: (lv_mappings_9_0= ruleMapping )
            	    {
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3372:1: (lv_mappings_9_0= ruleMapping )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3373:3: lv_mappings_9_0= ruleMapping
            	    {
            	     
            	    	        newCompositeNode(grammarAccess.getSwitchAccess().getMappingsMappingParserRuleCall_1_3_1_0()); 
            	    	    
            	    pushFollow(FOLLOW_ruleMapping_in_ruleSwitch8227);
            	    lv_mappings_9_0=ruleMapping();

            	    state._fsp--;


            	    	        if (current==null) {
            	    	            current = createModelElementForParent(grammarAccess.getSwitchRule());
            	    	        }
            	           		add(
            	           			current, 
            	           			"mappings",
            	            		lv_mappings_9_0, 
            	            		"Mapping");
            	    	        afterParserOrEnumRuleCall();
            	    	    

            	    }


            	    }

            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3389:2: (otherlv_10= ',' ( (lv_mappings_11_0= ruleMapping ) ) )*
            	    loop46:
            	    do {
            	        int alt46=2;
            	        int LA46_0 = input.LA(1);

            	        if ( (LA46_0==20) ) {
            	            alt46=1;
            	        }


            	        switch (alt46) {
            	    	case 1 :
            	    	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3389:4: otherlv_10= ',' ( (lv_mappings_11_0= ruleMapping ) )
            	    	    {
            	    	    otherlv_10=(Token)match(input,20,FOLLOW_20_in_ruleSwitch8240); 

            	    	        	newLeafNode(otherlv_10, grammarAccess.getSwitchAccess().getCommaKeyword_1_3_2_0());
            	    	        
            	    	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3393:1: ( (lv_mappings_11_0= ruleMapping ) )
            	    	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3394:1: (lv_mappings_11_0= ruleMapping )
            	    	    {
            	    	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3394:1: (lv_mappings_11_0= ruleMapping )
            	    	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3395:3: lv_mappings_11_0= ruleMapping
            	    	    {
            	    	     
            	    	    	        newCompositeNode(grammarAccess.getSwitchAccess().getMappingsMappingParserRuleCall_1_3_2_1_0()); 
            	    	    	    
            	    	    pushFollow(FOLLOW_ruleMapping_in_ruleSwitch8261);
            	    	    lv_mappings_11_0=ruleMapping();

            	    	    state._fsp--;


            	    	    	        if (current==null) {
            	    	    	            current = createModelElementForParent(grammarAccess.getSwitchRule());
            	    	    	        }
            	    	           		add(
            	    	           			current, 
            	    	           			"mappings",
            	    	            		lv_mappings_11_0, 
            	    	            		"Mapping");
            	    	    	        afterParserOrEnumRuleCall();
            	    	    	    

            	    	    }


            	    	    }


            	    	    }
            	    	    break;

            	    	default :
            	    	    break loop46;
            	        }
            	    } while (true);

            	    otherlv_12=(Token)match(input,21,FOLLOW_21_in_ruleSwitch8275); 

            	        	newLeafNode(otherlv_12, grammarAccess.getSwitchAccess().getRightSquareBracketKeyword_1_3_3());
            	        

            	    }


            	    }

            	     
            	    	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getSwitchAccess().getUnorderedGroup_1());
            	    	 				

            	    }


            	    }


            	    }
            	    break;
            	case 5 :
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3422:4: ({...}? => ( ({...}? => (otherlv_13= 'labelcolor=[' ( ( (lv_LabelColor_14_0= ruleColorArray ) ) (otherlv_15= ',' ( (lv_LabelColor_16_0= ruleColorArray ) ) )* otherlv_17= ']' ) ) ) ) )
            	    {
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3422:4: ({...}? => ( ({...}? => (otherlv_13= 'labelcolor=[' ( ( (lv_LabelColor_14_0= ruleColorArray ) ) (otherlv_15= ',' ( (lv_LabelColor_16_0= ruleColorArray ) ) )* otherlv_17= ']' ) ) ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3423:5: {...}? => ( ({...}? => (otherlv_13= 'labelcolor=[' ( ( (lv_LabelColor_14_0= ruleColorArray ) ) (otherlv_15= ',' ( (lv_LabelColor_16_0= ruleColorArray ) ) )* otherlv_17= ']' ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getSwitchAccess().getUnorderedGroup_1(), 4) ) {
            	        throw new FailedPredicateException(input, "ruleSwitch", "getUnorderedGroupHelper().canSelect(grammarAccess.getSwitchAccess().getUnorderedGroup_1(), 4)");
            	    }
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3423:103: ( ({...}? => (otherlv_13= 'labelcolor=[' ( ( (lv_LabelColor_14_0= ruleColorArray ) ) (otherlv_15= ',' ( (lv_LabelColor_16_0= ruleColorArray ) ) )* otherlv_17= ']' ) ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3424:6: ({...}? => (otherlv_13= 'labelcolor=[' ( ( (lv_LabelColor_14_0= ruleColorArray ) ) (otherlv_15= ',' ( (lv_LabelColor_16_0= ruleColorArray ) ) )* otherlv_17= ']' ) ) )
            	    {
            	     
            	    	 				  getUnorderedGroupHelper().select(grammarAccess.getSwitchAccess().getUnorderedGroup_1(), 4);
            	    	 				
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3427:6: ({...}? => (otherlv_13= 'labelcolor=[' ( ( (lv_LabelColor_14_0= ruleColorArray ) ) (otherlv_15= ',' ( (lv_LabelColor_16_0= ruleColorArray ) ) )* otherlv_17= ']' ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3427:7: {...}? => (otherlv_13= 'labelcolor=[' ( ( (lv_LabelColor_14_0= ruleColorArray ) ) (otherlv_15= ',' ( (lv_LabelColor_16_0= ruleColorArray ) ) )* otherlv_17= ']' ) )
            	    {
            	    if ( !((true)) ) {
            	        throw new FailedPredicateException(input, "ruleSwitch", "true");
            	    }
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3427:16: (otherlv_13= 'labelcolor=[' ( ( (lv_LabelColor_14_0= ruleColorArray ) ) (otherlv_15= ',' ( (lv_LabelColor_16_0= ruleColorArray ) ) )* otherlv_17= ']' ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3427:18: otherlv_13= 'labelcolor=[' ( ( (lv_LabelColor_14_0= ruleColorArray ) ) (otherlv_15= ',' ( (lv_LabelColor_16_0= ruleColorArray ) ) )* otherlv_17= ']' )
            	    {
            	    otherlv_13=(Token)match(input,19,FOLLOW_19_in_ruleSwitch8343); 

            	        	newLeafNode(otherlv_13, grammarAccess.getSwitchAccess().getLabelcolorKeyword_1_4_0());
            	        
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3431:1: ( ( (lv_LabelColor_14_0= ruleColorArray ) ) (otherlv_15= ',' ( (lv_LabelColor_16_0= ruleColorArray ) ) )* otherlv_17= ']' )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3431:2: ( (lv_LabelColor_14_0= ruleColorArray ) ) (otherlv_15= ',' ( (lv_LabelColor_16_0= ruleColorArray ) ) )* otherlv_17= ']'
            	    {
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3431:2: ( (lv_LabelColor_14_0= ruleColorArray ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3432:1: (lv_LabelColor_14_0= ruleColorArray )
            	    {
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3432:1: (lv_LabelColor_14_0= ruleColorArray )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3433:3: lv_LabelColor_14_0= ruleColorArray
            	    {
            	     
            	    	        newCompositeNode(grammarAccess.getSwitchAccess().getLabelColorColorArrayParserRuleCall_1_4_1_0_0()); 
            	    	    
            	    pushFollow(FOLLOW_ruleColorArray_in_ruleSwitch8365);
            	    lv_LabelColor_14_0=ruleColorArray();

            	    state._fsp--;


            	    	        if (current==null) {
            	    	            current = createModelElementForParent(grammarAccess.getSwitchRule());
            	    	        }
            	           		add(
            	           			current, 
            	           			"LabelColor",
            	            		lv_LabelColor_14_0, 
            	            		"ColorArray");
            	    	        afterParserOrEnumRuleCall();
            	    	    

            	    }


            	    }

            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3449:2: (otherlv_15= ',' ( (lv_LabelColor_16_0= ruleColorArray ) ) )*
            	    loop47:
            	    do {
            	        int alt47=2;
            	        int LA47_0 = input.LA(1);

            	        if ( (LA47_0==20) ) {
            	            alt47=1;
            	        }


            	        switch (alt47) {
            	    	case 1 :
            	    	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3449:4: otherlv_15= ',' ( (lv_LabelColor_16_0= ruleColorArray ) )
            	    	    {
            	    	    otherlv_15=(Token)match(input,20,FOLLOW_20_in_ruleSwitch8378); 

            	    	        	newLeafNode(otherlv_15, grammarAccess.getSwitchAccess().getCommaKeyword_1_4_1_1_0());
            	    	        
            	    	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3453:1: ( (lv_LabelColor_16_0= ruleColorArray ) )
            	    	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3454:1: (lv_LabelColor_16_0= ruleColorArray )
            	    	    {
            	    	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3454:1: (lv_LabelColor_16_0= ruleColorArray )
            	    	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3455:3: lv_LabelColor_16_0= ruleColorArray
            	    	    {
            	    	     
            	    	    	        newCompositeNode(grammarAccess.getSwitchAccess().getLabelColorColorArrayParserRuleCall_1_4_1_1_1_0()); 
            	    	    	    
            	    	    pushFollow(FOLLOW_ruleColorArray_in_ruleSwitch8399);
            	    	    lv_LabelColor_16_0=ruleColorArray();

            	    	    state._fsp--;


            	    	    	        if (current==null) {
            	    	    	            current = createModelElementForParent(grammarAccess.getSwitchRule());
            	    	    	        }
            	    	           		add(
            	    	           			current, 
            	    	           			"LabelColor",
            	    	            		lv_LabelColor_16_0, 
            	    	            		"ColorArray");
            	    	    	        afterParserOrEnumRuleCall();
            	    	    	    

            	    	    }


            	    	    }


            	    	    }
            	    	    break;

            	    	default :
            	    	    break loop47;
            	        }
            	    } while (true);

            	    otherlv_17=(Token)match(input,21,FOLLOW_21_in_ruleSwitch8413); 

            	        	newLeafNode(otherlv_17, grammarAccess.getSwitchAccess().getRightSquareBracketKeyword_1_4_1_2());
            	        

            	    }


            	    }


            	    }

            	     
            	    	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getSwitchAccess().getUnorderedGroup_1());
            	    	 				

            	    }


            	    }


            	    }
            	    break;
            	case 6 :
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3482:4: ({...}? => ( ({...}? => (otherlv_18= 'valuecolor=[' ( ( (lv_ValueColor_19_0= ruleColorArray ) ) (otherlv_20= ',' ( (lv_ValueColor_21_0= ruleColorArray ) ) )* otherlv_22= ']' ) ) ) ) )
            	    {
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3482:4: ({...}? => ( ({...}? => (otherlv_18= 'valuecolor=[' ( ( (lv_ValueColor_19_0= ruleColorArray ) ) (otherlv_20= ',' ( (lv_ValueColor_21_0= ruleColorArray ) ) )* otherlv_22= ']' ) ) ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3483:5: {...}? => ( ({...}? => (otherlv_18= 'valuecolor=[' ( ( (lv_ValueColor_19_0= ruleColorArray ) ) (otherlv_20= ',' ( (lv_ValueColor_21_0= ruleColorArray ) ) )* otherlv_22= ']' ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getSwitchAccess().getUnorderedGroup_1(), 5) ) {
            	        throw new FailedPredicateException(input, "ruleSwitch", "getUnorderedGroupHelper().canSelect(grammarAccess.getSwitchAccess().getUnorderedGroup_1(), 5)");
            	    }
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3483:103: ( ({...}? => (otherlv_18= 'valuecolor=[' ( ( (lv_ValueColor_19_0= ruleColorArray ) ) (otherlv_20= ',' ( (lv_ValueColor_21_0= ruleColorArray ) ) )* otherlv_22= ']' ) ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3484:6: ({...}? => (otherlv_18= 'valuecolor=[' ( ( (lv_ValueColor_19_0= ruleColorArray ) ) (otherlv_20= ',' ( (lv_ValueColor_21_0= ruleColorArray ) ) )* otherlv_22= ']' ) ) )
            	    {
            	     
            	    	 				  getUnorderedGroupHelper().select(grammarAccess.getSwitchAccess().getUnorderedGroup_1(), 5);
            	    	 				
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3487:6: ({...}? => (otherlv_18= 'valuecolor=[' ( ( (lv_ValueColor_19_0= ruleColorArray ) ) (otherlv_20= ',' ( (lv_ValueColor_21_0= ruleColorArray ) ) )* otherlv_22= ']' ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3487:7: {...}? => (otherlv_18= 'valuecolor=[' ( ( (lv_ValueColor_19_0= ruleColorArray ) ) (otherlv_20= ',' ( (lv_ValueColor_21_0= ruleColorArray ) ) )* otherlv_22= ']' ) )
            	    {
            	    if ( !((true)) ) {
            	        throw new FailedPredicateException(input, "ruleSwitch", "true");
            	    }
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3487:16: (otherlv_18= 'valuecolor=[' ( ( (lv_ValueColor_19_0= ruleColorArray ) ) (otherlv_20= ',' ( (lv_ValueColor_21_0= ruleColorArray ) ) )* otherlv_22= ']' ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3487:18: otherlv_18= 'valuecolor=[' ( ( (lv_ValueColor_19_0= ruleColorArray ) ) (otherlv_20= ',' ( (lv_ValueColor_21_0= ruleColorArray ) ) )* otherlv_22= ']' )
            	    {
            	    otherlv_18=(Token)match(input,22,FOLLOW_22_in_ruleSwitch8482); 

            	        	newLeafNode(otherlv_18, grammarAccess.getSwitchAccess().getValuecolorKeyword_1_5_0());
            	        
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3491:1: ( ( (lv_ValueColor_19_0= ruleColorArray ) ) (otherlv_20= ',' ( (lv_ValueColor_21_0= ruleColorArray ) ) )* otherlv_22= ']' )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3491:2: ( (lv_ValueColor_19_0= ruleColorArray ) ) (otherlv_20= ',' ( (lv_ValueColor_21_0= ruleColorArray ) ) )* otherlv_22= ']'
            	    {
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3491:2: ( (lv_ValueColor_19_0= ruleColorArray ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3492:1: (lv_ValueColor_19_0= ruleColorArray )
            	    {
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3492:1: (lv_ValueColor_19_0= ruleColorArray )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3493:3: lv_ValueColor_19_0= ruleColorArray
            	    {
            	     
            	    	        newCompositeNode(grammarAccess.getSwitchAccess().getValueColorColorArrayParserRuleCall_1_5_1_0_0()); 
            	    	    
            	    pushFollow(FOLLOW_ruleColorArray_in_ruleSwitch8504);
            	    lv_ValueColor_19_0=ruleColorArray();

            	    state._fsp--;


            	    	        if (current==null) {
            	    	            current = createModelElementForParent(grammarAccess.getSwitchRule());
            	    	        }
            	           		add(
            	           			current, 
            	           			"ValueColor",
            	            		lv_ValueColor_19_0, 
            	            		"ColorArray");
            	    	        afterParserOrEnumRuleCall();
            	    	    

            	    }


            	    }

            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3509:2: (otherlv_20= ',' ( (lv_ValueColor_21_0= ruleColorArray ) ) )*
            	    loop48:
            	    do {
            	        int alt48=2;
            	        int LA48_0 = input.LA(1);

            	        if ( (LA48_0==20) ) {
            	            alt48=1;
            	        }


            	        switch (alt48) {
            	    	case 1 :
            	    	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3509:4: otherlv_20= ',' ( (lv_ValueColor_21_0= ruleColorArray ) )
            	    	    {
            	    	    otherlv_20=(Token)match(input,20,FOLLOW_20_in_ruleSwitch8517); 

            	    	        	newLeafNode(otherlv_20, grammarAccess.getSwitchAccess().getCommaKeyword_1_5_1_1_0());
            	    	        
            	    	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3513:1: ( (lv_ValueColor_21_0= ruleColorArray ) )
            	    	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3514:1: (lv_ValueColor_21_0= ruleColorArray )
            	    	    {
            	    	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3514:1: (lv_ValueColor_21_0= ruleColorArray )
            	    	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3515:3: lv_ValueColor_21_0= ruleColorArray
            	    	    {
            	    	     
            	    	    	        newCompositeNode(grammarAccess.getSwitchAccess().getValueColorColorArrayParserRuleCall_1_5_1_1_1_0()); 
            	    	    	    
            	    	    pushFollow(FOLLOW_ruleColorArray_in_ruleSwitch8538);
            	    	    lv_ValueColor_21_0=ruleColorArray();

            	    	    state._fsp--;


            	    	    	        if (current==null) {
            	    	    	            current = createModelElementForParent(grammarAccess.getSwitchRule());
            	    	    	        }
            	    	           		add(
            	    	           			current, 
            	    	           			"ValueColor",
            	    	            		lv_ValueColor_21_0, 
            	    	            		"ColorArray");
            	    	    	        afterParserOrEnumRuleCall();
            	    	    	    

            	    	    }


            	    	    }


            	    	    }
            	    	    break;

            	    	default :
            	    	    break loop48;
            	        }
            	    } while (true);

            	    otherlv_22=(Token)match(input,21,FOLLOW_21_in_ruleSwitch8552); 

            	        	newLeafNode(otherlv_22, grammarAccess.getSwitchAccess().getRightSquareBracketKeyword_1_5_1_2());
            	        

            	    }


            	    }


            	    }

            	     
            	    	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getSwitchAccess().getUnorderedGroup_1());
            	    	 				

            	    }


            	    }


            	    }
            	    break;
            	case 7 :
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3542:4: ({...}? => ( ({...}? => (otherlv_23= 'visibility=[' ( ( (lv_Visibility_24_0= ruleVisibilityRule ) ) (otherlv_25= ',' ( (lv_Visibility_26_0= ruleVisibilityRule ) ) )* otherlv_27= ']' ) ) ) ) )
            	    {
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3542:4: ({...}? => ( ({...}? => (otherlv_23= 'visibility=[' ( ( (lv_Visibility_24_0= ruleVisibilityRule ) ) (otherlv_25= ',' ( (lv_Visibility_26_0= ruleVisibilityRule ) ) )* otherlv_27= ']' ) ) ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3543:5: {...}? => ( ({...}? => (otherlv_23= 'visibility=[' ( ( (lv_Visibility_24_0= ruleVisibilityRule ) ) (otherlv_25= ',' ( (lv_Visibility_26_0= ruleVisibilityRule ) ) )* otherlv_27= ']' ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getSwitchAccess().getUnorderedGroup_1(), 6) ) {
            	        throw new FailedPredicateException(input, "ruleSwitch", "getUnorderedGroupHelper().canSelect(grammarAccess.getSwitchAccess().getUnorderedGroup_1(), 6)");
            	    }
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3543:103: ( ({...}? => (otherlv_23= 'visibility=[' ( ( (lv_Visibility_24_0= ruleVisibilityRule ) ) (otherlv_25= ',' ( (lv_Visibility_26_0= ruleVisibilityRule ) ) )* otherlv_27= ']' ) ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3544:6: ({...}? => (otherlv_23= 'visibility=[' ( ( (lv_Visibility_24_0= ruleVisibilityRule ) ) (otherlv_25= ',' ( (lv_Visibility_26_0= ruleVisibilityRule ) ) )* otherlv_27= ']' ) ) )
            	    {
            	     
            	    	 				  getUnorderedGroupHelper().select(grammarAccess.getSwitchAccess().getUnorderedGroup_1(), 6);
            	    	 				
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3547:6: ({...}? => (otherlv_23= 'visibility=[' ( ( (lv_Visibility_24_0= ruleVisibilityRule ) ) (otherlv_25= ',' ( (lv_Visibility_26_0= ruleVisibilityRule ) ) )* otherlv_27= ']' ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3547:7: {...}? => (otherlv_23= 'visibility=[' ( ( (lv_Visibility_24_0= ruleVisibilityRule ) ) (otherlv_25= ',' ( (lv_Visibility_26_0= ruleVisibilityRule ) ) )* otherlv_27= ']' ) )
            	    {
            	    if ( !((true)) ) {
            	        throw new FailedPredicateException(input, "ruleSwitch", "true");
            	    }
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3547:16: (otherlv_23= 'visibility=[' ( ( (lv_Visibility_24_0= ruleVisibilityRule ) ) (otherlv_25= ',' ( (lv_Visibility_26_0= ruleVisibilityRule ) ) )* otherlv_27= ']' ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3547:18: otherlv_23= 'visibility=[' ( ( (lv_Visibility_24_0= ruleVisibilityRule ) ) (otherlv_25= ',' ( (lv_Visibility_26_0= ruleVisibilityRule ) ) )* otherlv_27= ']' )
            	    {
            	    otherlv_23=(Token)match(input,23,FOLLOW_23_in_ruleSwitch8621); 

            	        	newLeafNode(otherlv_23, grammarAccess.getSwitchAccess().getVisibilityKeyword_1_6_0());
            	        
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3551:1: ( ( (lv_Visibility_24_0= ruleVisibilityRule ) ) (otherlv_25= ',' ( (lv_Visibility_26_0= ruleVisibilityRule ) ) )* otherlv_27= ']' )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3551:2: ( (lv_Visibility_24_0= ruleVisibilityRule ) ) (otherlv_25= ',' ( (lv_Visibility_26_0= ruleVisibilityRule ) ) )* otherlv_27= ']'
            	    {
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3551:2: ( (lv_Visibility_24_0= ruleVisibilityRule ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3552:1: (lv_Visibility_24_0= ruleVisibilityRule )
            	    {
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3552:1: (lv_Visibility_24_0= ruleVisibilityRule )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3553:3: lv_Visibility_24_0= ruleVisibilityRule
            	    {
            	     
            	    	        newCompositeNode(grammarAccess.getSwitchAccess().getVisibilityVisibilityRuleParserRuleCall_1_6_1_0_0()); 
            	    	    
            	    pushFollow(FOLLOW_ruleVisibilityRule_in_ruleSwitch8643);
            	    lv_Visibility_24_0=ruleVisibilityRule();

            	    state._fsp--;


            	    	        if (current==null) {
            	    	            current = createModelElementForParent(grammarAccess.getSwitchRule());
            	    	        }
            	           		add(
            	           			current, 
            	           			"Visibility",
            	            		lv_Visibility_24_0, 
            	            		"VisibilityRule");
            	    	        afterParserOrEnumRuleCall();
            	    	    

            	    }


            	    }

            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3569:2: (otherlv_25= ',' ( (lv_Visibility_26_0= ruleVisibilityRule ) ) )*
            	    loop49:
            	    do {
            	        int alt49=2;
            	        int LA49_0 = input.LA(1);

            	        if ( (LA49_0==20) ) {
            	            alt49=1;
            	        }


            	        switch (alt49) {
            	    	case 1 :
            	    	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3569:4: otherlv_25= ',' ( (lv_Visibility_26_0= ruleVisibilityRule ) )
            	    	    {
            	    	    otherlv_25=(Token)match(input,20,FOLLOW_20_in_ruleSwitch8656); 

            	    	        	newLeafNode(otherlv_25, grammarAccess.getSwitchAccess().getCommaKeyword_1_6_1_1_0());
            	    	        
            	    	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3573:1: ( (lv_Visibility_26_0= ruleVisibilityRule ) )
            	    	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3574:1: (lv_Visibility_26_0= ruleVisibilityRule )
            	    	    {
            	    	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3574:1: (lv_Visibility_26_0= ruleVisibilityRule )
            	    	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3575:3: lv_Visibility_26_0= ruleVisibilityRule
            	    	    {
            	    	     
            	    	    	        newCompositeNode(grammarAccess.getSwitchAccess().getVisibilityVisibilityRuleParserRuleCall_1_6_1_1_1_0()); 
            	    	    	    
            	    	    pushFollow(FOLLOW_ruleVisibilityRule_in_ruleSwitch8677);
            	    	    lv_Visibility_26_0=ruleVisibilityRule();

            	    	    state._fsp--;


            	    	    	        if (current==null) {
            	    	    	            current = createModelElementForParent(grammarAccess.getSwitchRule());
            	    	    	        }
            	    	           		add(
            	    	           			current, 
            	    	           			"Visibility",
            	    	            		lv_Visibility_26_0, 
            	    	            		"VisibilityRule");
            	    	    	        afterParserOrEnumRuleCall();
            	    	    	    

            	    	    }


            	    	    }


            	    	    }
            	    	    break;

            	    	default :
            	    	    break loop49;
            	        }
            	    } while (true);

            	    otherlv_27=(Token)match(input,21,FOLLOW_21_in_ruleSwitch8691); 

            	        	newLeafNode(otherlv_27, grammarAccess.getSwitchAccess().getRightSquareBracketKeyword_1_6_1_2());
            	        

            	    }


            	    }


            	    }

            	     
            	    	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getSwitchAccess().getUnorderedGroup_1());
            	    	 				

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    if ( cnt50 >= 1 ) break loop50;
                        EarlyExitException eee =
                            new EarlyExitException(50, input);
                        throw eee;
                }
                cnt50++;
            } while (true);

            if ( ! getUnorderedGroupHelper().canLeave(grammarAccess.getSwitchAccess().getUnorderedGroup_1()) ) {
                throw new FailedPredicateException(input, "ruleSwitch", "getUnorderedGroupHelper().canLeave(grammarAccess.getSwitchAccess().getUnorderedGroup_1())");
            }

            }


            }

             
            	  getUnorderedGroupHelper().leave(grammarAccess.getSwitchAccess().getUnorderedGroup_1());
            	

            }


            }


            }

             leaveRule(); 
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleSwitch"


    // $ANTLR start "entryRuleSlider"
    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3618:1: entryRuleSlider returns [EObject current=null] : iv_ruleSlider= ruleSlider EOF ;
    public final EObject entryRuleSlider() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleSlider = null;


        try {
            // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3619:2: (iv_ruleSlider= ruleSlider EOF )
            // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3620:2: iv_ruleSlider= ruleSlider EOF
            {
             newCompositeNode(grammarAccess.getSliderRule()); 
            pushFollow(FOLLOW_ruleSlider_in_entryRuleSlider8775);
            iv_ruleSlider=ruleSlider();

            state._fsp--;

             current =iv_ruleSlider; 
            match(input,EOF,FOLLOW_EOF_in_entryRuleSlider8785); 

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleSlider"


    // $ANTLR start "ruleSlider"
    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3627:1: ruleSlider returns [EObject current=null] : (otherlv_0= 'Slider' ( ( ( ( ({...}? => ( ({...}? => (otherlv_2= 'item=' ( (lv_item_3_0= ruleItemRef ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= 'label=' ( ( (lv_label_5_1= RULE_ID | lv_label_5_2= RULE_STRING ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= 'icon=' ( (lv_icon_7_0= ruleIcon ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_8= 'sendFrequency=' ( (lv_frequency_9_0= RULE_INT ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_switchEnabled_10_0= 'switchSupport' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_11= 'labelcolor=[' ( ( (lv_LabelColor_12_0= ruleColorArray ) ) (otherlv_13= ',' ( (lv_LabelColor_14_0= ruleColorArray ) ) )* otherlv_15= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_16= 'valuecolor=[' ( ( (lv_ValueColor_17_0= ruleColorArray ) ) (otherlv_18= ',' ( (lv_ValueColor_19_0= ruleColorArray ) ) )* otherlv_20= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= 'visibility=[' ( ( (lv_Visibility_22_0= ruleVisibilityRule ) ) (otherlv_23= ',' ( (lv_Visibility_24_0= ruleVisibilityRule ) ) )* otherlv_25= ']' ) ) ) ) ) )+ {...}?) ) ) ) ;
    public final EObject ruleSlider() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_2=null;
        Token otherlv_4=null;
        Token lv_label_5_1=null;
        Token lv_label_5_2=null;
        Token otherlv_6=null;
        Token otherlv_8=null;
        Token lv_frequency_9_0=null;
        Token lv_switchEnabled_10_0=null;
        Token otherlv_11=null;
        Token otherlv_13=null;
        Token otherlv_15=null;
        Token otherlv_16=null;
        Token otherlv_18=null;
        Token otherlv_20=null;
        Token otherlv_21=null;
        Token otherlv_23=null;
        Token otherlv_25=null;
        AntlrDatatypeRuleToken lv_item_3_0 = null;

        AntlrDatatypeRuleToken lv_icon_7_0 = null;

        EObject lv_LabelColor_12_0 = null;

        EObject lv_LabelColor_14_0 = null;

        EObject lv_ValueColor_17_0 = null;

        EObject lv_ValueColor_19_0 = null;

        EObject lv_Visibility_22_0 = null;

        EObject lv_Visibility_24_0 = null;


         enterRule(); 
            
        try {
            // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3630:28: ( (otherlv_0= 'Slider' ( ( ( ( ({...}? => ( ({...}? => (otherlv_2= 'item=' ( (lv_item_3_0= ruleItemRef ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= 'label=' ( ( (lv_label_5_1= RULE_ID | lv_label_5_2= RULE_STRING ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= 'icon=' ( (lv_icon_7_0= ruleIcon ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_8= 'sendFrequency=' ( (lv_frequency_9_0= RULE_INT ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_switchEnabled_10_0= 'switchSupport' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_11= 'labelcolor=[' ( ( (lv_LabelColor_12_0= ruleColorArray ) ) (otherlv_13= ',' ( (lv_LabelColor_14_0= ruleColorArray ) ) )* otherlv_15= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_16= 'valuecolor=[' ( ( (lv_ValueColor_17_0= ruleColorArray ) ) (otherlv_18= ',' ( (lv_ValueColor_19_0= ruleColorArray ) ) )* otherlv_20= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= 'visibility=[' ( ( (lv_Visibility_22_0= ruleVisibilityRule ) ) (otherlv_23= ',' ( (lv_Visibility_24_0= ruleVisibilityRule ) ) )* otherlv_25= ']' ) ) ) ) ) )+ {...}?) ) ) ) )
            // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3631:1: (otherlv_0= 'Slider' ( ( ( ( ({...}? => ( ({...}? => (otherlv_2= 'item=' ( (lv_item_3_0= ruleItemRef ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= 'label=' ( ( (lv_label_5_1= RULE_ID | lv_label_5_2= RULE_STRING ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= 'icon=' ( (lv_icon_7_0= ruleIcon ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_8= 'sendFrequency=' ( (lv_frequency_9_0= RULE_INT ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_switchEnabled_10_0= 'switchSupport' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_11= 'labelcolor=[' ( ( (lv_LabelColor_12_0= ruleColorArray ) ) (otherlv_13= ',' ( (lv_LabelColor_14_0= ruleColorArray ) ) )* otherlv_15= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_16= 'valuecolor=[' ( ( (lv_ValueColor_17_0= ruleColorArray ) ) (otherlv_18= ',' ( (lv_ValueColor_19_0= ruleColorArray ) ) )* otherlv_20= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= 'visibility=[' ( ( (lv_Visibility_22_0= ruleVisibilityRule ) ) (otherlv_23= ',' ( (lv_Visibility_24_0= ruleVisibilityRule ) ) )* otherlv_25= ']' ) ) ) ) ) )+ {...}?) ) ) )
            {
            // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3631:1: (otherlv_0= 'Slider' ( ( ( ( ({...}? => ( ({...}? => (otherlv_2= 'item=' ( (lv_item_3_0= ruleItemRef ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= 'label=' ( ( (lv_label_5_1= RULE_ID | lv_label_5_2= RULE_STRING ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= 'icon=' ( (lv_icon_7_0= ruleIcon ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_8= 'sendFrequency=' ( (lv_frequency_9_0= RULE_INT ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_switchEnabled_10_0= 'switchSupport' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_11= 'labelcolor=[' ( ( (lv_LabelColor_12_0= ruleColorArray ) ) (otherlv_13= ',' ( (lv_LabelColor_14_0= ruleColorArray ) ) )* otherlv_15= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_16= 'valuecolor=[' ( ( (lv_ValueColor_17_0= ruleColorArray ) ) (otherlv_18= ',' ( (lv_ValueColor_19_0= ruleColorArray ) ) )* otherlv_20= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= 'visibility=[' ( ( (lv_Visibility_22_0= ruleVisibilityRule ) ) (otherlv_23= ',' ( (lv_Visibility_24_0= ruleVisibilityRule ) ) )* otherlv_25= ']' ) ) ) ) ) )+ {...}?) ) ) )
            // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3631:3: otherlv_0= 'Slider' ( ( ( ( ({...}? => ( ({...}? => (otherlv_2= 'item=' ( (lv_item_3_0= ruleItemRef ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= 'label=' ( ( (lv_label_5_1= RULE_ID | lv_label_5_2= RULE_STRING ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= 'icon=' ( (lv_icon_7_0= ruleIcon ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_8= 'sendFrequency=' ( (lv_frequency_9_0= RULE_INT ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_switchEnabled_10_0= 'switchSupport' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_11= 'labelcolor=[' ( ( (lv_LabelColor_12_0= ruleColorArray ) ) (otherlv_13= ',' ( (lv_LabelColor_14_0= ruleColorArray ) ) )* otherlv_15= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_16= 'valuecolor=[' ( ( (lv_ValueColor_17_0= ruleColorArray ) ) (otherlv_18= ',' ( (lv_ValueColor_19_0= ruleColorArray ) ) )* otherlv_20= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= 'visibility=[' ( ( (lv_Visibility_22_0= ruleVisibilityRule ) ) (otherlv_23= ',' ( (lv_Visibility_24_0= ruleVisibilityRule ) ) )* otherlv_25= ']' ) ) ) ) ) )+ {...}?) ) )
            {
            otherlv_0=(Token)match(input,39,FOLLOW_39_in_ruleSlider8822); 

                	newLeafNode(otherlv_0, grammarAccess.getSliderAccess().getSliderKeyword_0());
                
            // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3635:1: ( ( ( ( ({...}? => ( ({...}? => (otherlv_2= 'item=' ( (lv_item_3_0= ruleItemRef ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= 'label=' ( ( (lv_label_5_1= RULE_ID | lv_label_5_2= RULE_STRING ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= 'icon=' ( (lv_icon_7_0= ruleIcon ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_8= 'sendFrequency=' ( (lv_frequency_9_0= RULE_INT ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_switchEnabled_10_0= 'switchSupport' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_11= 'labelcolor=[' ( ( (lv_LabelColor_12_0= ruleColorArray ) ) (otherlv_13= ',' ( (lv_LabelColor_14_0= ruleColorArray ) ) )* otherlv_15= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_16= 'valuecolor=[' ( ( (lv_ValueColor_17_0= ruleColorArray ) ) (otherlv_18= ',' ( (lv_ValueColor_19_0= ruleColorArray ) ) )* otherlv_20= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= 'visibility=[' ( ( (lv_Visibility_22_0= ruleVisibilityRule ) ) (otherlv_23= ',' ( (lv_Visibility_24_0= ruleVisibilityRule ) ) )* otherlv_25= ']' ) ) ) ) ) )+ {...}?) ) )
            // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3637:1: ( ( ( ({...}? => ( ({...}? => (otherlv_2= 'item=' ( (lv_item_3_0= ruleItemRef ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= 'label=' ( ( (lv_label_5_1= RULE_ID | lv_label_5_2= RULE_STRING ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= 'icon=' ( (lv_icon_7_0= ruleIcon ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_8= 'sendFrequency=' ( (lv_frequency_9_0= RULE_INT ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_switchEnabled_10_0= 'switchSupport' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_11= 'labelcolor=[' ( ( (lv_LabelColor_12_0= ruleColorArray ) ) (otherlv_13= ',' ( (lv_LabelColor_14_0= ruleColorArray ) ) )* otherlv_15= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_16= 'valuecolor=[' ( ( (lv_ValueColor_17_0= ruleColorArray ) ) (otherlv_18= ',' ( (lv_ValueColor_19_0= ruleColorArray ) ) )* otherlv_20= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= 'visibility=[' ( ( (lv_Visibility_22_0= ruleVisibilityRule ) ) (otherlv_23= ',' ( (lv_Visibility_24_0= ruleVisibilityRule ) ) )* otherlv_25= ']' ) ) ) ) ) )+ {...}?) )
            {
            // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3637:1: ( ( ( ({...}? => ( ({...}? => (otherlv_2= 'item=' ( (lv_item_3_0= ruleItemRef ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= 'label=' ( ( (lv_label_5_1= RULE_ID | lv_label_5_2= RULE_STRING ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= 'icon=' ( (lv_icon_7_0= ruleIcon ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_8= 'sendFrequency=' ( (lv_frequency_9_0= RULE_INT ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_switchEnabled_10_0= 'switchSupport' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_11= 'labelcolor=[' ( ( (lv_LabelColor_12_0= ruleColorArray ) ) (otherlv_13= ',' ( (lv_LabelColor_14_0= ruleColorArray ) ) )* otherlv_15= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_16= 'valuecolor=[' ( ( (lv_ValueColor_17_0= ruleColorArray ) ) (otherlv_18= ',' ( (lv_ValueColor_19_0= ruleColorArray ) ) )* otherlv_20= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= 'visibility=[' ( ( (lv_Visibility_22_0= ruleVisibilityRule ) ) (otherlv_23= ',' ( (lv_Visibility_24_0= ruleVisibilityRule ) ) )* otherlv_25= ']' ) ) ) ) ) )+ {...}?) )
            // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3638:2: ( ( ({...}? => ( ({...}? => (otherlv_2= 'item=' ( (lv_item_3_0= ruleItemRef ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= 'label=' ( ( (lv_label_5_1= RULE_ID | lv_label_5_2= RULE_STRING ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= 'icon=' ( (lv_icon_7_0= ruleIcon ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_8= 'sendFrequency=' ( (lv_frequency_9_0= RULE_INT ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_switchEnabled_10_0= 'switchSupport' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_11= 'labelcolor=[' ( ( (lv_LabelColor_12_0= ruleColorArray ) ) (otherlv_13= ',' ( (lv_LabelColor_14_0= ruleColorArray ) ) )* otherlv_15= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_16= 'valuecolor=[' ( ( (lv_ValueColor_17_0= ruleColorArray ) ) (otherlv_18= ',' ( (lv_ValueColor_19_0= ruleColorArray ) ) )* otherlv_20= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= 'visibility=[' ( ( (lv_Visibility_22_0= ruleVisibilityRule ) ) (otherlv_23= ',' ( (lv_Visibility_24_0= ruleVisibilityRule ) ) )* otherlv_25= ']' ) ) ) ) ) )+ {...}?)
            {
             
            	  getUnorderedGroupHelper().enter(grammarAccess.getSliderAccess().getUnorderedGroup_1());
            	
            // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3641:2: ( ( ({...}? => ( ({...}? => (otherlv_2= 'item=' ( (lv_item_3_0= ruleItemRef ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= 'label=' ( ( (lv_label_5_1= RULE_ID | lv_label_5_2= RULE_STRING ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= 'icon=' ( (lv_icon_7_0= ruleIcon ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_8= 'sendFrequency=' ( (lv_frequency_9_0= RULE_INT ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_switchEnabled_10_0= 'switchSupport' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_11= 'labelcolor=[' ( ( (lv_LabelColor_12_0= ruleColorArray ) ) (otherlv_13= ',' ( (lv_LabelColor_14_0= ruleColorArray ) ) )* otherlv_15= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_16= 'valuecolor=[' ( ( (lv_ValueColor_17_0= ruleColorArray ) ) (otherlv_18= ',' ( (lv_ValueColor_19_0= ruleColorArray ) ) )* otherlv_20= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= 'visibility=[' ( ( (lv_Visibility_22_0= ruleVisibilityRule ) ) (otherlv_23= ',' ( (lv_Visibility_24_0= ruleVisibilityRule ) ) )* otherlv_25= ']' ) ) ) ) ) )+ {...}?)
            // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3642:3: ( ({...}? => ( ({...}? => (otherlv_2= 'item=' ( (lv_item_3_0= ruleItemRef ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= 'label=' ( ( (lv_label_5_1= RULE_ID | lv_label_5_2= RULE_STRING ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= 'icon=' ( (lv_icon_7_0= ruleIcon ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_8= 'sendFrequency=' ( (lv_frequency_9_0= RULE_INT ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_switchEnabled_10_0= 'switchSupport' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_11= 'labelcolor=[' ( ( (lv_LabelColor_12_0= ruleColorArray ) ) (otherlv_13= ',' ( (lv_LabelColor_14_0= ruleColorArray ) ) )* otherlv_15= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_16= 'valuecolor=[' ( ( (lv_ValueColor_17_0= ruleColorArray ) ) (otherlv_18= ',' ( (lv_ValueColor_19_0= ruleColorArray ) ) )* otherlv_20= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= 'visibility=[' ( ( (lv_Visibility_22_0= ruleVisibilityRule ) ) (otherlv_23= ',' ( (lv_Visibility_24_0= ruleVisibilityRule ) ) )* otherlv_25= ']' ) ) ) ) ) )+ {...}?
            {
            // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3642:3: ( ({...}? => ( ({...}? => (otherlv_2= 'item=' ( (lv_item_3_0= ruleItemRef ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= 'label=' ( ( (lv_label_5_1= RULE_ID | lv_label_5_2= RULE_STRING ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= 'icon=' ( (lv_icon_7_0= ruleIcon ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_8= 'sendFrequency=' ( (lv_frequency_9_0= RULE_INT ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_switchEnabled_10_0= 'switchSupport' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_11= 'labelcolor=[' ( ( (lv_LabelColor_12_0= ruleColorArray ) ) (otherlv_13= ',' ( (lv_LabelColor_14_0= ruleColorArray ) ) )* otherlv_15= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_16= 'valuecolor=[' ( ( (lv_ValueColor_17_0= ruleColorArray ) ) (otherlv_18= ',' ( (lv_ValueColor_19_0= ruleColorArray ) ) )* otherlv_20= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= 'visibility=[' ( ( (lv_Visibility_22_0= ruleVisibilityRule ) ) (otherlv_23= ',' ( (lv_Visibility_24_0= ruleVisibilityRule ) ) )* otherlv_25= ']' ) ) ) ) ) )+
            int cnt55=0;
            loop55:
            do {
                int alt55=9;
                alt55 = dfa55.predict(input);
                switch (alt55) {
            	case 1 :
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3644:4: ({...}? => ( ({...}? => (otherlv_2= 'item=' ( (lv_item_3_0= ruleItemRef ) ) ) ) ) )
            	    {
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3644:4: ({...}? => ( ({...}? => (otherlv_2= 'item=' ( (lv_item_3_0= ruleItemRef ) ) ) ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3645:5: {...}? => ( ({...}? => (otherlv_2= 'item=' ( (lv_item_3_0= ruleItemRef ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getSliderAccess().getUnorderedGroup_1(), 0) ) {
            	        throw new FailedPredicateException(input, "ruleSlider", "getUnorderedGroupHelper().canSelect(grammarAccess.getSliderAccess().getUnorderedGroup_1(), 0)");
            	    }
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3645:103: ( ({...}? => (otherlv_2= 'item=' ( (lv_item_3_0= ruleItemRef ) ) ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3646:6: ({...}? => (otherlv_2= 'item=' ( (lv_item_3_0= ruleItemRef ) ) ) )
            	    {
            	     
            	    	 				  getUnorderedGroupHelper().select(grammarAccess.getSliderAccess().getUnorderedGroup_1(), 0);
            	    	 				
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3649:6: ({...}? => (otherlv_2= 'item=' ( (lv_item_3_0= ruleItemRef ) ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3649:7: {...}? => (otherlv_2= 'item=' ( (lv_item_3_0= ruleItemRef ) ) )
            	    {
            	    if ( !((true)) ) {
            	        throw new FailedPredicateException(input, "ruleSlider", "true");
            	    }
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3649:16: (otherlv_2= 'item=' ( (lv_item_3_0= ruleItemRef ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3649:18: otherlv_2= 'item=' ( (lv_item_3_0= ruleItemRef ) )
            	    {
            	    otherlv_2=(Token)match(input,18,FOLLOW_18_in_ruleSlider8880); 

            	        	newLeafNode(otherlv_2, grammarAccess.getSliderAccess().getItemKeyword_1_0_0());
            	        
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3653:1: ( (lv_item_3_0= ruleItemRef ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3654:1: (lv_item_3_0= ruleItemRef )
            	    {
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3654:1: (lv_item_3_0= ruleItemRef )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3655:3: lv_item_3_0= ruleItemRef
            	    {
            	     
            	    	        newCompositeNode(grammarAccess.getSliderAccess().getItemItemRefParserRuleCall_1_0_1_0()); 
            	    	    
            	    pushFollow(FOLLOW_ruleItemRef_in_ruleSlider8901);
            	    lv_item_3_0=ruleItemRef();

            	    state._fsp--;


            	    	        if (current==null) {
            	    	            current = createModelElementForParent(grammarAccess.getSliderRule());
            	    	        }
            	           		set(
            	           			current, 
            	           			"item",
            	            		lv_item_3_0, 
            	            		"ItemRef");
            	    	        afterParserOrEnumRuleCall();
            	    	    

            	    }


            	    }


            	    }


            	    }

            	     
            	    	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getSliderAccess().getUnorderedGroup_1());
            	    	 				

            	    }


            	    }


            	    }
            	    break;
            	case 2 :
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3678:4: ({...}? => ( ({...}? => (otherlv_4= 'label=' ( ( (lv_label_5_1= RULE_ID | lv_label_5_2= RULE_STRING ) ) ) ) ) ) )
            	    {
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3678:4: ({...}? => ( ({...}? => (otherlv_4= 'label=' ( ( (lv_label_5_1= RULE_ID | lv_label_5_2= RULE_STRING ) ) ) ) ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3679:5: {...}? => ( ({...}? => (otherlv_4= 'label=' ( ( (lv_label_5_1= RULE_ID | lv_label_5_2= RULE_STRING ) ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getSliderAccess().getUnorderedGroup_1(), 1) ) {
            	        throw new FailedPredicateException(input, "ruleSlider", "getUnorderedGroupHelper().canSelect(grammarAccess.getSliderAccess().getUnorderedGroup_1(), 1)");
            	    }
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3679:103: ( ({...}? => (otherlv_4= 'label=' ( ( (lv_label_5_1= RULE_ID | lv_label_5_2= RULE_STRING ) ) ) ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3680:6: ({...}? => (otherlv_4= 'label=' ( ( (lv_label_5_1= RULE_ID | lv_label_5_2= RULE_STRING ) ) ) ) )
            	    {
            	     
            	    	 				  getUnorderedGroupHelper().select(grammarAccess.getSliderAccess().getUnorderedGroup_1(), 1);
            	    	 				
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3683:6: ({...}? => (otherlv_4= 'label=' ( ( (lv_label_5_1= RULE_ID | lv_label_5_2= RULE_STRING ) ) ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3683:7: {...}? => (otherlv_4= 'label=' ( ( (lv_label_5_1= RULE_ID | lv_label_5_2= RULE_STRING ) ) ) )
            	    {
            	    if ( !((true)) ) {
            	        throw new FailedPredicateException(input, "ruleSlider", "true");
            	    }
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3683:16: (otherlv_4= 'label=' ( ( (lv_label_5_1= RULE_ID | lv_label_5_2= RULE_STRING ) ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3683:18: otherlv_4= 'label=' ( ( (lv_label_5_1= RULE_ID | lv_label_5_2= RULE_STRING ) ) )
            	    {
            	    otherlv_4=(Token)match(input,13,FOLLOW_13_in_ruleSlider8969); 

            	        	newLeafNode(otherlv_4, grammarAccess.getSliderAccess().getLabelKeyword_1_1_0());
            	        
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3687:1: ( ( (lv_label_5_1= RULE_ID | lv_label_5_2= RULE_STRING ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3688:1: ( (lv_label_5_1= RULE_ID | lv_label_5_2= RULE_STRING ) )
            	    {
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3688:1: ( (lv_label_5_1= RULE_ID | lv_label_5_2= RULE_STRING ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3689:1: (lv_label_5_1= RULE_ID | lv_label_5_2= RULE_STRING )
            	    {
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3689:1: (lv_label_5_1= RULE_ID | lv_label_5_2= RULE_STRING )
            	    int alt51=2;
            	    int LA51_0 = input.LA(1);

            	    if ( (LA51_0==RULE_ID) ) {
            	        alt51=1;
            	    }
            	    else if ( (LA51_0==RULE_STRING) ) {
            	        alt51=2;
            	    }
            	    else {
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 51, 0, input);

            	        throw nvae;
            	    }
            	    switch (alt51) {
            	        case 1 :
            	            // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3690:3: lv_label_5_1= RULE_ID
            	            {
            	            lv_label_5_1=(Token)match(input,RULE_ID,FOLLOW_RULE_ID_in_ruleSlider8988); 

            	            			newLeafNode(lv_label_5_1, grammarAccess.getSliderAccess().getLabelIDTerminalRuleCall_1_1_1_0_0()); 
            	            		

            	            	        if (current==null) {
            	            	            current = createModelElement(grammarAccess.getSliderRule());
            	            	        }
            	                   		setWithLastConsumed(
            	                   			current, 
            	                   			"label",
            	                    		lv_label_5_1, 
            	                    		"ID");
            	            	    

            	            }
            	            break;
            	        case 2 :
            	            // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3705:8: lv_label_5_2= RULE_STRING
            	            {
            	            lv_label_5_2=(Token)match(input,RULE_STRING,FOLLOW_RULE_STRING_in_ruleSlider9008); 

            	            			newLeafNode(lv_label_5_2, grammarAccess.getSliderAccess().getLabelSTRINGTerminalRuleCall_1_1_1_0_1()); 
            	            		

            	            	        if (current==null) {
            	            	            current = createModelElement(grammarAccess.getSliderRule());
            	            	        }
            	                   		setWithLastConsumed(
            	                   			current, 
            	                   			"label",
            	                    		lv_label_5_2, 
            	                    		"STRING");
            	            	    

            	            }
            	            break;

            	    }


            	    }


            	    }


            	    }


            	    }

            	     
            	    	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getSliderAccess().getUnorderedGroup_1());
            	    	 				

            	    }


            	    }


            	    }
            	    break;
            	case 3 :
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3730:4: ({...}? => ( ({...}? => (otherlv_6= 'icon=' ( (lv_icon_7_0= ruleIcon ) ) ) ) ) )
            	    {
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3730:4: ({...}? => ( ({...}? => (otherlv_6= 'icon=' ( (lv_icon_7_0= ruleIcon ) ) ) ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3731:5: {...}? => ( ({...}? => (otherlv_6= 'icon=' ( (lv_icon_7_0= ruleIcon ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getSliderAccess().getUnorderedGroup_1(), 2) ) {
            	        throw new FailedPredicateException(input, "ruleSlider", "getUnorderedGroupHelper().canSelect(grammarAccess.getSliderAccess().getUnorderedGroup_1(), 2)");
            	    }
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3731:103: ( ({...}? => (otherlv_6= 'icon=' ( (lv_icon_7_0= ruleIcon ) ) ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3732:6: ({...}? => (otherlv_6= 'icon=' ( (lv_icon_7_0= ruleIcon ) ) ) )
            	    {
            	     
            	    	 				  getUnorderedGroupHelper().select(grammarAccess.getSliderAccess().getUnorderedGroup_1(), 2);
            	    	 				
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3735:6: ({...}? => (otherlv_6= 'icon=' ( (lv_icon_7_0= ruleIcon ) ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3735:7: {...}? => (otherlv_6= 'icon=' ( (lv_icon_7_0= ruleIcon ) ) )
            	    {
            	    if ( !((true)) ) {
            	        throw new FailedPredicateException(input, "ruleSlider", "true");
            	    }
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3735:16: (otherlv_6= 'icon=' ( (lv_icon_7_0= ruleIcon ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3735:18: otherlv_6= 'icon=' ( (lv_icon_7_0= ruleIcon ) )
            	    {
            	    otherlv_6=(Token)match(input,14,FOLLOW_14_in_ruleSlider9084); 

            	        	newLeafNode(otherlv_6, grammarAccess.getSliderAccess().getIconKeyword_1_2_0());
            	        
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3739:1: ( (lv_icon_7_0= ruleIcon ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3740:1: (lv_icon_7_0= ruleIcon )
            	    {
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3740:1: (lv_icon_7_0= ruleIcon )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3741:3: lv_icon_7_0= ruleIcon
            	    {
            	     
            	    	        newCompositeNode(grammarAccess.getSliderAccess().getIconIconParserRuleCall_1_2_1_0()); 
            	    	    
            	    pushFollow(FOLLOW_ruleIcon_in_ruleSlider9105);
            	    lv_icon_7_0=ruleIcon();

            	    state._fsp--;


            	    	        if (current==null) {
            	    	            current = createModelElementForParent(grammarAccess.getSliderRule());
            	    	        }
            	           		set(
            	           			current, 
            	           			"icon",
            	            		lv_icon_7_0, 
            	            		"Icon");
            	    	        afterParserOrEnumRuleCall();
            	    	    

            	    }


            	    }


            	    }


            	    }

            	     
            	    	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getSliderAccess().getUnorderedGroup_1());
            	    	 				

            	    }


            	    }


            	    }
            	    break;
            	case 4 :
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3764:4: ({...}? => ( ({...}? => (otherlv_8= 'sendFrequency=' ( (lv_frequency_9_0= RULE_INT ) ) ) ) ) )
            	    {
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3764:4: ({...}? => ( ({...}? => (otherlv_8= 'sendFrequency=' ( (lv_frequency_9_0= RULE_INT ) ) ) ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3765:5: {...}? => ( ({...}? => (otherlv_8= 'sendFrequency=' ( (lv_frequency_9_0= RULE_INT ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getSliderAccess().getUnorderedGroup_1(), 3) ) {
            	        throw new FailedPredicateException(input, "ruleSlider", "getUnorderedGroupHelper().canSelect(grammarAccess.getSliderAccess().getUnorderedGroup_1(), 3)");
            	    }
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3765:103: ( ({...}? => (otherlv_8= 'sendFrequency=' ( (lv_frequency_9_0= RULE_INT ) ) ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3766:6: ({...}? => (otherlv_8= 'sendFrequency=' ( (lv_frequency_9_0= RULE_INT ) ) ) )
            	    {
            	     
            	    	 				  getUnorderedGroupHelper().select(grammarAccess.getSliderAccess().getUnorderedGroup_1(), 3);
            	    	 				
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3769:6: ({...}? => (otherlv_8= 'sendFrequency=' ( (lv_frequency_9_0= RULE_INT ) ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3769:7: {...}? => (otherlv_8= 'sendFrequency=' ( (lv_frequency_9_0= RULE_INT ) ) )
            	    {
            	    if ( !((true)) ) {
            	        throw new FailedPredicateException(input, "ruleSlider", "true");
            	    }
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3769:16: (otherlv_8= 'sendFrequency=' ( (lv_frequency_9_0= RULE_INT ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3769:18: otherlv_8= 'sendFrequency=' ( (lv_frequency_9_0= RULE_INT ) )
            	    {
            	    otherlv_8=(Token)match(input,40,FOLLOW_40_in_ruleSlider9173); 

            	        	newLeafNode(otherlv_8, grammarAccess.getSliderAccess().getSendFrequencyKeyword_1_3_0());
            	        
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3773:1: ( (lv_frequency_9_0= RULE_INT ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3774:1: (lv_frequency_9_0= RULE_INT )
            	    {
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3774:1: (lv_frequency_9_0= RULE_INT )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3775:3: lv_frequency_9_0= RULE_INT
            	    {
            	    lv_frequency_9_0=(Token)match(input,RULE_INT,FOLLOW_RULE_INT_in_ruleSlider9190); 

            	    			newLeafNode(lv_frequency_9_0, grammarAccess.getSliderAccess().getFrequencyINTTerminalRuleCall_1_3_1_0()); 
            	    		

            	    	        if (current==null) {
            	    	            current = createModelElement(grammarAccess.getSliderRule());
            	    	        }
            	           		setWithLastConsumed(
            	           			current, 
            	           			"frequency",
            	            		lv_frequency_9_0, 
            	            		"INT");
            	    	    

            	    }


            	    }


            	    }


            	    }

            	     
            	    	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getSliderAccess().getUnorderedGroup_1());
            	    	 				

            	    }


            	    }


            	    }
            	    break;
            	case 5 :
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3798:4: ({...}? => ( ({...}? => ( (lv_switchEnabled_10_0= 'switchSupport' ) ) ) ) )
            	    {
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3798:4: ({...}? => ( ({...}? => ( (lv_switchEnabled_10_0= 'switchSupport' ) ) ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3799:5: {...}? => ( ({...}? => ( (lv_switchEnabled_10_0= 'switchSupport' ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getSliderAccess().getUnorderedGroup_1(), 4) ) {
            	        throw new FailedPredicateException(input, "ruleSlider", "getUnorderedGroupHelper().canSelect(grammarAccess.getSliderAccess().getUnorderedGroup_1(), 4)");
            	    }
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3799:103: ( ({...}? => ( (lv_switchEnabled_10_0= 'switchSupport' ) ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3800:6: ({...}? => ( (lv_switchEnabled_10_0= 'switchSupport' ) ) )
            	    {
            	     
            	    	 				  getUnorderedGroupHelper().select(grammarAccess.getSliderAccess().getUnorderedGroup_1(), 4);
            	    	 				
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3803:6: ({...}? => ( (lv_switchEnabled_10_0= 'switchSupport' ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3803:7: {...}? => ( (lv_switchEnabled_10_0= 'switchSupport' ) )
            	    {
            	    if ( !((true)) ) {
            	        throw new FailedPredicateException(input, "ruleSlider", "true");
            	    }
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3803:16: ( (lv_switchEnabled_10_0= 'switchSupport' ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3804:1: (lv_switchEnabled_10_0= 'switchSupport' )
            	    {
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3804:1: (lv_switchEnabled_10_0= 'switchSupport' )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3805:3: lv_switchEnabled_10_0= 'switchSupport'
            	    {
            	    lv_switchEnabled_10_0=(Token)match(input,41,FOLLOW_41_in_ruleSlider9268); 

            	            newLeafNode(lv_switchEnabled_10_0, grammarAccess.getSliderAccess().getSwitchEnabledSwitchSupportKeyword_1_4_0());
            	        

            	    	        if (current==null) {
            	    	            current = createModelElement(grammarAccess.getSliderRule());
            	    	        }
            	           		setWithLastConsumed(current, "switchEnabled", true, "switchSupport");
            	    	    

            	    }


            	    }


            	    }

            	     
            	    	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getSliderAccess().getUnorderedGroup_1());
            	    	 				

            	    }


            	    }


            	    }
            	    break;
            	case 6 :
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3825:4: ({...}? => ( ({...}? => (otherlv_11= 'labelcolor=[' ( ( (lv_LabelColor_12_0= ruleColorArray ) ) (otherlv_13= ',' ( (lv_LabelColor_14_0= ruleColorArray ) ) )* otherlv_15= ']' ) ) ) ) )
            	    {
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3825:4: ({...}? => ( ({...}? => (otherlv_11= 'labelcolor=[' ( ( (lv_LabelColor_12_0= ruleColorArray ) ) (otherlv_13= ',' ( (lv_LabelColor_14_0= ruleColorArray ) ) )* otherlv_15= ']' ) ) ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3826:5: {...}? => ( ({...}? => (otherlv_11= 'labelcolor=[' ( ( (lv_LabelColor_12_0= ruleColorArray ) ) (otherlv_13= ',' ( (lv_LabelColor_14_0= ruleColorArray ) ) )* otherlv_15= ']' ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getSliderAccess().getUnorderedGroup_1(), 5) ) {
            	        throw new FailedPredicateException(input, "ruleSlider", "getUnorderedGroupHelper().canSelect(grammarAccess.getSliderAccess().getUnorderedGroup_1(), 5)");
            	    }
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3826:103: ( ({...}? => (otherlv_11= 'labelcolor=[' ( ( (lv_LabelColor_12_0= ruleColorArray ) ) (otherlv_13= ',' ( (lv_LabelColor_14_0= ruleColorArray ) ) )* otherlv_15= ']' ) ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3827:6: ({...}? => (otherlv_11= 'labelcolor=[' ( ( (lv_LabelColor_12_0= ruleColorArray ) ) (otherlv_13= ',' ( (lv_LabelColor_14_0= ruleColorArray ) ) )* otherlv_15= ']' ) ) )
            	    {
            	     
            	    	 				  getUnorderedGroupHelper().select(grammarAccess.getSliderAccess().getUnorderedGroup_1(), 5);
            	    	 				
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3830:6: ({...}? => (otherlv_11= 'labelcolor=[' ( ( (lv_LabelColor_12_0= ruleColorArray ) ) (otherlv_13= ',' ( (lv_LabelColor_14_0= ruleColorArray ) ) )* otherlv_15= ']' ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3830:7: {...}? => (otherlv_11= 'labelcolor=[' ( ( (lv_LabelColor_12_0= ruleColorArray ) ) (otherlv_13= ',' ( (lv_LabelColor_14_0= ruleColorArray ) ) )* otherlv_15= ']' ) )
            	    {
            	    if ( !((true)) ) {
            	        throw new FailedPredicateException(input, "ruleSlider", "true");
            	    }
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3830:16: (otherlv_11= 'labelcolor=[' ( ( (lv_LabelColor_12_0= ruleColorArray ) ) (otherlv_13= ',' ( (lv_LabelColor_14_0= ruleColorArray ) ) )* otherlv_15= ']' ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3830:18: otherlv_11= 'labelcolor=[' ( ( (lv_LabelColor_12_0= ruleColorArray ) ) (otherlv_13= ',' ( (lv_LabelColor_14_0= ruleColorArray ) ) )* otherlv_15= ']' )
            	    {
            	    otherlv_11=(Token)match(input,19,FOLLOW_19_in_ruleSlider9348); 

            	        	newLeafNode(otherlv_11, grammarAccess.getSliderAccess().getLabelcolorKeyword_1_5_0());
            	        
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3834:1: ( ( (lv_LabelColor_12_0= ruleColorArray ) ) (otherlv_13= ',' ( (lv_LabelColor_14_0= ruleColorArray ) ) )* otherlv_15= ']' )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3834:2: ( (lv_LabelColor_12_0= ruleColorArray ) ) (otherlv_13= ',' ( (lv_LabelColor_14_0= ruleColorArray ) ) )* otherlv_15= ']'
            	    {
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3834:2: ( (lv_LabelColor_12_0= ruleColorArray ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3835:1: (lv_LabelColor_12_0= ruleColorArray )
            	    {
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3835:1: (lv_LabelColor_12_0= ruleColorArray )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3836:3: lv_LabelColor_12_0= ruleColorArray
            	    {
            	     
            	    	        newCompositeNode(grammarAccess.getSliderAccess().getLabelColorColorArrayParserRuleCall_1_5_1_0_0()); 
            	    	    
            	    pushFollow(FOLLOW_ruleColorArray_in_ruleSlider9370);
            	    lv_LabelColor_12_0=ruleColorArray();

            	    state._fsp--;


            	    	        if (current==null) {
            	    	            current = createModelElementForParent(grammarAccess.getSliderRule());
            	    	        }
            	           		add(
            	           			current, 
            	           			"LabelColor",
            	            		lv_LabelColor_12_0, 
            	            		"ColorArray");
            	    	        afterParserOrEnumRuleCall();
            	    	    

            	    }


            	    }

            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3852:2: (otherlv_13= ',' ( (lv_LabelColor_14_0= ruleColorArray ) ) )*
            	    loop52:
            	    do {
            	        int alt52=2;
            	        int LA52_0 = input.LA(1);

            	        if ( (LA52_0==20) ) {
            	            alt52=1;
            	        }


            	        switch (alt52) {
            	    	case 1 :
            	    	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3852:4: otherlv_13= ',' ( (lv_LabelColor_14_0= ruleColorArray ) )
            	    	    {
            	    	    otherlv_13=(Token)match(input,20,FOLLOW_20_in_ruleSlider9383); 

            	    	        	newLeafNode(otherlv_13, grammarAccess.getSliderAccess().getCommaKeyword_1_5_1_1_0());
            	    	        
            	    	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3856:1: ( (lv_LabelColor_14_0= ruleColorArray ) )
            	    	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3857:1: (lv_LabelColor_14_0= ruleColorArray )
            	    	    {
            	    	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3857:1: (lv_LabelColor_14_0= ruleColorArray )
            	    	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3858:3: lv_LabelColor_14_0= ruleColorArray
            	    	    {
            	    	     
            	    	    	        newCompositeNode(grammarAccess.getSliderAccess().getLabelColorColorArrayParserRuleCall_1_5_1_1_1_0()); 
            	    	    	    
            	    	    pushFollow(FOLLOW_ruleColorArray_in_ruleSlider9404);
            	    	    lv_LabelColor_14_0=ruleColorArray();

            	    	    state._fsp--;


            	    	    	        if (current==null) {
            	    	    	            current = createModelElementForParent(grammarAccess.getSliderRule());
            	    	    	        }
            	    	           		add(
            	    	           			current, 
            	    	           			"LabelColor",
            	    	            		lv_LabelColor_14_0, 
            	    	            		"ColorArray");
            	    	    	        afterParserOrEnumRuleCall();
            	    	    	    

            	    	    }


            	    	    }


            	    	    }
            	    	    break;

            	    	default :
            	    	    break loop52;
            	        }
            	    } while (true);

            	    otherlv_15=(Token)match(input,21,FOLLOW_21_in_ruleSlider9418); 

            	        	newLeafNode(otherlv_15, grammarAccess.getSliderAccess().getRightSquareBracketKeyword_1_5_1_2());
            	        

            	    }


            	    }


            	    }

            	     
            	    	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getSliderAccess().getUnorderedGroup_1());
            	    	 				

            	    }


            	    }


            	    }
            	    break;
            	case 7 :
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3885:4: ({...}? => ( ({...}? => (otherlv_16= 'valuecolor=[' ( ( (lv_ValueColor_17_0= ruleColorArray ) ) (otherlv_18= ',' ( (lv_ValueColor_19_0= ruleColorArray ) ) )* otherlv_20= ']' ) ) ) ) )
            	    {
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3885:4: ({...}? => ( ({...}? => (otherlv_16= 'valuecolor=[' ( ( (lv_ValueColor_17_0= ruleColorArray ) ) (otherlv_18= ',' ( (lv_ValueColor_19_0= ruleColorArray ) ) )* otherlv_20= ']' ) ) ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3886:5: {...}? => ( ({...}? => (otherlv_16= 'valuecolor=[' ( ( (lv_ValueColor_17_0= ruleColorArray ) ) (otherlv_18= ',' ( (lv_ValueColor_19_0= ruleColorArray ) ) )* otherlv_20= ']' ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getSliderAccess().getUnorderedGroup_1(), 6) ) {
            	        throw new FailedPredicateException(input, "ruleSlider", "getUnorderedGroupHelper().canSelect(grammarAccess.getSliderAccess().getUnorderedGroup_1(), 6)");
            	    }
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3886:103: ( ({...}? => (otherlv_16= 'valuecolor=[' ( ( (lv_ValueColor_17_0= ruleColorArray ) ) (otherlv_18= ',' ( (lv_ValueColor_19_0= ruleColorArray ) ) )* otherlv_20= ']' ) ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3887:6: ({...}? => (otherlv_16= 'valuecolor=[' ( ( (lv_ValueColor_17_0= ruleColorArray ) ) (otherlv_18= ',' ( (lv_ValueColor_19_0= ruleColorArray ) ) )* otherlv_20= ']' ) ) )
            	    {
            	     
            	    	 				  getUnorderedGroupHelper().select(grammarAccess.getSliderAccess().getUnorderedGroup_1(), 6);
            	    	 				
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3890:6: ({...}? => (otherlv_16= 'valuecolor=[' ( ( (lv_ValueColor_17_0= ruleColorArray ) ) (otherlv_18= ',' ( (lv_ValueColor_19_0= ruleColorArray ) ) )* otherlv_20= ']' ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3890:7: {...}? => (otherlv_16= 'valuecolor=[' ( ( (lv_ValueColor_17_0= ruleColorArray ) ) (otherlv_18= ',' ( (lv_ValueColor_19_0= ruleColorArray ) ) )* otherlv_20= ']' ) )
            	    {
            	    if ( !((true)) ) {
            	        throw new FailedPredicateException(input, "ruleSlider", "true");
            	    }
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3890:16: (otherlv_16= 'valuecolor=[' ( ( (lv_ValueColor_17_0= ruleColorArray ) ) (otherlv_18= ',' ( (lv_ValueColor_19_0= ruleColorArray ) ) )* otherlv_20= ']' ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3890:18: otherlv_16= 'valuecolor=[' ( ( (lv_ValueColor_17_0= ruleColorArray ) ) (otherlv_18= ',' ( (lv_ValueColor_19_0= ruleColorArray ) ) )* otherlv_20= ']' )
            	    {
            	    otherlv_16=(Token)match(input,22,FOLLOW_22_in_ruleSlider9487); 

            	        	newLeafNode(otherlv_16, grammarAccess.getSliderAccess().getValuecolorKeyword_1_6_0());
            	        
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3894:1: ( ( (lv_ValueColor_17_0= ruleColorArray ) ) (otherlv_18= ',' ( (lv_ValueColor_19_0= ruleColorArray ) ) )* otherlv_20= ']' )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3894:2: ( (lv_ValueColor_17_0= ruleColorArray ) ) (otherlv_18= ',' ( (lv_ValueColor_19_0= ruleColorArray ) ) )* otherlv_20= ']'
            	    {
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3894:2: ( (lv_ValueColor_17_0= ruleColorArray ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3895:1: (lv_ValueColor_17_0= ruleColorArray )
            	    {
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3895:1: (lv_ValueColor_17_0= ruleColorArray )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3896:3: lv_ValueColor_17_0= ruleColorArray
            	    {
            	     
            	    	        newCompositeNode(grammarAccess.getSliderAccess().getValueColorColorArrayParserRuleCall_1_6_1_0_0()); 
            	    	    
            	    pushFollow(FOLLOW_ruleColorArray_in_ruleSlider9509);
            	    lv_ValueColor_17_0=ruleColorArray();

            	    state._fsp--;


            	    	        if (current==null) {
            	    	            current = createModelElementForParent(grammarAccess.getSliderRule());
            	    	        }
            	           		add(
            	           			current, 
            	           			"ValueColor",
            	            		lv_ValueColor_17_0, 
            	            		"ColorArray");
            	    	        afterParserOrEnumRuleCall();
            	    	    

            	    }


            	    }

            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3912:2: (otherlv_18= ',' ( (lv_ValueColor_19_0= ruleColorArray ) ) )*
            	    loop53:
            	    do {
            	        int alt53=2;
            	        int LA53_0 = input.LA(1);

            	        if ( (LA53_0==20) ) {
            	            alt53=1;
            	        }


            	        switch (alt53) {
            	    	case 1 :
            	    	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3912:4: otherlv_18= ',' ( (lv_ValueColor_19_0= ruleColorArray ) )
            	    	    {
            	    	    otherlv_18=(Token)match(input,20,FOLLOW_20_in_ruleSlider9522); 

            	    	        	newLeafNode(otherlv_18, grammarAccess.getSliderAccess().getCommaKeyword_1_6_1_1_0());
            	    	        
            	    	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3916:1: ( (lv_ValueColor_19_0= ruleColorArray ) )
            	    	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3917:1: (lv_ValueColor_19_0= ruleColorArray )
            	    	    {
            	    	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3917:1: (lv_ValueColor_19_0= ruleColorArray )
            	    	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3918:3: lv_ValueColor_19_0= ruleColorArray
            	    	    {
            	    	     
            	    	    	        newCompositeNode(grammarAccess.getSliderAccess().getValueColorColorArrayParserRuleCall_1_6_1_1_1_0()); 
            	    	    	    
            	    	    pushFollow(FOLLOW_ruleColorArray_in_ruleSlider9543);
            	    	    lv_ValueColor_19_0=ruleColorArray();

            	    	    state._fsp--;


            	    	    	        if (current==null) {
            	    	    	            current = createModelElementForParent(grammarAccess.getSliderRule());
            	    	    	        }
            	    	           		add(
            	    	           			current, 
            	    	           			"ValueColor",
            	    	            		lv_ValueColor_19_0, 
            	    	            		"ColorArray");
            	    	    	        afterParserOrEnumRuleCall();
            	    	    	    

            	    	    }


            	    	    }


            	    	    }
            	    	    break;

            	    	default :
            	    	    break loop53;
            	        }
            	    } while (true);

            	    otherlv_20=(Token)match(input,21,FOLLOW_21_in_ruleSlider9557); 

            	        	newLeafNode(otherlv_20, grammarAccess.getSliderAccess().getRightSquareBracketKeyword_1_6_1_2());
            	        

            	    }


            	    }


            	    }

            	     
            	    	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getSliderAccess().getUnorderedGroup_1());
            	    	 				

            	    }


            	    }


            	    }
            	    break;
            	case 8 :
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3945:4: ({...}? => ( ({...}? => (otherlv_21= 'visibility=[' ( ( (lv_Visibility_22_0= ruleVisibilityRule ) ) (otherlv_23= ',' ( (lv_Visibility_24_0= ruleVisibilityRule ) ) )* otherlv_25= ']' ) ) ) ) )
            	    {
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3945:4: ({...}? => ( ({...}? => (otherlv_21= 'visibility=[' ( ( (lv_Visibility_22_0= ruleVisibilityRule ) ) (otherlv_23= ',' ( (lv_Visibility_24_0= ruleVisibilityRule ) ) )* otherlv_25= ']' ) ) ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3946:5: {...}? => ( ({...}? => (otherlv_21= 'visibility=[' ( ( (lv_Visibility_22_0= ruleVisibilityRule ) ) (otherlv_23= ',' ( (lv_Visibility_24_0= ruleVisibilityRule ) ) )* otherlv_25= ']' ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getSliderAccess().getUnorderedGroup_1(), 7) ) {
            	        throw new FailedPredicateException(input, "ruleSlider", "getUnorderedGroupHelper().canSelect(grammarAccess.getSliderAccess().getUnorderedGroup_1(), 7)");
            	    }
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3946:103: ( ({...}? => (otherlv_21= 'visibility=[' ( ( (lv_Visibility_22_0= ruleVisibilityRule ) ) (otherlv_23= ',' ( (lv_Visibility_24_0= ruleVisibilityRule ) ) )* otherlv_25= ']' ) ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3947:6: ({...}? => (otherlv_21= 'visibility=[' ( ( (lv_Visibility_22_0= ruleVisibilityRule ) ) (otherlv_23= ',' ( (lv_Visibility_24_0= ruleVisibilityRule ) ) )* otherlv_25= ']' ) ) )
            	    {
            	     
            	    	 				  getUnorderedGroupHelper().select(grammarAccess.getSliderAccess().getUnorderedGroup_1(), 7);
            	    	 				
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3950:6: ({...}? => (otherlv_21= 'visibility=[' ( ( (lv_Visibility_22_0= ruleVisibilityRule ) ) (otherlv_23= ',' ( (lv_Visibility_24_0= ruleVisibilityRule ) ) )* otherlv_25= ']' ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3950:7: {...}? => (otherlv_21= 'visibility=[' ( ( (lv_Visibility_22_0= ruleVisibilityRule ) ) (otherlv_23= ',' ( (lv_Visibility_24_0= ruleVisibilityRule ) ) )* otherlv_25= ']' ) )
            	    {
            	    if ( !((true)) ) {
            	        throw new FailedPredicateException(input, "ruleSlider", "true");
            	    }
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3950:16: (otherlv_21= 'visibility=[' ( ( (lv_Visibility_22_0= ruleVisibilityRule ) ) (otherlv_23= ',' ( (lv_Visibility_24_0= ruleVisibilityRule ) ) )* otherlv_25= ']' ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3950:18: otherlv_21= 'visibility=[' ( ( (lv_Visibility_22_0= ruleVisibilityRule ) ) (otherlv_23= ',' ( (lv_Visibility_24_0= ruleVisibilityRule ) ) )* otherlv_25= ']' )
            	    {
            	    otherlv_21=(Token)match(input,23,FOLLOW_23_in_ruleSlider9626); 

            	        	newLeafNode(otherlv_21, grammarAccess.getSliderAccess().getVisibilityKeyword_1_7_0());
            	        
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3954:1: ( ( (lv_Visibility_22_0= ruleVisibilityRule ) ) (otherlv_23= ',' ( (lv_Visibility_24_0= ruleVisibilityRule ) ) )* otherlv_25= ']' )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3954:2: ( (lv_Visibility_22_0= ruleVisibilityRule ) ) (otherlv_23= ',' ( (lv_Visibility_24_0= ruleVisibilityRule ) ) )* otherlv_25= ']'
            	    {
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3954:2: ( (lv_Visibility_22_0= ruleVisibilityRule ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3955:1: (lv_Visibility_22_0= ruleVisibilityRule )
            	    {
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3955:1: (lv_Visibility_22_0= ruleVisibilityRule )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3956:3: lv_Visibility_22_0= ruleVisibilityRule
            	    {
            	     
            	    	        newCompositeNode(grammarAccess.getSliderAccess().getVisibilityVisibilityRuleParserRuleCall_1_7_1_0_0()); 
            	    	    
            	    pushFollow(FOLLOW_ruleVisibilityRule_in_ruleSlider9648);
            	    lv_Visibility_22_0=ruleVisibilityRule();

            	    state._fsp--;


            	    	        if (current==null) {
            	    	            current = createModelElementForParent(grammarAccess.getSliderRule());
            	    	        }
            	           		add(
            	           			current, 
            	           			"Visibility",
            	            		lv_Visibility_22_0, 
            	            		"VisibilityRule");
            	    	        afterParserOrEnumRuleCall();
            	    	    

            	    }


            	    }

            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3972:2: (otherlv_23= ',' ( (lv_Visibility_24_0= ruleVisibilityRule ) ) )*
            	    loop54:
            	    do {
            	        int alt54=2;
            	        int LA54_0 = input.LA(1);

            	        if ( (LA54_0==20) ) {
            	            alt54=1;
            	        }


            	        switch (alt54) {
            	    	case 1 :
            	    	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3972:4: otherlv_23= ',' ( (lv_Visibility_24_0= ruleVisibilityRule ) )
            	    	    {
            	    	    otherlv_23=(Token)match(input,20,FOLLOW_20_in_ruleSlider9661); 

            	    	        	newLeafNode(otherlv_23, grammarAccess.getSliderAccess().getCommaKeyword_1_7_1_1_0());
            	    	        
            	    	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3976:1: ( (lv_Visibility_24_0= ruleVisibilityRule ) )
            	    	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3977:1: (lv_Visibility_24_0= ruleVisibilityRule )
            	    	    {
            	    	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3977:1: (lv_Visibility_24_0= ruleVisibilityRule )
            	    	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:3978:3: lv_Visibility_24_0= ruleVisibilityRule
            	    	    {
            	    	     
            	    	    	        newCompositeNode(grammarAccess.getSliderAccess().getVisibilityVisibilityRuleParserRuleCall_1_7_1_1_1_0()); 
            	    	    	    
            	    	    pushFollow(FOLLOW_ruleVisibilityRule_in_ruleSlider9682);
            	    	    lv_Visibility_24_0=ruleVisibilityRule();

            	    	    state._fsp--;


            	    	    	        if (current==null) {
            	    	    	            current = createModelElementForParent(grammarAccess.getSliderRule());
            	    	    	        }
            	    	           		add(
            	    	           			current, 
            	    	           			"Visibility",
            	    	            		lv_Visibility_24_0, 
            	    	            		"VisibilityRule");
            	    	    	        afterParserOrEnumRuleCall();
            	    	    	    

            	    	    }


            	    	    }


            	    	    }
            	    	    break;

            	    	default :
            	    	    break loop54;
            	        }
            	    } while (true);

            	    otherlv_25=(Token)match(input,21,FOLLOW_21_in_ruleSlider9696); 

            	        	newLeafNode(otherlv_25, grammarAccess.getSliderAccess().getRightSquareBracketKeyword_1_7_1_2());
            	        

            	    }


            	    }


            	    }

            	     
            	    	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getSliderAccess().getUnorderedGroup_1());
            	    	 				

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    if ( cnt55 >= 1 ) break loop55;
                        EarlyExitException eee =
                            new EarlyExitException(55, input);
                        throw eee;
                }
                cnt55++;
            } while (true);

            if ( ! getUnorderedGroupHelper().canLeave(grammarAccess.getSliderAccess().getUnorderedGroup_1()) ) {
                throw new FailedPredicateException(input, "ruleSlider", "getUnorderedGroupHelper().canLeave(grammarAccess.getSliderAccess().getUnorderedGroup_1())");
            }

            }


            }

             
            	  getUnorderedGroupHelper().leave(grammarAccess.getSliderAccess().getUnorderedGroup_1());
            	

            }


            }


            }

             leaveRule(); 
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleSlider"


    // $ANTLR start "entryRuleSelection"
    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4021:1: entryRuleSelection returns [EObject current=null] : iv_ruleSelection= ruleSelection EOF ;
    public final EObject entryRuleSelection() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleSelection = null;


        try {
            // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4022:2: (iv_ruleSelection= ruleSelection EOF )
            // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4023:2: iv_ruleSelection= ruleSelection EOF
            {
             newCompositeNode(grammarAccess.getSelectionRule()); 
            pushFollow(FOLLOW_ruleSelection_in_entryRuleSelection9780);
            iv_ruleSelection=ruleSelection();

            state._fsp--;

             current =iv_ruleSelection; 
            match(input,EOF,FOLLOW_EOF_in_entryRuleSelection9790); 

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleSelection"


    // $ANTLR start "ruleSelection"
    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4030:1: ruleSelection returns [EObject current=null] : (otherlv_0= 'Selection' ( ( ( ( ({...}? => ( ({...}? => (otherlv_2= 'item=' ( (lv_item_3_0= ruleItemRef ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= 'label=' ( ( (lv_label_5_1= RULE_ID | lv_label_5_2= RULE_STRING ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= 'icon=' ( (lv_icon_7_0= ruleIcon ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_8= 'mappings=[' ( (lv_mappings_9_0= ruleMapping ) ) (otherlv_10= ',' ( (lv_mappings_11_0= ruleMapping ) ) )* otherlv_12= ']' ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= 'labelcolor=[' ( ( (lv_LabelColor_14_0= ruleColorArray ) ) (otherlv_15= ',' ( (lv_LabelColor_16_0= ruleColorArray ) ) )* otherlv_17= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= 'valuecolor=[' ( ( (lv_ValueColor_19_0= ruleColorArray ) ) (otherlv_20= ',' ( (lv_ValueColor_21_0= ruleColorArray ) ) )* otherlv_22= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_23= 'visibility=[' ( ( (lv_Visibility_24_0= ruleVisibilityRule ) ) (otherlv_25= ',' ( (lv_Visibility_26_0= ruleVisibilityRule ) ) )* otherlv_27= ']' ) ) ) ) ) )+ {...}?) ) ) ) ;
    public final EObject ruleSelection() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_2=null;
        Token otherlv_4=null;
        Token lv_label_5_1=null;
        Token lv_label_5_2=null;
        Token otherlv_6=null;
        Token otherlv_8=null;
        Token otherlv_10=null;
        Token otherlv_12=null;
        Token otherlv_13=null;
        Token otherlv_15=null;
        Token otherlv_17=null;
        Token otherlv_18=null;
        Token otherlv_20=null;
        Token otherlv_22=null;
        Token otherlv_23=null;
        Token otherlv_25=null;
        Token otherlv_27=null;
        AntlrDatatypeRuleToken lv_item_3_0 = null;

        AntlrDatatypeRuleToken lv_icon_7_0 = null;

        EObject lv_mappings_9_0 = null;

        EObject lv_mappings_11_0 = null;

        EObject lv_LabelColor_14_0 = null;

        EObject lv_LabelColor_16_0 = null;

        EObject lv_ValueColor_19_0 = null;

        EObject lv_ValueColor_21_0 = null;

        EObject lv_Visibility_24_0 = null;

        EObject lv_Visibility_26_0 = null;


         enterRule(); 
            
        try {
            // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4033:28: ( (otherlv_0= 'Selection' ( ( ( ( ({...}? => ( ({...}? => (otherlv_2= 'item=' ( (lv_item_3_0= ruleItemRef ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= 'label=' ( ( (lv_label_5_1= RULE_ID | lv_label_5_2= RULE_STRING ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= 'icon=' ( (lv_icon_7_0= ruleIcon ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_8= 'mappings=[' ( (lv_mappings_9_0= ruleMapping ) ) (otherlv_10= ',' ( (lv_mappings_11_0= ruleMapping ) ) )* otherlv_12= ']' ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= 'labelcolor=[' ( ( (lv_LabelColor_14_0= ruleColorArray ) ) (otherlv_15= ',' ( (lv_LabelColor_16_0= ruleColorArray ) ) )* otherlv_17= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= 'valuecolor=[' ( ( (lv_ValueColor_19_0= ruleColorArray ) ) (otherlv_20= ',' ( (lv_ValueColor_21_0= ruleColorArray ) ) )* otherlv_22= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_23= 'visibility=[' ( ( (lv_Visibility_24_0= ruleVisibilityRule ) ) (otherlv_25= ',' ( (lv_Visibility_26_0= ruleVisibilityRule ) ) )* otherlv_27= ']' ) ) ) ) ) )+ {...}?) ) ) ) )
            // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4034:1: (otherlv_0= 'Selection' ( ( ( ( ({...}? => ( ({...}? => (otherlv_2= 'item=' ( (lv_item_3_0= ruleItemRef ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= 'label=' ( ( (lv_label_5_1= RULE_ID | lv_label_5_2= RULE_STRING ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= 'icon=' ( (lv_icon_7_0= ruleIcon ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_8= 'mappings=[' ( (lv_mappings_9_0= ruleMapping ) ) (otherlv_10= ',' ( (lv_mappings_11_0= ruleMapping ) ) )* otherlv_12= ']' ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= 'labelcolor=[' ( ( (lv_LabelColor_14_0= ruleColorArray ) ) (otherlv_15= ',' ( (lv_LabelColor_16_0= ruleColorArray ) ) )* otherlv_17= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= 'valuecolor=[' ( ( (lv_ValueColor_19_0= ruleColorArray ) ) (otherlv_20= ',' ( (lv_ValueColor_21_0= ruleColorArray ) ) )* otherlv_22= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_23= 'visibility=[' ( ( (lv_Visibility_24_0= ruleVisibilityRule ) ) (otherlv_25= ',' ( (lv_Visibility_26_0= ruleVisibilityRule ) ) )* otherlv_27= ']' ) ) ) ) ) )+ {...}?) ) ) )
            {
            // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4034:1: (otherlv_0= 'Selection' ( ( ( ( ({...}? => ( ({...}? => (otherlv_2= 'item=' ( (lv_item_3_0= ruleItemRef ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= 'label=' ( ( (lv_label_5_1= RULE_ID | lv_label_5_2= RULE_STRING ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= 'icon=' ( (lv_icon_7_0= ruleIcon ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_8= 'mappings=[' ( (lv_mappings_9_0= ruleMapping ) ) (otherlv_10= ',' ( (lv_mappings_11_0= ruleMapping ) ) )* otherlv_12= ']' ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= 'labelcolor=[' ( ( (lv_LabelColor_14_0= ruleColorArray ) ) (otherlv_15= ',' ( (lv_LabelColor_16_0= ruleColorArray ) ) )* otherlv_17= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= 'valuecolor=[' ( ( (lv_ValueColor_19_0= ruleColorArray ) ) (otherlv_20= ',' ( (lv_ValueColor_21_0= ruleColorArray ) ) )* otherlv_22= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_23= 'visibility=[' ( ( (lv_Visibility_24_0= ruleVisibilityRule ) ) (otherlv_25= ',' ( (lv_Visibility_26_0= ruleVisibilityRule ) ) )* otherlv_27= ']' ) ) ) ) ) )+ {...}?) ) ) )
            // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4034:3: otherlv_0= 'Selection' ( ( ( ( ({...}? => ( ({...}? => (otherlv_2= 'item=' ( (lv_item_3_0= ruleItemRef ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= 'label=' ( ( (lv_label_5_1= RULE_ID | lv_label_5_2= RULE_STRING ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= 'icon=' ( (lv_icon_7_0= ruleIcon ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_8= 'mappings=[' ( (lv_mappings_9_0= ruleMapping ) ) (otherlv_10= ',' ( (lv_mappings_11_0= ruleMapping ) ) )* otherlv_12= ']' ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= 'labelcolor=[' ( ( (lv_LabelColor_14_0= ruleColorArray ) ) (otherlv_15= ',' ( (lv_LabelColor_16_0= ruleColorArray ) ) )* otherlv_17= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= 'valuecolor=[' ( ( (lv_ValueColor_19_0= ruleColorArray ) ) (otherlv_20= ',' ( (lv_ValueColor_21_0= ruleColorArray ) ) )* otherlv_22= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_23= 'visibility=[' ( ( (lv_Visibility_24_0= ruleVisibilityRule ) ) (otherlv_25= ',' ( (lv_Visibility_26_0= ruleVisibilityRule ) ) )* otherlv_27= ']' ) ) ) ) ) )+ {...}?) ) )
            {
            otherlv_0=(Token)match(input,42,FOLLOW_42_in_ruleSelection9827); 

                	newLeafNode(otherlv_0, grammarAccess.getSelectionAccess().getSelectionKeyword_0());
                
            // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4038:1: ( ( ( ( ({...}? => ( ({...}? => (otherlv_2= 'item=' ( (lv_item_3_0= ruleItemRef ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= 'label=' ( ( (lv_label_5_1= RULE_ID | lv_label_5_2= RULE_STRING ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= 'icon=' ( (lv_icon_7_0= ruleIcon ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_8= 'mappings=[' ( (lv_mappings_9_0= ruleMapping ) ) (otherlv_10= ',' ( (lv_mappings_11_0= ruleMapping ) ) )* otherlv_12= ']' ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= 'labelcolor=[' ( ( (lv_LabelColor_14_0= ruleColorArray ) ) (otherlv_15= ',' ( (lv_LabelColor_16_0= ruleColorArray ) ) )* otherlv_17= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= 'valuecolor=[' ( ( (lv_ValueColor_19_0= ruleColorArray ) ) (otherlv_20= ',' ( (lv_ValueColor_21_0= ruleColorArray ) ) )* otherlv_22= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_23= 'visibility=[' ( ( (lv_Visibility_24_0= ruleVisibilityRule ) ) (otherlv_25= ',' ( (lv_Visibility_26_0= ruleVisibilityRule ) ) )* otherlv_27= ']' ) ) ) ) ) )+ {...}?) ) )
            // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4040:1: ( ( ( ({...}? => ( ({...}? => (otherlv_2= 'item=' ( (lv_item_3_0= ruleItemRef ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= 'label=' ( ( (lv_label_5_1= RULE_ID | lv_label_5_2= RULE_STRING ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= 'icon=' ( (lv_icon_7_0= ruleIcon ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_8= 'mappings=[' ( (lv_mappings_9_0= ruleMapping ) ) (otherlv_10= ',' ( (lv_mappings_11_0= ruleMapping ) ) )* otherlv_12= ']' ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= 'labelcolor=[' ( ( (lv_LabelColor_14_0= ruleColorArray ) ) (otherlv_15= ',' ( (lv_LabelColor_16_0= ruleColorArray ) ) )* otherlv_17= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= 'valuecolor=[' ( ( (lv_ValueColor_19_0= ruleColorArray ) ) (otherlv_20= ',' ( (lv_ValueColor_21_0= ruleColorArray ) ) )* otherlv_22= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_23= 'visibility=[' ( ( (lv_Visibility_24_0= ruleVisibilityRule ) ) (otherlv_25= ',' ( (lv_Visibility_26_0= ruleVisibilityRule ) ) )* otherlv_27= ']' ) ) ) ) ) )+ {...}?) )
            {
            // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4040:1: ( ( ( ({...}? => ( ({...}? => (otherlv_2= 'item=' ( (lv_item_3_0= ruleItemRef ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= 'label=' ( ( (lv_label_5_1= RULE_ID | lv_label_5_2= RULE_STRING ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= 'icon=' ( (lv_icon_7_0= ruleIcon ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_8= 'mappings=[' ( (lv_mappings_9_0= ruleMapping ) ) (otherlv_10= ',' ( (lv_mappings_11_0= ruleMapping ) ) )* otherlv_12= ']' ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= 'labelcolor=[' ( ( (lv_LabelColor_14_0= ruleColorArray ) ) (otherlv_15= ',' ( (lv_LabelColor_16_0= ruleColorArray ) ) )* otherlv_17= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= 'valuecolor=[' ( ( (lv_ValueColor_19_0= ruleColorArray ) ) (otherlv_20= ',' ( (lv_ValueColor_21_0= ruleColorArray ) ) )* otherlv_22= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_23= 'visibility=[' ( ( (lv_Visibility_24_0= ruleVisibilityRule ) ) (otherlv_25= ',' ( (lv_Visibility_26_0= ruleVisibilityRule ) ) )* otherlv_27= ']' ) ) ) ) ) )+ {...}?) )
            // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4041:2: ( ( ({...}? => ( ({...}? => (otherlv_2= 'item=' ( (lv_item_3_0= ruleItemRef ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= 'label=' ( ( (lv_label_5_1= RULE_ID | lv_label_5_2= RULE_STRING ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= 'icon=' ( (lv_icon_7_0= ruleIcon ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_8= 'mappings=[' ( (lv_mappings_9_0= ruleMapping ) ) (otherlv_10= ',' ( (lv_mappings_11_0= ruleMapping ) ) )* otherlv_12= ']' ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= 'labelcolor=[' ( ( (lv_LabelColor_14_0= ruleColorArray ) ) (otherlv_15= ',' ( (lv_LabelColor_16_0= ruleColorArray ) ) )* otherlv_17= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= 'valuecolor=[' ( ( (lv_ValueColor_19_0= ruleColorArray ) ) (otherlv_20= ',' ( (lv_ValueColor_21_0= ruleColorArray ) ) )* otherlv_22= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_23= 'visibility=[' ( ( (lv_Visibility_24_0= ruleVisibilityRule ) ) (otherlv_25= ',' ( (lv_Visibility_26_0= ruleVisibilityRule ) ) )* otherlv_27= ']' ) ) ) ) ) )+ {...}?)
            {
             
            	  getUnorderedGroupHelper().enter(grammarAccess.getSelectionAccess().getUnorderedGroup_1());
            	
            // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4044:2: ( ( ({...}? => ( ({...}? => (otherlv_2= 'item=' ( (lv_item_3_0= ruleItemRef ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= 'label=' ( ( (lv_label_5_1= RULE_ID | lv_label_5_2= RULE_STRING ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= 'icon=' ( (lv_icon_7_0= ruleIcon ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_8= 'mappings=[' ( (lv_mappings_9_0= ruleMapping ) ) (otherlv_10= ',' ( (lv_mappings_11_0= ruleMapping ) ) )* otherlv_12= ']' ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= 'labelcolor=[' ( ( (lv_LabelColor_14_0= ruleColorArray ) ) (otherlv_15= ',' ( (lv_LabelColor_16_0= ruleColorArray ) ) )* otherlv_17= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= 'valuecolor=[' ( ( (lv_ValueColor_19_0= ruleColorArray ) ) (otherlv_20= ',' ( (lv_ValueColor_21_0= ruleColorArray ) ) )* otherlv_22= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_23= 'visibility=[' ( ( (lv_Visibility_24_0= ruleVisibilityRule ) ) (otherlv_25= ',' ( (lv_Visibility_26_0= ruleVisibilityRule ) ) )* otherlv_27= ']' ) ) ) ) ) )+ {...}?)
            // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4045:3: ( ({...}? => ( ({...}? => (otherlv_2= 'item=' ( (lv_item_3_0= ruleItemRef ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= 'label=' ( ( (lv_label_5_1= RULE_ID | lv_label_5_2= RULE_STRING ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= 'icon=' ( (lv_icon_7_0= ruleIcon ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_8= 'mappings=[' ( (lv_mappings_9_0= ruleMapping ) ) (otherlv_10= ',' ( (lv_mappings_11_0= ruleMapping ) ) )* otherlv_12= ']' ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= 'labelcolor=[' ( ( (lv_LabelColor_14_0= ruleColorArray ) ) (otherlv_15= ',' ( (lv_LabelColor_16_0= ruleColorArray ) ) )* otherlv_17= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= 'valuecolor=[' ( ( (lv_ValueColor_19_0= ruleColorArray ) ) (otherlv_20= ',' ( (lv_ValueColor_21_0= ruleColorArray ) ) )* otherlv_22= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_23= 'visibility=[' ( ( (lv_Visibility_24_0= ruleVisibilityRule ) ) (otherlv_25= ',' ( (lv_Visibility_26_0= ruleVisibilityRule ) ) )* otherlv_27= ']' ) ) ) ) ) )+ {...}?
            {
            // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4045:3: ( ({...}? => ( ({...}? => (otherlv_2= 'item=' ( (lv_item_3_0= ruleItemRef ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= 'label=' ( ( (lv_label_5_1= RULE_ID | lv_label_5_2= RULE_STRING ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= 'icon=' ( (lv_icon_7_0= ruleIcon ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_8= 'mappings=[' ( (lv_mappings_9_0= ruleMapping ) ) (otherlv_10= ',' ( (lv_mappings_11_0= ruleMapping ) ) )* otherlv_12= ']' ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= 'labelcolor=[' ( ( (lv_LabelColor_14_0= ruleColorArray ) ) (otherlv_15= ',' ( (lv_LabelColor_16_0= ruleColorArray ) ) )* otherlv_17= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= 'valuecolor=[' ( ( (lv_ValueColor_19_0= ruleColorArray ) ) (otherlv_20= ',' ( (lv_ValueColor_21_0= ruleColorArray ) ) )* otherlv_22= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_23= 'visibility=[' ( ( (lv_Visibility_24_0= ruleVisibilityRule ) ) (otherlv_25= ',' ( (lv_Visibility_26_0= ruleVisibilityRule ) ) )* otherlv_27= ']' ) ) ) ) ) )+
            int cnt61=0;
            loop61:
            do {
                int alt61=8;
                int LA61_0 = input.LA(1);

                if ( LA61_0 ==18 && getUnorderedGroupHelper().canSelect(grammarAccess.getSelectionAccess().getUnorderedGroup_1(), 0) ) {
                    alt61=1;
                }
                else if ( LA61_0 ==13 && getUnorderedGroupHelper().canSelect(grammarAccess.getSelectionAccess().getUnorderedGroup_1(), 1) ) {
                    alt61=2;
                }
                else if ( LA61_0 ==14 && getUnorderedGroupHelper().canSelect(grammarAccess.getSelectionAccess().getUnorderedGroup_1(), 2) ) {
                    alt61=3;
                }
                else if ( LA61_0 ==38 && getUnorderedGroupHelper().canSelect(grammarAccess.getSelectionAccess().getUnorderedGroup_1(), 3) ) {
                    alt61=4;
                }
                else if ( LA61_0 ==19 && getUnorderedGroupHelper().canSelect(grammarAccess.getSelectionAccess().getUnorderedGroup_1(), 4) ) {
                    alt61=5;
                }
                else if ( LA61_0 ==22 && getUnorderedGroupHelper().canSelect(grammarAccess.getSelectionAccess().getUnorderedGroup_1(), 5) ) {
                    alt61=6;
                }
                else if ( LA61_0 ==23 && getUnorderedGroupHelper().canSelect(grammarAccess.getSelectionAccess().getUnorderedGroup_1(), 6) ) {
                    alt61=7;
                }


                switch (alt61) {
            	case 1 :
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4047:4: ({...}? => ( ({...}? => (otherlv_2= 'item=' ( (lv_item_3_0= ruleItemRef ) ) ) ) ) )
            	    {
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4047:4: ({...}? => ( ({...}? => (otherlv_2= 'item=' ( (lv_item_3_0= ruleItemRef ) ) ) ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4048:5: {...}? => ( ({...}? => (otherlv_2= 'item=' ( (lv_item_3_0= ruleItemRef ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getSelectionAccess().getUnorderedGroup_1(), 0) ) {
            	        throw new FailedPredicateException(input, "ruleSelection", "getUnorderedGroupHelper().canSelect(grammarAccess.getSelectionAccess().getUnorderedGroup_1(), 0)");
            	    }
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4048:106: ( ({...}? => (otherlv_2= 'item=' ( (lv_item_3_0= ruleItemRef ) ) ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4049:6: ({...}? => (otherlv_2= 'item=' ( (lv_item_3_0= ruleItemRef ) ) ) )
            	    {
            	     
            	    	 				  getUnorderedGroupHelper().select(grammarAccess.getSelectionAccess().getUnorderedGroup_1(), 0);
            	    	 				
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4052:6: ({...}? => (otherlv_2= 'item=' ( (lv_item_3_0= ruleItemRef ) ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4052:7: {...}? => (otherlv_2= 'item=' ( (lv_item_3_0= ruleItemRef ) ) )
            	    {
            	    if ( !((true)) ) {
            	        throw new FailedPredicateException(input, "ruleSelection", "true");
            	    }
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4052:16: (otherlv_2= 'item=' ( (lv_item_3_0= ruleItemRef ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4052:18: otherlv_2= 'item=' ( (lv_item_3_0= ruleItemRef ) )
            	    {
            	    otherlv_2=(Token)match(input,18,FOLLOW_18_in_ruleSelection9885); 

            	        	newLeafNode(otherlv_2, grammarAccess.getSelectionAccess().getItemKeyword_1_0_0());
            	        
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4056:1: ( (lv_item_3_0= ruleItemRef ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4057:1: (lv_item_3_0= ruleItemRef )
            	    {
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4057:1: (lv_item_3_0= ruleItemRef )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4058:3: lv_item_3_0= ruleItemRef
            	    {
            	     
            	    	        newCompositeNode(grammarAccess.getSelectionAccess().getItemItemRefParserRuleCall_1_0_1_0()); 
            	    	    
            	    pushFollow(FOLLOW_ruleItemRef_in_ruleSelection9906);
            	    lv_item_3_0=ruleItemRef();

            	    state._fsp--;


            	    	        if (current==null) {
            	    	            current = createModelElementForParent(grammarAccess.getSelectionRule());
            	    	        }
            	           		set(
            	           			current, 
            	           			"item",
            	            		lv_item_3_0, 
            	            		"ItemRef");
            	    	        afterParserOrEnumRuleCall();
            	    	    

            	    }


            	    }


            	    }


            	    }

            	     
            	    	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getSelectionAccess().getUnorderedGroup_1());
            	    	 				

            	    }


            	    }


            	    }
            	    break;
            	case 2 :
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4081:4: ({...}? => ( ({...}? => (otherlv_4= 'label=' ( ( (lv_label_5_1= RULE_ID | lv_label_5_2= RULE_STRING ) ) ) ) ) ) )
            	    {
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4081:4: ({...}? => ( ({...}? => (otherlv_4= 'label=' ( ( (lv_label_5_1= RULE_ID | lv_label_5_2= RULE_STRING ) ) ) ) ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4082:5: {...}? => ( ({...}? => (otherlv_4= 'label=' ( ( (lv_label_5_1= RULE_ID | lv_label_5_2= RULE_STRING ) ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getSelectionAccess().getUnorderedGroup_1(), 1) ) {
            	        throw new FailedPredicateException(input, "ruleSelection", "getUnorderedGroupHelper().canSelect(grammarAccess.getSelectionAccess().getUnorderedGroup_1(), 1)");
            	    }
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4082:106: ( ({...}? => (otherlv_4= 'label=' ( ( (lv_label_5_1= RULE_ID | lv_label_5_2= RULE_STRING ) ) ) ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4083:6: ({...}? => (otherlv_4= 'label=' ( ( (lv_label_5_1= RULE_ID | lv_label_5_2= RULE_STRING ) ) ) ) )
            	    {
            	     
            	    	 				  getUnorderedGroupHelper().select(grammarAccess.getSelectionAccess().getUnorderedGroup_1(), 1);
            	    	 				
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4086:6: ({...}? => (otherlv_4= 'label=' ( ( (lv_label_5_1= RULE_ID | lv_label_5_2= RULE_STRING ) ) ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4086:7: {...}? => (otherlv_4= 'label=' ( ( (lv_label_5_1= RULE_ID | lv_label_5_2= RULE_STRING ) ) ) )
            	    {
            	    if ( !((true)) ) {
            	        throw new FailedPredicateException(input, "ruleSelection", "true");
            	    }
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4086:16: (otherlv_4= 'label=' ( ( (lv_label_5_1= RULE_ID | lv_label_5_2= RULE_STRING ) ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4086:18: otherlv_4= 'label=' ( ( (lv_label_5_1= RULE_ID | lv_label_5_2= RULE_STRING ) ) )
            	    {
            	    otherlv_4=(Token)match(input,13,FOLLOW_13_in_ruleSelection9974); 

            	        	newLeafNode(otherlv_4, grammarAccess.getSelectionAccess().getLabelKeyword_1_1_0());
            	        
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4090:1: ( ( (lv_label_5_1= RULE_ID | lv_label_5_2= RULE_STRING ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4091:1: ( (lv_label_5_1= RULE_ID | lv_label_5_2= RULE_STRING ) )
            	    {
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4091:1: ( (lv_label_5_1= RULE_ID | lv_label_5_2= RULE_STRING ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4092:1: (lv_label_5_1= RULE_ID | lv_label_5_2= RULE_STRING )
            	    {
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4092:1: (lv_label_5_1= RULE_ID | lv_label_5_2= RULE_STRING )
            	    int alt56=2;
            	    int LA56_0 = input.LA(1);

            	    if ( (LA56_0==RULE_ID) ) {
            	        alt56=1;
            	    }
            	    else if ( (LA56_0==RULE_STRING) ) {
            	        alt56=2;
            	    }
            	    else {
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 56, 0, input);

            	        throw nvae;
            	    }
            	    switch (alt56) {
            	        case 1 :
            	            // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4093:3: lv_label_5_1= RULE_ID
            	            {
            	            lv_label_5_1=(Token)match(input,RULE_ID,FOLLOW_RULE_ID_in_ruleSelection9993); 

            	            			newLeafNode(lv_label_5_1, grammarAccess.getSelectionAccess().getLabelIDTerminalRuleCall_1_1_1_0_0()); 
            	            		

            	            	        if (current==null) {
            	            	            current = createModelElement(grammarAccess.getSelectionRule());
            	            	        }
            	                   		setWithLastConsumed(
            	                   			current, 
            	                   			"label",
            	                    		lv_label_5_1, 
            	                    		"ID");
            	            	    

            	            }
            	            break;
            	        case 2 :
            	            // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4108:8: lv_label_5_2= RULE_STRING
            	            {
            	            lv_label_5_2=(Token)match(input,RULE_STRING,FOLLOW_RULE_STRING_in_ruleSelection10013); 

            	            			newLeafNode(lv_label_5_2, grammarAccess.getSelectionAccess().getLabelSTRINGTerminalRuleCall_1_1_1_0_1()); 
            	            		

            	            	        if (current==null) {
            	            	            current = createModelElement(grammarAccess.getSelectionRule());
            	            	        }
            	                   		setWithLastConsumed(
            	                   			current, 
            	                   			"label",
            	                    		lv_label_5_2, 
            	                    		"STRING");
            	            	    

            	            }
            	            break;

            	    }


            	    }


            	    }


            	    }


            	    }

            	     
            	    	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getSelectionAccess().getUnorderedGroup_1());
            	    	 				

            	    }


            	    }


            	    }
            	    break;
            	case 3 :
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4133:4: ({...}? => ( ({...}? => (otherlv_6= 'icon=' ( (lv_icon_7_0= ruleIcon ) ) ) ) ) )
            	    {
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4133:4: ({...}? => ( ({...}? => (otherlv_6= 'icon=' ( (lv_icon_7_0= ruleIcon ) ) ) ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4134:5: {...}? => ( ({...}? => (otherlv_6= 'icon=' ( (lv_icon_7_0= ruleIcon ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getSelectionAccess().getUnorderedGroup_1(), 2) ) {
            	        throw new FailedPredicateException(input, "ruleSelection", "getUnorderedGroupHelper().canSelect(grammarAccess.getSelectionAccess().getUnorderedGroup_1(), 2)");
            	    }
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4134:106: ( ({...}? => (otherlv_6= 'icon=' ( (lv_icon_7_0= ruleIcon ) ) ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4135:6: ({...}? => (otherlv_6= 'icon=' ( (lv_icon_7_0= ruleIcon ) ) ) )
            	    {
            	     
            	    	 				  getUnorderedGroupHelper().select(grammarAccess.getSelectionAccess().getUnorderedGroup_1(), 2);
            	    	 				
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4138:6: ({...}? => (otherlv_6= 'icon=' ( (lv_icon_7_0= ruleIcon ) ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4138:7: {...}? => (otherlv_6= 'icon=' ( (lv_icon_7_0= ruleIcon ) ) )
            	    {
            	    if ( !((true)) ) {
            	        throw new FailedPredicateException(input, "ruleSelection", "true");
            	    }
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4138:16: (otherlv_6= 'icon=' ( (lv_icon_7_0= ruleIcon ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4138:18: otherlv_6= 'icon=' ( (lv_icon_7_0= ruleIcon ) )
            	    {
            	    otherlv_6=(Token)match(input,14,FOLLOW_14_in_ruleSelection10089); 

            	        	newLeafNode(otherlv_6, grammarAccess.getSelectionAccess().getIconKeyword_1_2_0());
            	        
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4142:1: ( (lv_icon_7_0= ruleIcon ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4143:1: (lv_icon_7_0= ruleIcon )
            	    {
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4143:1: (lv_icon_7_0= ruleIcon )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4144:3: lv_icon_7_0= ruleIcon
            	    {
            	     
            	    	        newCompositeNode(grammarAccess.getSelectionAccess().getIconIconParserRuleCall_1_2_1_0()); 
            	    	    
            	    pushFollow(FOLLOW_ruleIcon_in_ruleSelection10110);
            	    lv_icon_7_0=ruleIcon();

            	    state._fsp--;


            	    	        if (current==null) {
            	    	            current = createModelElementForParent(grammarAccess.getSelectionRule());
            	    	        }
            	           		set(
            	           			current, 
            	           			"icon",
            	            		lv_icon_7_0, 
            	            		"Icon");
            	    	        afterParserOrEnumRuleCall();
            	    	    

            	    }


            	    }


            	    }


            	    }

            	     
            	    	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getSelectionAccess().getUnorderedGroup_1());
            	    	 				

            	    }


            	    }


            	    }
            	    break;
            	case 4 :
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4167:4: ({...}? => ( ({...}? => (otherlv_8= 'mappings=[' ( (lv_mappings_9_0= ruleMapping ) ) (otherlv_10= ',' ( (lv_mappings_11_0= ruleMapping ) ) )* otherlv_12= ']' ) ) ) )
            	    {
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4167:4: ({...}? => ( ({...}? => (otherlv_8= 'mappings=[' ( (lv_mappings_9_0= ruleMapping ) ) (otherlv_10= ',' ( (lv_mappings_11_0= ruleMapping ) ) )* otherlv_12= ']' ) ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4168:5: {...}? => ( ({...}? => (otherlv_8= 'mappings=[' ( (lv_mappings_9_0= ruleMapping ) ) (otherlv_10= ',' ( (lv_mappings_11_0= ruleMapping ) ) )* otherlv_12= ']' ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getSelectionAccess().getUnorderedGroup_1(), 3) ) {
            	        throw new FailedPredicateException(input, "ruleSelection", "getUnorderedGroupHelper().canSelect(grammarAccess.getSelectionAccess().getUnorderedGroup_1(), 3)");
            	    }
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4168:106: ( ({...}? => (otherlv_8= 'mappings=[' ( (lv_mappings_9_0= ruleMapping ) ) (otherlv_10= ',' ( (lv_mappings_11_0= ruleMapping ) ) )* otherlv_12= ']' ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4169:6: ({...}? => (otherlv_8= 'mappings=[' ( (lv_mappings_9_0= ruleMapping ) ) (otherlv_10= ',' ( (lv_mappings_11_0= ruleMapping ) ) )* otherlv_12= ']' ) )
            	    {
            	     
            	    	 				  getUnorderedGroupHelper().select(grammarAccess.getSelectionAccess().getUnorderedGroup_1(), 3);
            	    	 				
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4172:6: ({...}? => (otherlv_8= 'mappings=[' ( (lv_mappings_9_0= ruleMapping ) ) (otherlv_10= ',' ( (lv_mappings_11_0= ruleMapping ) ) )* otherlv_12= ']' ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4172:7: {...}? => (otherlv_8= 'mappings=[' ( (lv_mappings_9_0= ruleMapping ) ) (otherlv_10= ',' ( (lv_mappings_11_0= ruleMapping ) ) )* otherlv_12= ']' )
            	    {
            	    if ( !((true)) ) {
            	        throw new FailedPredicateException(input, "ruleSelection", "true");
            	    }
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4172:16: (otherlv_8= 'mappings=[' ( (lv_mappings_9_0= ruleMapping ) ) (otherlv_10= ',' ( (lv_mappings_11_0= ruleMapping ) ) )* otherlv_12= ']' )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4172:18: otherlv_8= 'mappings=[' ( (lv_mappings_9_0= ruleMapping ) ) (otherlv_10= ',' ( (lv_mappings_11_0= ruleMapping ) ) )* otherlv_12= ']'
            	    {
            	    otherlv_8=(Token)match(input,38,FOLLOW_38_in_ruleSelection10178); 

            	        	newLeafNode(otherlv_8, grammarAccess.getSelectionAccess().getMappingsKeyword_1_3_0());
            	        
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4176:1: ( (lv_mappings_9_0= ruleMapping ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4177:1: (lv_mappings_9_0= ruleMapping )
            	    {
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4177:1: (lv_mappings_9_0= ruleMapping )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4178:3: lv_mappings_9_0= ruleMapping
            	    {
            	     
            	    	        newCompositeNode(grammarAccess.getSelectionAccess().getMappingsMappingParserRuleCall_1_3_1_0()); 
            	    	    
            	    pushFollow(FOLLOW_ruleMapping_in_ruleSelection10199);
            	    lv_mappings_9_0=ruleMapping();

            	    state._fsp--;


            	    	        if (current==null) {
            	    	            current = createModelElementForParent(grammarAccess.getSelectionRule());
            	    	        }
            	           		add(
            	           			current, 
            	           			"mappings",
            	            		lv_mappings_9_0, 
            	            		"Mapping");
            	    	        afterParserOrEnumRuleCall();
            	    	    

            	    }


            	    }

            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4194:2: (otherlv_10= ',' ( (lv_mappings_11_0= ruleMapping ) ) )*
            	    loop57:
            	    do {
            	        int alt57=2;
            	        int LA57_0 = input.LA(1);

            	        if ( (LA57_0==20) ) {
            	            alt57=1;
            	        }


            	        switch (alt57) {
            	    	case 1 :
            	    	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4194:4: otherlv_10= ',' ( (lv_mappings_11_0= ruleMapping ) )
            	    	    {
            	    	    otherlv_10=(Token)match(input,20,FOLLOW_20_in_ruleSelection10212); 

            	    	        	newLeafNode(otherlv_10, grammarAccess.getSelectionAccess().getCommaKeyword_1_3_2_0());
            	    	        
            	    	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4198:1: ( (lv_mappings_11_0= ruleMapping ) )
            	    	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4199:1: (lv_mappings_11_0= ruleMapping )
            	    	    {
            	    	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4199:1: (lv_mappings_11_0= ruleMapping )
            	    	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4200:3: lv_mappings_11_0= ruleMapping
            	    	    {
            	    	     
            	    	    	        newCompositeNode(grammarAccess.getSelectionAccess().getMappingsMappingParserRuleCall_1_3_2_1_0()); 
            	    	    	    
            	    	    pushFollow(FOLLOW_ruleMapping_in_ruleSelection10233);
            	    	    lv_mappings_11_0=ruleMapping();

            	    	    state._fsp--;


            	    	    	        if (current==null) {
            	    	    	            current = createModelElementForParent(grammarAccess.getSelectionRule());
            	    	    	        }
            	    	           		add(
            	    	           			current, 
            	    	           			"mappings",
            	    	            		lv_mappings_11_0, 
            	    	            		"Mapping");
            	    	    	        afterParserOrEnumRuleCall();
            	    	    	    

            	    	    }


            	    	    }


            	    	    }
            	    	    break;

            	    	default :
            	    	    break loop57;
            	        }
            	    } while (true);

            	    otherlv_12=(Token)match(input,21,FOLLOW_21_in_ruleSelection10247); 

            	        	newLeafNode(otherlv_12, grammarAccess.getSelectionAccess().getRightSquareBracketKeyword_1_3_3());
            	        

            	    }


            	    }

            	     
            	    	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getSelectionAccess().getUnorderedGroup_1());
            	    	 				

            	    }


            	    }


            	    }
            	    break;
            	case 5 :
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4227:4: ({...}? => ( ({...}? => (otherlv_13= 'labelcolor=[' ( ( (lv_LabelColor_14_0= ruleColorArray ) ) (otherlv_15= ',' ( (lv_LabelColor_16_0= ruleColorArray ) ) )* otherlv_17= ']' ) ) ) ) )
            	    {
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4227:4: ({...}? => ( ({...}? => (otherlv_13= 'labelcolor=[' ( ( (lv_LabelColor_14_0= ruleColorArray ) ) (otherlv_15= ',' ( (lv_LabelColor_16_0= ruleColorArray ) ) )* otherlv_17= ']' ) ) ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4228:5: {...}? => ( ({...}? => (otherlv_13= 'labelcolor=[' ( ( (lv_LabelColor_14_0= ruleColorArray ) ) (otherlv_15= ',' ( (lv_LabelColor_16_0= ruleColorArray ) ) )* otherlv_17= ']' ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getSelectionAccess().getUnorderedGroup_1(), 4) ) {
            	        throw new FailedPredicateException(input, "ruleSelection", "getUnorderedGroupHelper().canSelect(grammarAccess.getSelectionAccess().getUnorderedGroup_1(), 4)");
            	    }
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4228:106: ( ({...}? => (otherlv_13= 'labelcolor=[' ( ( (lv_LabelColor_14_0= ruleColorArray ) ) (otherlv_15= ',' ( (lv_LabelColor_16_0= ruleColorArray ) ) )* otherlv_17= ']' ) ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4229:6: ({...}? => (otherlv_13= 'labelcolor=[' ( ( (lv_LabelColor_14_0= ruleColorArray ) ) (otherlv_15= ',' ( (lv_LabelColor_16_0= ruleColorArray ) ) )* otherlv_17= ']' ) ) )
            	    {
            	     
            	    	 				  getUnorderedGroupHelper().select(grammarAccess.getSelectionAccess().getUnorderedGroup_1(), 4);
            	    	 				
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4232:6: ({...}? => (otherlv_13= 'labelcolor=[' ( ( (lv_LabelColor_14_0= ruleColorArray ) ) (otherlv_15= ',' ( (lv_LabelColor_16_0= ruleColorArray ) ) )* otherlv_17= ']' ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4232:7: {...}? => (otherlv_13= 'labelcolor=[' ( ( (lv_LabelColor_14_0= ruleColorArray ) ) (otherlv_15= ',' ( (lv_LabelColor_16_0= ruleColorArray ) ) )* otherlv_17= ']' ) )
            	    {
            	    if ( !((true)) ) {
            	        throw new FailedPredicateException(input, "ruleSelection", "true");
            	    }
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4232:16: (otherlv_13= 'labelcolor=[' ( ( (lv_LabelColor_14_0= ruleColorArray ) ) (otherlv_15= ',' ( (lv_LabelColor_16_0= ruleColorArray ) ) )* otherlv_17= ']' ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4232:18: otherlv_13= 'labelcolor=[' ( ( (lv_LabelColor_14_0= ruleColorArray ) ) (otherlv_15= ',' ( (lv_LabelColor_16_0= ruleColorArray ) ) )* otherlv_17= ']' )
            	    {
            	    otherlv_13=(Token)match(input,19,FOLLOW_19_in_ruleSelection10315); 

            	        	newLeafNode(otherlv_13, grammarAccess.getSelectionAccess().getLabelcolorKeyword_1_4_0());
            	        
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4236:1: ( ( (lv_LabelColor_14_0= ruleColorArray ) ) (otherlv_15= ',' ( (lv_LabelColor_16_0= ruleColorArray ) ) )* otherlv_17= ']' )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4236:2: ( (lv_LabelColor_14_0= ruleColorArray ) ) (otherlv_15= ',' ( (lv_LabelColor_16_0= ruleColorArray ) ) )* otherlv_17= ']'
            	    {
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4236:2: ( (lv_LabelColor_14_0= ruleColorArray ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4237:1: (lv_LabelColor_14_0= ruleColorArray )
            	    {
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4237:1: (lv_LabelColor_14_0= ruleColorArray )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4238:3: lv_LabelColor_14_0= ruleColorArray
            	    {
            	     
            	    	        newCompositeNode(grammarAccess.getSelectionAccess().getLabelColorColorArrayParserRuleCall_1_4_1_0_0()); 
            	    	    
            	    pushFollow(FOLLOW_ruleColorArray_in_ruleSelection10337);
            	    lv_LabelColor_14_0=ruleColorArray();

            	    state._fsp--;


            	    	        if (current==null) {
            	    	            current = createModelElementForParent(grammarAccess.getSelectionRule());
            	    	        }
            	           		add(
            	           			current, 
            	           			"LabelColor",
            	            		lv_LabelColor_14_0, 
            	            		"ColorArray");
            	    	        afterParserOrEnumRuleCall();
            	    	    

            	    }


            	    }

            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4254:2: (otherlv_15= ',' ( (lv_LabelColor_16_0= ruleColorArray ) ) )*
            	    loop58:
            	    do {
            	        int alt58=2;
            	        int LA58_0 = input.LA(1);

            	        if ( (LA58_0==20) ) {
            	            alt58=1;
            	        }


            	        switch (alt58) {
            	    	case 1 :
            	    	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4254:4: otherlv_15= ',' ( (lv_LabelColor_16_0= ruleColorArray ) )
            	    	    {
            	    	    otherlv_15=(Token)match(input,20,FOLLOW_20_in_ruleSelection10350); 

            	    	        	newLeafNode(otherlv_15, grammarAccess.getSelectionAccess().getCommaKeyword_1_4_1_1_0());
            	    	        
            	    	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4258:1: ( (lv_LabelColor_16_0= ruleColorArray ) )
            	    	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4259:1: (lv_LabelColor_16_0= ruleColorArray )
            	    	    {
            	    	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4259:1: (lv_LabelColor_16_0= ruleColorArray )
            	    	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4260:3: lv_LabelColor_16_0= ruleColorArray
            	    	    {
            	    	     
            	    	    	        newCompositeNode(grammarAccess.getSelectionAccess().getLabelColorColorArrayParserRuleCall_1_4_1_1_1_0()); 
            	    	    	    
            	    	    pushFollow(FOLLOW_ruleColorArray_in_ruleSelection10371);
            	    	    lv_LabelColor_16_0=ruleColorArray();

            	    	    state._fsp--;


            	    	    	        if (current==null) {
            	    	    	            current = createModelElementForParent(grammarAccess.getSelectionRule());
            	    	    	        }
            	    	           		add(
            	    	           			current, 
            	    	           			"LabelColor",
            	    	            		lv_LabelColor_16_0, 
            	    	            		"ColorArray");
            	    	    	        afterParserOrEnumRuleCall();
            	    	    	    

            	    	    }


            	    	    }


            	    	    }
            	    	    break;

            	    	default :
            	    	    break loop58;
            	        }
            	    } while (true);

            	    otherlv_17=(Token)match(input,21,FOLLOW_21_in_ruleSelection10385); 

            	        	newLeafNode(otherlv_17, grammarAccess.getSelectionAccess().getRightSquareBracketKeyword_1_4_1_2());
            	        

            	    }


            	    }


            	    }

            	     
            	    	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getSelectionAccess().getUnorderedGroup_1());
            	    	 				

            	    }


            	    }


            	    }
            	    break;
            	case 6 :
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4287:4: ({...}? => ( ({...}? => (otherlv_18= 'valuecolor=[' ( ( (lv_ValueColor_19_0= ruleColorArray ) ) (otherlv_20= ',' ( (lv_ValueColor_21_0= ruleColorArray ) ) )* otherlv_22= ']' ) ) ) ) )
            	    {
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4287:4: ({...}? => ( ({...}? => (otherlv_18= 'valuecolor=[' ( ( (lv_ValueColor_19_0= ruleColorArray ) ) (otherlv_20= ',' ( (lv_ValueColor_21_0= ruleColorArray ) ) )* otherlv_22= ']' ) ) ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4288:5: {...}? => ( ({...}? => (otherlv_18= 'valuecolor=[' ( ( (lv_ValueColor_19_0= ruleColorArray ) ) (otherlv_20= ',' ( (lv_ValueColor_21_0= ruleColorArray ) ) )* otherlv_22= ']' ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getSelectionAccess().getUnorderedGroup_1(), 5) ) {
            	        throw new FailedPredicateException(input, "ruleSelection", "getUnorderedGroupHelper().canSelect(grammarAccess.getSelectionAccess().getUnorderedGroup_1(), 5)");
            	    }
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4288:106: ( ({...}? => (otherlv_18= 'valuecolor=[' ( ( (lv_ValueColor_19_0= ruleColorArray ) ) (otherlv_20= ',' ( (lv_ValueColor_21_0= ruleColorArray ) ) )* otherlv_22= ']' ) ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4289:6: ({...}? => (otherlv_18= 'valuecolor=[' ( ( (lv_ValueColor_19_0= ruleColorArray ) ) (otherlv_20= ',' ( (lv_ValueColor_21_0= ruleColorArray ) ) )* otherlv_22= ']' ) ) )
            	    {
            	     
            	    	 				  getUnorderedGroupHelper().select(grammarAccess.getSelectionAccess().getUnorderedGroup_1(), 5);
            	    	 				
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4292:6: ({...}? => (otherlv_18= 'valuecolor=[' ( ( (lv_ValueColor_19_0= ruleColorArray ) ) (otherlv_20= ',' ( (lv_ValueColor_21_0= ruleColorArray ) ) )* otherlv_22= ']' ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4292:7: {...}? => (otherlv_18= 'valuecolor=[' ( ( (lv_ValueColor_19_0= ruleColorArray ) ) (otherlv_20= ',' ( (lv_ValueColor_21_0= ruleColorArray ) ) )* otherlv_22= ']' ) )
            	    {
            	    if ( !((true)) ) {
            	        throw new FailedPredicateException(input, "ruleSelection", "true");
            	    }
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4292:16: (otherlv_18= 'valuecolor=[' ( ( (lv_ValueColor_19_0= ruleColorArray ) ) (otherlv_20= ',' ( (lv_ValueColor_21_0= ruleColorArray ) ) )* otherlv_22= ']' ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4292:18: otherlv_18= 'valuecolor=[' ( ( (lv_ValueColor_19_0= ruleColorArray ) ) (otherlv_20= ',' ( (lv_ValueColor_21_0= ruleColorArray ) ) )* otherlv_22= ']' )
            	    {
            	    otherlv_18=(Token)match(input,22,FOLLOW_22_in_ruleSelection10454); 

            	        	newLeafNode(otherlv_18, grammarAccess.getSelectionAccess().getValuecolorKeyword_1_5_0());
            	        
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4296:1: ( ( (lv_ValueColor_19_0= ruleColorArray ) ) (otherlv_20= ',' ( (lv_ValueColor_21_0= ruleColorArray ) ) )* otherlv_22= ']' )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4296:2: ( (lv_ValueColor_19_0= ruleColorArray ) ) (otherlv_20= ',' ( (lv_ValueColor_21_0= ruleColorArray ) ) )* otherlv_22= ']'
            	    {
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4296:2: ( (lv_ValueColor_19_0= ruleColorArray ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4297:1: (lv_ValueColor_19_0= ruleColorArray )
            	    {
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4297:1: (lv_ValueColor_19_0= ruleColorArray )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4298:3: lv_ValueColor_19_0= ruleColorArray
            	    {
            	     
            	    	        newCompositeNode(grammarAccess.getSelectionAccess().getValueColorColorArrayParserRuleCall_1_5_1_0_0()); 
            	    	    
            	    pushFollow(FOLLOW_ruleColorArray_in_ruleSelection10476);
            	    lv_ValueColor_19_0=ruleColorArray();

            	    state._fsp--;


            	    	        if (current==null) {
            	    	            current = createModelElementForParent(grammarAccess.getSelectionRule());
            	    	        }
            	           		add(
            	           			current, 
            	           			"ValueColor",
            	            		lv_ValueColor_19_0, 
            	            		"ColorArray");
            	    	        afterParserOrEnumRuleCall();
            	    	    

            	    }


            	    }

            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4314:2: (otherlv_20= ',' ( (lv_ValueColor_21_0= ruleColorArray ) ) )*
            	    loop59:
            	    do {
            	        int alt59=2;
            	        int LA59_0 = input.LA(1);

            	        if ( (LA59_0==20) ) {
            	            alt59=1;
            	        }


            	        switch (alt59) {
            	    	case 1 :
            	    	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4314:4: otherlv_20= ',' ( (lv_ValueColor_21_0= ruleColorArray ) )
            	    	    {
            	    	    otherlv_20=(Token)match(input,20,FOLLOW_20_in_ruleSelection10489); 

            	    	        	newLeafNode(otherlv_20, grammarAccess.getSelectionAccess().getCommaKeyword_1_5_1_1_0());
            	    	        
            	    	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4318:1: ( (lv_ValueColor_21_0= ruleColorArray ) )
            	    	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4319:1: (lv_ValueColor_21_0= ruleColorArray )
            	    	    {
            	    	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4319:1: (lv_ValueColor_21_0= ruleColorArray )
            	    	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4320:3: lv_ValueColor_21_0= ruleColorArray
            	    	    {
            	    	     
            	    	    	        newCompositeNode(grammarAccess.getSelectionAccess().getValueColorColorArrayParserRuleCall_1_5_1_1_1_0()); 
            	    	    	    
            	    	    pushFollow(FOLLOW_ruleColorArray_in_ruleSelection10510);
            	    	    lv_ValueColor_21_0=ruleColorArray();

            	    	    state._fsp--;


            	    	    	        if (current==null) {
            	    	    	            current = createModelElementForParent(grammarAccess.getSelectionRule());
            	    	    	        }
            	    	           		add(
            	    	           			current, 
            	    	           			"ValueColor",
            	    	            		lv_ValueColor_21_0, 
            	    	            		"ColorArray");
            	    	    	        afterParserOrEnumRuleCall();
            	    	    	    

            	    	    }


            	    	    }


            	    	    }
            	    	    break;

            	    	default :
            	    	    break loop59;
            	        }
            	    } while (true);

            	    otherlv_22=(Token)match(input,21,FOLLOW_21_in_ruleSelection10524); 

            	        	newLeafNode(otherlv_22, grammarAccess.getSelectionAccess().getRightSquareBracketKeyword_1_5_1_2());
            	        

            	    }


            	    }


            	    }

            	     
            	    	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getSelectionAccess().getUnorderedGroup_1());
            	    	 				

            	    }


            	    }


            	    }
            	    break;
            	case 7 :
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4347:4: ({...}? => ( ({...}? => (otherlv_23= 'visibility=[' ( ( (lv_Visibility_24_0= ruleVisibilityRule ) ) (otherlv_25= ',' ( (lv_Visibility_26_0= ruleVisibilityRule ) ) )* otherlv_27= ']' ) ) ) ) )
            	    {
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4347:4: ({...}? => ( ({...}? => (otherlv_23= 'visibility=[' ( ( (lv_Visibility_24_0= ruleVisibilityRule ) ) (otherlv_25= ',' ( (lv_Visibility_26_0= ruleVisibilityRule ) ) )* otherlv_27= ']' ) ) ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4348:5: {...}? => ( ({...}? => (otherlv_23= 'visibility=[' ( ( (lv_Visibility_24_0= ruleVisibilityRule ) ) (otherlv_25= ',' ( (lv_Visibility_26_0= ruleVisibilityRule ) ) )* otherlv_27= ']' ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getSelectionAccess().getUnorderedGroup_1(), 6) ) {
            	        throw new FailedPredicateException(input, "ruleSelection", "getUnorderedGroupHelper().canSelect(grammarAccess.getSelectionAccess().getUnorderedGroup_1(), 6)");
            	    }
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4348:106: ( ({...}? => (otherlv_23= 'visibility=[' ( ( (lv_Visibility_24_0= ruleVisibilityRule ) ) (otherlv_25= ',' ( (lv_Visibility_26_0= ruleVisibilityRule ) ) )* otherlv_27= ']' ) ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4349:6: ({...}? => (otherlv_23= 'visibility=[' ( ( (lv_Visibility_24_0= ruleVisibilityRule ) ) (otherlv_25= ',' ( (lv_Visibility_26_0= ruleVisibilityRule ) ) )* otherlv_27= ']' ) ) )
            	    {
            	     
            	    	 				  getUnorderedGroupHelper().select(grammarAccess.getSelectionAccess().getUnorderedGroup_1(), 6);
            	    	 				
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4352:6: ({...}? => (otherlv_23= 'visibility=[' ( ( (lv_Visibility_24_0= ruleVisibilityRule ) ) (otherlv_25= ',' ( (lv_Visibility_26_0= ruleVisibilityRule ) ) )* otherlv_27= ']' ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4352:7: {...}? => (otherlv_23= 'visibility=[' ( ( (lv_Visibility_24_0= ruleVisibilityRule ) ) (otherlv_25= ',' ( (lv_Visibility_26_0= ruleVisibilityRule ) ) )* otherlv_27= ']' ) )
            	    {
            	    if ( !((true)) ) {
            	        throw new FailedPredicateException(input, "ruleSelection", "true");
            	    }
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4352:16: (otherlv_23= 'visibility=[' ( ( (lv_Visibility_24_0= ruleVisibilityRule ) ) (otherlv_25= ',' ( (lv_Visibility_26_0= ruleVisibilityRule ) ) )* otherlv_27= ']' ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4352:18: otherlv_23= 'visibility=[' ( ( (lv_Visibility_24_0= ruleVisibilityRule ) ) (otherlv_25= ',' ( (lv_Visibility_26_0= ruleVisibilityRule ) ) )* otherlv_27= ']' )
            	    {
            	    otherlv_23=(Token)match(input,23,FOLLOW_23_in_ruleSelection10593); 

            	        	newLeafNode(otherlv_23, grammarAccess.getSelectionAccess().getVisibilityKeyword_1_6_0());
            	        
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4356:1: ( ( (lv_Visibility_24_0= ruleVisibilityRule ) ) (otherlv_25= ',' ( (lv_Visibility_26_0= ruleVisibilityRule ) ) )* otherlv_27= ']' )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4356:2: ( (lv_Visibility_24_0= ruleVisibilityRule ) ) (otherlv_25= ',' ( (lv_Visibility_26_0= ruleVisibilityRule ) ) )* otherlv_27= ']'
            	    {
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4356:2: ( (lv_Visibility_24_0= ruleVisibilityRule ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4357:1: (lv_Visibility_24_0= ruleVisibilityRule )
            	    {
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4357:1: (lv_Visibility_24_0= ruleVisibilityRule )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4358:3: lv_Visibility_24_0= ruleVisibilityRule
            	    {
            	     
            	    	        newCompositeNode(grammarAccess.getSelectionAccess().getVisibilityVisibilityRuleParserRuleCall_1_6_1_0_0()); 
            	    	    
            	    pushFollow(FOLLOW_ruleVisibilityRule_in_ruleSelection10615);
            	    lv_Visibility_24_0=ruleVisibilityRule();

            	    state._fsp--;


            	    	        if (current==null) {
            	    	            current = createModelElementForParent(grammarAccess.getSelectionRule());
            	    	        }
            	           		add(
            	           			current, 
            	           			"Visibility",
            	            		lv_Visibility_24_0, 
            	            		"VisibilityRule");
            	    	        afterParserOrEnumRuleCall();
            	    	    

            	    }


            	    }

            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4374:2: (otherlv_25= ',' ( (lv_Visibility_26_0= ruleVisibilityRule ) ) )*
            	    loop60:
            	    do {
            	        int alt60=2;
            	        int LA60_0 = input.LA(1);

            	        if ( (LA60_0==20) ) {
            	            alt60=1;
            	        }


            	        switch (alt60) {
            	    	case 1 :
            	    	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4374:4: otherlv_25= ',' ( (lv_Visibility_26_0= ruleVisibilityRule ) )
            	    	    {
            	    	    otherlv_25=(Token)match(input,20,FOLLOW_20_in_ruleSelection10628); 

            	    	        	newLeafNode(otherlv_25, grammarAccess.getSelectionAccess().getCommaKeyword_1_6_1_1_0());
            	    	        
            	    	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4378:1: ( (lv_Visibility_26_0= ruleVisibilityRule ) )
            	    	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4379:1: (lv_Visibility_26_0= ruleVisibilityRule )
            	    	    {
            	    	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4379:1: (lv_Visibility_26_0= ruleVisibilityRule )
            	    	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4380:3: lv_Visibility_26_0= ruleVisibilityRule
            	    	    {
            	    	     
            	    	    	        newCompositeNode(grammarAccess.getSelectionAccess().getVisibilityVisibilityRuleParserRuleCall_1_6_1_1_1_0()); 
            	    	    	    
            	    	    pushFollow(FOLLOW_ruleVisibilityRule_in_ruleSelection10649);
            	    	    lv_Visibility_26_0=ruleVisibilityRule();

            	    	    state._fsp--;


            	    	    	        if (current==null) {
            	    	    	            current = createModelElementForParent(grammarAccess.getSelectionRule());
            	    	    	        }
            	    	           		add(
            	    	           			current, 
            	    	           			"Visibility",
            	    	            		lv_Visibility_26_0, 
            	    	            		"VisibilityRule");
            	    	    	        afterParserOrEnumRuleCall();
            	    	    	    

            	    	    }


            	    	    }


            	    	    }
            	    	    break;

            	    	default :
            	    	    break loop60;
            	        }
            	    } while (true);

            	    otherlv_27=(Token)match(input,21,FOLLOW_21_in_ruleSelection10663); 

            	        	newLeafNode(otherlv_27, grammarAccess.getSelectionAccess().getRightSquareBracketKeyword_1_6_1_2());
            	        

            	    }


            	    }


            	    }

            	     
            	    	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getSelectionAccess().getUnorderedGroup_1());
            	    	 				

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    if ( cnt61 >= 1 ) break loop61;
                        EarlyExitException eee =
                            new EarlyExitException(61, input);
                        throw eee;
                }
                cnt61++;
            } while (true);

            if ( ! getUnorderedGroupHelper().canLeave(grammarAccess.getSelectionAccess().getUnorderedGroup_1()) ) {
                throw new FailedPredicateException(input, "ruleSelection", "getUnorderedGroupHelper().canLeave(grammarAccess.getSelectionAccess().getUnorderedGroup_1())");
            }

            }


            }

             
            	  getUnorderedGroupHelper().leave(grammarAccess.getSelectionAccess().getUnorderedGroup_1());
            	

            }


            }


            }

             leaveRule(); 
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleSelection"


    // $ANTLR start "entryRuleList"
    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4423:1: entryRuleList returns [EObject current=null] : iv_ruleList= ruleList EOF ;
    public final EObject entryRuleList() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleList = null;


        try {
            // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4424:2: (iv_ruleList= ruleList EOF )
            // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4425:2: iv_ruleList= ruleList EOF
            {
             newCompositeNode(grammarAccess.getListRule()); 
            pushFollow(FOLLOW_ruleList_in_entryRuleList10747);
            iv_ruleList=ruleList();

            state._fsp--;

             current =iv_ruleList; 
            match(input,EOF,FOLLOW_EOF_in_entryRuleList10757); 

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleList"


    // $ANTLR start "ruleList"
    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4432:1: ruleList returns [EObject current=null] : (otherlv_0= 'List' ( ( ( ( ({...}? => ( ({...}? => (otherlv_2= 'item=' ( (lv_item_3_0= ruleItemRef ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= 'label=' ( ( (lv_label_5_1= RULE_ID | lv_label_5_2= RULE_STRING ) ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (otherlv_6= 'icon=' ( (lv_icon_7_0= ruleIcon ) ) )? (otherlv_8= 'separator=' ( (lv_separator_9_0= RULE_STRING ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= 'labelcolor=[' ( ( (lv_LabelColor_11_0= ruleColorArray ) ) (otherlv_12= ',' ( (lv_LabelColor_13_0= ruleColorArray ) ) )* otherlv_14= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_15= 'valuecolor=[' ( ( (lv_ValueColor_16_0= ruleColorArray ) ) (otherlv_17= ',' ( (lv_ValueColor_18_0= ruleColorArray ) ) )* otherlv_19= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_20= 'visibility=[' ( ( (lv_Visibility_21_0= ruleVisibilityRule ) ) (otherlv_22= ',' ( (lv_Visibility_23_0= ruleVisibilityRule ) ) )* otherlv_24= ']' ) ) ) ) ) )+ {...}?) ) ) ) ;
    public final EObject ruleList() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_2=null;
        Token otherlv_4=null;
        Token lv_label_5_1=null;
        Token lv_label_5_2=null;
        Token otherlv_6=null;
        Token otherlv_8=null;
        Token lv_separator_9_0=null;
        Token otherlv_10=null;
        Token otherlv_12=null;
        Token otherlv_14=null;
        Token otherlv_15=null;
        Token otherlv_17=null;
        Token otherlv_19=null;
        Token otherlv_20=null;
        Token otherlv_22=null;
        Token otherlv_24=null;
        AntlrDatatypeRuleToken lv_item_3_0 = null;

        AntlrDatatypeRuleToken lv_icon_7_0 = null;

        EObject lv_LabelColor_11_0 = null;

        EObject lv_LabelColor_13_0 = null;

        EObject lv_ValueColor_16_0 = null;

        EObject lv_ValueColor_18_0 = null;

        EObject lv_Visibility_21_0 = null;

        EObject lv_Visibility_23_0 = null;


         enterRule(); 
            
        try {
            // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4435:28: ( (otherlv_0= 'List' ( ( ( ( ({...}? => ( ({...}? => (otherlv_2= 'item=' ( (lv_item_3_0= ruleItemRef ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= 'label=' ( ( (lv_label_5_1= RULE_ID | lv_label_5_2= RULE_STRING ) ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (otherlv_6= 'icon=' ( (lv_icon_7_0= ruleIcon ) ) )? (otherlv_8= 'separator=' ( (lv_separator_9_0= RULE_STRING ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= 'labelcolor=[' ( ( (lv_LabelColor_11_0= ruleColorArray ) ) (otherlv_12= ',' ( (lv_LabelColor_13_0= ruleColorArray ) ) )* otherlv_14= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_15= 'valuecolor=[' ( ( (lv_ValueColor_16_0= ruleColorArray ) ) (otherlv_17= ',' ( (lv_ValueColor_18_0= ruleColorArray ) ) )* otherlv_19= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_20= 'visibility=[' ( ( (lv_Visibility_21_0= ruleVisibilityRule ) ) (otherlv_22= ',' ( (lv_Visibility_23_0= ruleVisibilityRule ) ) )* otherlv_24= ']' ) ) ) ) ) )+ {...}?) ) ) ) )
            // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4436:1: (otherlv_0= 'List' ( ( ( ( ({...}? => ( ({...}? => (otherlv_2= 'item=' ( (lv_item_3_0= ruleItemRef ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= 'label=' ( ( (lv_label_5_1= RULE_ID | lv_label_5_2= RULE_STRING ) ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (otherlv_6= 'icon=' ( (lv_icon_7_0= ruleIcon ) ) )? (otherlv_8= 'separator=' ( (lv_separator_9_0= RULE_STRING ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= 'labelcolor=[' ( ( (lv_LabelColor_11_0= ruleColorArray ) ) (otherlv_12= ',' ( (lv_LabelColor_13_0= ruleColorArray ) ) )* otherlv_14= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_15= 'valuecolor=[' ( ( (lv_ValueColor_16_0= ruleColorArray ) ) (otherlv_17= ',' ( (lv_ValueColor_18_0= ruleColorArray ) ) )* otherlv_19= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_20= 'visibility=[' ( ( (lv_Visibility_21_0= ruleVisibilityRule ) ) (otherlv_22= ',' ( (lv_Visibility_23_0= ruleVisibilityRule ) ) )* otherlv_24= ']' ) ) ) ) ) )+ {...}?) ) ) )
            {
            // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4436:1: (otherlv_0= 'List' ( ( ( ( ({...}? => ( ({...}? => (otherlv_2= 'item=' ( (lv_item_3_0= ruleItemRef ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= 'label=' ( ( (lv_label_5_1= RULE_ID | lv_label_5_2= RULE_STRING ) ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (otherlv_6= 'icon=' ( (lv_icon_7_0= ruleIcon ) ) )? (otherlv_8= 'separator=' ( (lv_separator_9_0= RULE_STRING ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= 'labelcolor=[' ( ( (lv_LabelColor_11_0= ruleColorArray ) ) (otherlv_12= ',' ( (lv_LabelColor_13_0= ruleColorArray ) ) )* otherlv_14= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_15= 'valuecolor=[' ( ( (lv_ValueColor_16_0= ruleColorArray ) ) (otherlv_17= ',' ( (lv_ValueColor_18_0= ruleColorArray ) ) )* otherlv_19= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_20= 'visibility=[' ( ( (lv_Visibility_21_0= ruleVisibilityRule ) ) (otherlv_22= ',' ( (lv_Visibility_23_0= ruleVisibilityRule ) ) )* otherlv_24= ']' ) ) ) ) ) )+ {...}?) ) ) )
            // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4436:3: otherlv_0= 'List' ( ( ( ( ({...}? => ( ({...}? => (otherlv_2= 'item=' ( (lv_item_3_0= ruleItemRef ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= 'label=' ( ( (lv_label_5_1= RULE_ID | lv_label_5_2= RULE_STRING ) ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (otherlv_6= 'icon=' ( (lv_icon_7_0= ruleIcon ) ) )? (otherlv_8= 'separator=' ( (lv_separator_9_0= RULE_STRING ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= 'labelcolor=[' ( ( (lv_LabelColor_11_0= ruleColorArray ) ) (otherlv_12= ',' ( (lv_LabelColor_13_0= ruleColorArray ) ) )* otherlv_14= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_15= 'valuecolor=[' ( ( (lv_ValueColor_16_0= ruleColorArray ) ) (otherlv_17= ',' ( (lv_ValueColor_18_0= ruleColorArray ) ) )* otherlv_19= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_20= 'visibility=[' ( ( (lv_Visibility_21_0= ruleVisibilityRule ) ) (otherlv_22= ',' ( (lv_Visibility_23_0= ruleVisibilityRule ) ) )* otherlv_24= ']' ) ) ) ) ) )+ {...}?) ) )
            {
            otherlv_0=(Token)match(input,43,FOLLOW_43_in_ruleList10794); 

                	newLeafNode(otherlv_0, grammarAccess.getListAccess().getListKeyword_0());
                
            // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4440:1: ( ( ( ( ({...}? => ( ({...}? => (otherlv_2= 'item=' ( (lv_item_3_0= ruleItemRef ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= 'label=' ( ( (lv_label_5_1= RULE_ID | lv_label_5_2= RULE_STRING ) ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (otherlv_6= 'icon=' ( (lv_icon_7_0= ruleIcon ) ) )? (otherlv_8= 'separator=' ( (lv_separator_9_0= RULE_STRING ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= 'labelcolor=[' ( ( (lv_LabelColor_11_0= ruleColorArray ) ) (otherlv_12= ',' ( (lv_LabelColor_13_0= ruleColorArray ) ) )* otherlv_14= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_15= 'valuecolor=[' ( ( (lv_ValueColor_16_0= ruleColorArray ) ) (otherlv_17= ',' ( (lv_ValueColor_18_0= ruleColorArray ) ) )* otherlv_19= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_20= 'visibility=[' ( ( (lv_Visibility_21_0= ruleVisibilityRule ) ) (otherlv_22= ',' ( (lv_Visibility_23_0= ruleVisibilityRule ) ) )* otherlv_24= ']' ) ) ) ) ) )+ {...}?) ) )
            // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4442:1: ( ( ( ({...}? => ( ({...}? => (otherlv_2= 'item=' ( (lv_item_3_0= ruleItemRef ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= 'label=' ( ( (lv_label_5_1= RULE_ID | lv_label_5_2= RULE_STRING ) ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (otherlv_6= 'icon=' ( (lv_icon_7_0= ruleIcon ) ) )? (otherlv_8= 'separator=' ( (lv_separator_9_0= RULE_STRING ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= 'labelcolor=[' ( ( (lv_LabelColor_11_0= ruleColorArray ) ) (otherlv_12= ',' ( (lv_LabelColor_13_0= ruleColorArray ) ) )* otherlv_14= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_15= 'valuecolor=[' ( ( (lv_ValueColor_16_0= ruleColorArray ) ) (otherlv_17= ',' ( (lv_ValueColor_18_0= ruleColorArray ) ) )* otherlv_19= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_20= 'visibility=[' ( ( (lv_Visibility_21_0= ruleVisibilityRule ) ) (otherlv_22= ',' ( (lv_Visibility_23_0= ruleVisibilityRule ) ) )* otherlv_24= ']' ) ) ) ) ) )+ {...}?) )
            {
            // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4442:1: ( ( ( ({...}? => ( ({...}? => (otherlv_2= 'item=' ( (lv_item_3_0= ruleItemRef ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= 'label=' ( ( (lv_label_5_1= RULE_ID | lv_label_5_2= RULE_STRING ) ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (otherlv_6= 'icon=' ( (lv_icon_7_0= ruleIcon ) ) )? (otherlv_8= 'separator=' ( (lv_separator_9_0= RULE_STRING ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= 'labelcolor=[' ( ( (lv_LabelColor_11_0= ruleColorArray ) ) (otherlv_12= ',' ( (lv_LabelColor_13_0= ruleColorArray ) ) )* otherlv_14= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_15= 'valuecolor=[' ( ( (lv_ValueColor_16_0= ruleColorArray ) ) (otherlv_17= ',' ( (lv_ValueColor_18_0= ruleColorArray ) ) )* otherlv_19= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_20= 'visibility=[' ( ( (lv_Visibility_21_0= ruleVisibilityRule ) ) (otherlv_22= ',' ( (lv_Visibility_23_0= ruleVisibilityRule ) ) )* otherlv_24= ']' ) ) ) ) ) )+ {...}?) )
            // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4443:2: ( ( ({...}? => ( ({...}? => (otherlv_2= 'item=' ( (lv_item_3_0= ruleItemRef ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= 'label=' ( ( (lv_label_5_1= RULE_ID | lv_label_5_2= RULE_STRING ) ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (otherlv_6= 'icon=' ( (lv_icon_7_0= ruleIcon ) ) )? (otherlv_8= 'separator=' ( (lv_separator_9_0= RULE_STRING ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= 'labelcolor=[' ( ( (lv_LabelColor_11_0= ruleColorArray ) ) (otherlv_12= ',' ( (lv_LabelColor_13_0= ruleColorArray ) ) )* otherlv_14= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_15= 'valuecolor=[' ( ( (lv_ValueColor_16_0= ruleColorArray ) ) (otherlv_17= ',' ( (lv_ValueColor_18_0= ruleColorArray ) ) )* otherlv_19= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_20= 'visibility=[' ( ( (lv_Visibility_21_0= ruleVisibilityRule ) ) (otherlv_22= ',' ( (lv_Visibility_23_0= ruleVisibilityRule ) ) )* otherlv_24= ']' ) ) ) ) ) )+ {...}?)
            {
             
            	  getUnorderedGroupHelper().enter(grammarAccess.getListAccess().getUnorderedGroup_1());
            	
            // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4446:2: ( ( ({...}? => ( ({...}? => (otherlv_2= 'item=' ( (lv_item_3_0= ruleItemRef ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= 'label=' ( ( (lv_label_5_1= RULE_ID | lv_label_5_2= RULE_STRING ) ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (otherlv_6= 'icon=' ( (lv_icon_7_0= ruleIcon ) ) )? (otherlv_8= 'separator=' ( (lv_separator_9_0= RULE_STRING ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= 'labelcolor=[' ( ( (lv_LabelColor_11_0= ruleColorArray ) ) (otherlv_12= ',' ( (lv_LabelColor_13_0= ruleColorArray ) ) )* otherlv_14= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_15= 'valuecolor=[' ( ( (lv_ValueColor_16_0= ruleColorArray ) ) (otherlv_17= ',' ( (lv_ValueColor_18_0= ruleColorArray ) ) )* otherlv_19= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_20= 'visibility=[' ( ( (lv_Visibility_21_0= ruleVisibilityRule ) ) (otherlv_22= ',' ( (lv_Visibility_23_0= ruleVisibilityRule ) ) )* otherlv_24= ']' ) ) ) ) ) )+ {...}?)
            // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4447:3: ( ({...}? => ( ({...}? => (otherlv_2= 'item=' ( (lv_item_3_0= ruleItemRef ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= 'label=' ( ( (lv_label_5_1= RULE_ID | lv_label_5_2= RULE_STRING ) ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (otherlv_6= 'icon=' ( (lv_icon_7_0= ruleIcon ) ) )? (otherlv_8= 'separator=' ( (lv_separator_9_0= RULE_STRING ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= 'labelcolor=[' ( ( (lv_LabelColor_11_0= ruleColorArray ) ) (otherlv_12= ',' ( (lv_LabelColor_13_0= ruleColorArray ) ) )* otherlv_14= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_15= 'valuecolor=[' ( ( (lv_ValueColor_16_0= ruleColorArray ) ) (otherlv_17= ',' ( (lv_ValueColor_18_0= ruleColorArray ) ) )* otherlv_19= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_20= 'visibility=[' ( ( (lv_Visibility_21_0= ruleVisibilityRule ) ) (otherlv_22= ',' ( (lv_Visibility_23_0= ruleVisibilityRule ) ) )* otherlv_24= ']' ) ) ) ) ) )+ {...}?
            {
            // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4447:3: ( ({...}? => ( ({...}? => (otherlv_2= 'item=' ( (lv_item_3_0= ruleItemRef ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= 'label=' ( ( (lv_label_5_1= RULE_ID | lv_label_5_2= RULE_STRING ) ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (otherlv_6= 'icon=' ( (lv_icon_7_0= ruleIcon ) ) )? (otherlv_8= 'separator=' ( (lv_separator_9_0= RULE_STRING ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= 'labelcolor=[' ( ( (lv_LabelColor_11_0= ruleColorArray ) ) (otherlv_12= ',' ( (lv_LabelColor_13_0= ruleColorArray ) ) )* otherlv_14= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_15= 'valuecolor=[' ( ( (lv_ValueColor_16_0= ruleColorArray ) ) (otherlv_17= ',' ( (lv_ValueColor_18_0= ruleColorArray ) ) )* otherlv_19= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_20= 'visibility=[' ( ( (lv_Visibility_21_0= ruleVisibilityRule ) ) (otherlv_22= ',' ( (lv_Visibility_23_0= ruleVisibilityRule ) ) )* otherlv_24= ']' ) ) ) ) ) )+
            int cnt67=0;
            loop67:
            do {
                int alt67=7;
                int LA67_0 = input.LA(1);

                if ( LA67_0 ==18 && getUnorderedGroupHelper().canSelect(grammarAccess.getListAccess().getUnorderedGroup_1(), 0) ) {
                    alt67=1;
                }
                else if ( LA67_0 ==13 && getUnorderedGroupHelper().canSelect(grammarAccess.getListAccess().getUnorderedGroup_1(), 1) ) {
                    alt67=2;
                }
                else if ( (LA67_0==14||LA67_0==44) && getUnorderedGroupHelper().canSelect(grammarAccess.getListAccess().getUnorderedGroup_1(), 2) ) {
                    alt67=3;
                }
                else if ( LA67_0 ==19 && getUnorderedGroupHelper().canSelect(grammarAccess.getListAccess().getUnorderedGroup_1(), 3) ) {
                    alt67=4;
                }
                else if ( LA67_0 ==22 && getUnorderedGroupHelper().canSelect(grammarAccess.getListAccess().getUnorderedGroup_1(), 4) ) {
                    alt67=5;
                }
                else if ( LA67_0 ==23 && getUnorderedGroupHelper().canSelect(grammarAccess.getListAccess().getUnorderedGroup_1(), 5) ) {
                    alt67=6;
                }


                switch (alt67) {
            	case 1 :
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4449:4: ({...}? => ( ({...}? => (otherlv_2= 'item=' ( (lv_item_3_0= ruleItemRef ) ) ) ) ) )
            	    {
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4449:4: ({...}? => ( ({...}? => (otherlv_2= 'item=' ( (lv_item_3_0= ruleItemRef ) ) ) ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4450:5: {...}? => ( ({...}? => (otherlv_2= 'item=' ( (lv_item_3_0= ruleItemRef ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getListAccess().getUnorderedGroup_1(), 0) ) {
            	        throw new FailedPredicateException(input, "ruleList", "getUnorderedGroupHelper().canSelect(grammarAccess.getListAccess().getUnorderedGroup_1(), 0)");
            	    }
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4450:101: ( ({...}? => (otherlv_2= 'item=' ( (lv_item_3_0= ruleItemRef ) ) ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4451:6: ({...}? => (otherlv_2= 'item=' ( (lv_item_3_0= ruleItemRef ) ) ) )
            	    {
            	     
            	    	 				  getUnorderedGroupHelper().select(grammarAccess.getListAccess().getUnorderedGroup_1(), 0);
            	    	 				
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4454:6: ({...}? => (otherlv_2= 'item=' ( (lv_item_3_0= ruleItemRef ) ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4454:7: {...}? => (otherlv_2= 'item=' ( (lv_item_3_0= ruleItemRef ) ) )
            	    {
            	    if ( !((true)) ) {
            	        throw new FailedPredicateException(input, "ruleList", "true");
            	    }
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4454:16: (otherlv_2= 'item=' ( (lv_item_3_0= ruleItemRef ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4454:18: otherlv_2= 'item=' ( (lv_item_3_0= ruleItemRef ) )
            	    {
            	    otherlv_2=(Token)match(input,18,FOLLOW_18_in_ruleList10852); 

            	        	newLeafNode(otherlv_2, grammarAccess.getListAccess().getItemKeyword_1_0_0());
            	        
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4458:1: ( (lv_item_3_0= ruleItemRef ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4459:1: (lv_item_3_0= ruleItemRef )
            	    {
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4459:1: (lv_item_3_0= ruleItemRef )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4460:3: lv_item_3_0= ruleItemRef
            	    {
            	     
            	    	        newCompositeNode(grammarAccess.getListAccess().getItemItemRefParserRuleCall_1_0_1_0()); 
            	    	    
            	    pushFollow(FOLLOW_ruleItemRef_in_ruleList10873);
            	    lv_item_3_0=ruleItemRef();

            	    state._fsp--;


            	    	        if (current==null) {
            	    	            current = createModelElementForParent(grammarAccess.getListRule());
            	    	        }
            	           		set(
            	           			current, 
            	           			"item",
            	            		lv_item_3_0, 
            	            		"ItemRef");
            	    	        afterParserOrEnumRuleCall();
            	    	    

            	    }


            	    }


            	    }


            	    }

            	     
            	    	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getListAccess().getUnorderedGroup_1());
            	    	 				

            	    }


            	    }


            	    }
            	    break;
            	case 2 :
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4483:4: ({...}? => ( ({...}? => (otherlv_4= 'label=' ( ( (lv_label_5_1= RULE_ID | lv_label_5_2= RULE_STRING ) ) ) ) ) ) )
            	    {
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4483:4: ({...}? => ( ({...}? => (otherlv_4= 'label=' ( ( (lv_label_5_1= RULE_ID | lv_label_5_2= RULE_STRING ) ) ) ) ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4484:5: {...}? => ( ({...}? => (otherlv_4= 'label=' ( ( (lv_label_5_1= RULE_ID | lv_label_5_2= RULE_STRING ) ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getListAccess().getUnorderedGroup_1(), 1) ) {
            	        throw new FailedPredicateException(input, "ruleList", "getUnorderedGroupHelper().canSelect(grammarAccess.getListAccess().getUnorderedGroup_1(), 1)");
            	    }
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4484:101: ( ({...}? => (otherlv_4= 'label=' ( ( (lv_label_5_1= RULE_ID | lv_label_5_2= RULE_STRING ) ) ) ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4485:6: ({...}? => (otherlv_4= 'label=' ( ( (lv_label_5_1= RULE_ID | lv_label_5_2= RULE_STRING ) ) ) ) )
            	    {
            	     
            	    	 				  getUnorderedGroupHelper().select(grammarAccess.getListAccess().getUnorderedGroup_1(), 1);
            	    	 				
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4488:6: ({...}? => (otherlv_4= 'label=' ( ( (lv_label_5_1= RULE_ID | lv_label_5_2= RULE_STRING ) ) ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4488:7: {...}? => (otherlv_4= 'label=' ( ( (lv_label_5_1= RULE_ID | lv_label_5_2= RULE_STRING ) ) ) )
            	    {
            	    if ( !((true)) ) {
            	        throw new FailedPredicateException(input, "ruleList", "true");
            	    }
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4488:16: (otherlv_4= 'label=' ( ( (lv_label_5_1= RULE_ID | lv_label_5_2= RULE_STRING ) ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4488:18: otherlv_4= 'label=' ( ( (lv_label_5_1= RULE_ID | lv_label_5_2= RULE_STRING ) ) )
            	    {
            	    otherlv_4=(Token)match(input,13,FOLLOW_13_in_ruleList10941); 

            	        	newLeafNode(otherlv_4, grammarAccess.getListAccess().getLabelKeyword_1_1_0());
            	        
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4492:1: ( ( (lv_label_5_1= RULE_ID | lv_label_5_2= RULE_STRING ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4493:1: ( (lv_label_5_1= RULE_ID | lv_label_5_2= RULE_STRING ) )
            	    {
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4493:1: ( (lv_label_5_1= RULE_ID | lv_label_5_2= RULE_STRING ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4494:1: (lv_label_5_1= RULE_ID | lv_label_5_2= RULE_STRING )
            	    {
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4494:1: (lv_label_5_1= RULE_ID | lv_label_5_2= RULE_STRING )
            	    int alt62=2;
            	    int LA62_0 = input.LA(1);

            	    if ( (LA62_0==RULE_ID) ) {
            	        alt62=1;
            	    }
            	    else if ( (LA62_0==RULE_STRING) ) {
            	        alt62=2;
            	    }
            	    else {
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 62, 0, input);

            	        throw nvae;
            	    }
            	    switch (alt62) {
            	        case 1 :
            	            // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4495:3: lv_label_5_1= RULE_ID
            	            {
            	            lv_label_5_1=(Token)match(input,RULE_ID,FOLLOW_RULE_ID_in_ruleList10960); 

            	            			newLeafNode(lv_label_5_1, grammarAccess.getListAccess().getLabelIDTerminalRuleCall_1_1_1_0_0()); 
            	            		

            	            	        if (current==null) {
            	            	            current = createModelElement(grammarAccess.getListRule());
            	            	        }
            	                   		setWithLastConsumed(
            	                   			current, 
            	                   			"label",
            	                    		lv_label_5_1, 
            	                    		"ID");
            	            	    

            	            }
            	            break;
            	        case 2 :
            	            // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4510:8: lv_label_5_2= RULE_STRING
            	            {
            	            lv_label_5_2=(Token)match(input,RULE_STRING,FOLLOW_RULE_STRING_in_ruleList10980); 

            	            			newLeafNode(lv_label_5_2, grammarAccess.getListAccess().getLabelSTRINGTerminalRuleCall_1_1_1_0_1()); 
            	            		

            	            	        if (current==null) {
            	            	            current = createModelElement(grammarAccess.getListRule());
            	            	        }
            	                   		setWithLastConsumed(
            	                   			current, 
            	                   			"label",
            	                    		lv_label_5_2, 
            	                    		"STRING");
            	            	    

            	            }
            	            break;

            	    }


            	    }


            	    }


            	    }


            	    }

            	     
            	    	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getListAccess().getUnorderedGroup_1());
            	    	 				

            	    }


            	    }


            	    }
            	    break;
            	case 3 :
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4535:4: ({...}? => ( ({...}? => ( (otherlv_6= 'icon=' ( (lv_icon_7_0= ruleIcon ) ) )? (otherlv_8= 'separator=' ( (lv_separator_9_0= RULE_STRING ) ) ) ) ) ) )
            	    {
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4535:4: ({...}? => ( ({...}? => ( (otherlv_6= 'icon=' ( (lv_icon_7_0= ruleIcon ) ) )? (otherlv_8= 'separator=' ( (lv_separator_9_0= RULE_STRING ) ) ) ) ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4536:5: {...}? => ( ({...}? => ( (otherlv_6= 'icon=' ( (lv_icon_7_0= ruleIcon ) ) )? (otherlv_8= 'separator=' ( (lv_separator_9_0= RULE_STRING ) ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getListAccess().getUnorderedGroup_1(), 2) ) {
            	        throw new FailedPredicateException(input, "ruleList", "getUnorderedGroupHelper().canSelect(grammarAccess.getListAccess().getUnorderedGroup_1(), 2)");
            	    }
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4536:101: ( ({...}? => ( (otherlv_6= 'icon=' ( (lv_icon_7_0= ruleIcon ) ) )? (otherlv_8= 'separator=' ( (lv_separator_9_0= RULE_STRING ) ) ) ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4537:6: ({...}? => ( (otherlv_6= 'icon=' ( (lv_icon_7_0= ruleIcon ) ) )? (otherlv_8= 'separator=' ( (lv_separator_9_0= RULE_STRING ) ) ) ) )
            	    {
            	     
            	    	 				  getUnorderedGroupHelper().select(grammarAccess.getListAccess().getUnorderedGroup_1(), 2);
            	    	 				
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4540:6: ({...}? => ( (otherlv_6= 'icon=' ( (lv_icon_7_0= ruleIcon ) ) )? (otherlv_8= 'separator=' ( (lv_separator_9_0= RULE_STRING ) ) ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4540:7: {...}? => ( (otherlv_6= 'icon=' ( (lv_icon_7_0= ruleIcon ) ) )? (otherlv_8= 'separator=' ( (lv_separator_9_0= RULE_STRING ) ) ) )
            	    {
            	    if ( !((true)) ) {
            	        throw new FailedPredicateException(input, "ruleList", "true");
            	    }
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4540:16: ( (otherlv_6= 'icon=' ( (lv_icon_7_0= ruleIcon ) ) )? (otherlv_8= 'separator=' ( (lv_separator_9_0= RULE_STRING ) ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4540:17: (otherlv_6= 'icon=' ( (lv_icon_7_0= ruleIcon ) ) )? (otherlv_8= 'separator=' ( (lv_separator_9_0= RULE_STRING ) ) )
            	    {
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4540:17: (otherlv_6= 'icon=' ( (lv_icon_7_0= ruleIcon ) ) )?
            	    int alt63=2;
            	    int LA63_0 = input.LA(1);

            	    if ( (LA63_0==14) ) {
            	        alt63=1;
            	    }
            	    switch (alt63) {
            	        case 1 :
            	            // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4540:19: otherlv_6= 'icon=' ( (lv_icon_7_0= ruleIcon ) )
            	            {
            	            otherlv_6=(Token)match(input,14,FOLLOW_14_in_ruleList11057); 

            	                	newLeafNode(otherlv_6, grammarAccess.getListAccess().getIconKeyword_1_2_0_0());
            	                
            	            // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4544:1: ( (lv_icon_7_0= ruleIcon ) )
            	            // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4545:1: (lv_icon_7_0= ruleIcon )
            	            {
            	            // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4545:1: (lv_icon_7_0= ruleIcon )
            	            // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4546:3: lv_icon_7_0= ruleIcon
            	            {
            	             
            	            	        newCompositeNode(grammarAccess.getListAccess().getIconIconParserRuleCall_1_2_0_1_0()); 
            	            	    
            	            pushFollow(FOLLOW_ruleIcon_in_ruleList11078);
            	            lv_icon_7_0=ruleIcon();

            	            state._fsp--;


            	            	        if (current==null) {
            	            	            current = createModelElementForParent(grammarAccess.getListRule());
            	            	        }
            	                   		set(
            	                   			current, 
            	                   			"icon",
            	                    		lv_icon_7_0, 
            	                    		"Icon");
            	            	        afterParserOrEnumRuleCall();
            	            	    

            	            }


            	            }


            	            }
            	            break;

            	    }

            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4562:4: (otherlv_8= 'separator=' ( (lv_separator_9_0= RULE_STRING ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4562:6: otherlv_8= 'separator=' ( (lv_separator_9_0= RULE_STRING ) )
            	    {
            	    otherlv_8=(Token)match(input,44,FOLLOW_44_in_ruleList11093); 

            	        	newLeafNode(otherlv_8, grammarAccess.getListAccess().getSeparatorKeyword_1_2_1_0());
            	        
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4566:1: ( (lv_separator_9_0= RULE_STRING ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4567:1: (lv_separator_9_0= RULE_STRING )
            	    {
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4567:1: (lv_separator_9_0= RULE_STRING )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4568:3: lv_separator_9_0= RULE_STRING
            	    {
            	    lv_separator_9_0=(Token)match(input,RULE_STRING,FOLLOW_RULE_STRING_in_ruleList11110); 

            	    			newLeafNode(lv_separator_9_0, grammarAccess.getListAccess().getSeparatorSTRINGTerminalRuleCall_1_2_1_1_0()); 
            	    		

            	    	        if (current==null) {
            	    	            current = createModelElement(grammarAccess.getListRule());
            	    	        }
            	           		setWithLastConsumed(
            	           			current, 
            	           			"separator",
            	            		lv_separator_9_0, 
            	            		"STRING");
            	    	    

            	    }


            	    }


            	    }


            	    }


            	    }

            	     
            	    	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getListAccess().getUnorderedGroup_1());
            	    	 				

            	    }


            	    }


            	    }
            	    break;
            	case 4 :
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4591:4: ({...}? => ( ({...}? => (otherlv_10= 'labelcolor=[' ( ( (lv_LabelColor_11_0= ruleColorArray ) ) (otherlv_12= ',' ( (lv_LabelColor_13_0= ruleColorArray ) ) )* otherlv_14= ']' ) ) ) ) )
            	    {
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4591:4: ({...}? => ( ({...}? => (otherlv_10= 'labelcolor=[' ( ( (lv_LabelColor_11_0= ruleColorArray ) ) (otherlv_12= ',' ( (lv_LabelColor_13_0= ruleColorArray ) ) )* otherlv_14= ']' ) ) ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4592:5: {...}? => ( ({...}? => (otherlv_10= 'labelcolor=[' ( ( (lv_LabelColor_11_0= ruleColorArray ) ) (otherlv_12= ',' ( (lv_LabelColor_13_0= ruleColorArray ) ) )* otherlv_14= ']' ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getListAccess().getUnorderedGroup_1(), 3) ) {
            	        throw new FailedPredicateException(input, "ruleList", "getUnorderedGroupHelper().canSelect(grammarAccess.getListAccess().getUnorderedGroup_1(), 3)");
            	    }
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4592:101: ( ({...}? => (otherlv_10= 'labelcolor=[' ( ( (lv_LabelColor_11_0= ruleColorArray ) ) (otherlv_12= ',' ( (lv_LabelColor_13_0= ruleColorArray ) ) )* otherlv_14= ']' ) ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4593:6: ({...}? => (otherlv_10= 'labelcolor=[' ( ( (lv_LabelColor_11_0= ruleColorArray ) ) (otherlv_12= ',' ( (lv_LabelColor_13_0= ruleColorArray ) ) )* otherlv_14= ']' ) ) )
            	    {
            	     
            	    	 				  getUnorderedGroupHelper().select(grammarAccess.getListAccess().getUnorderedGroup_1(), 3);
            	    	 				
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4596:6: ({...}? => (otherlv_10= 'labelcolor=[' ( ( (lv_LabelColor_11_0= ruleColorArray ) ) (otherlv_12= ',' ( (lv_LabelColor_13_0= ruleColorArray ) ) )* otherlv_14= ']' ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4596:7: {...}? => (otherlv_10= 'labelcolor=[' ( ( (lv_LabelColor_11_0= ruleColorArray ) ) (otherlv_12= ',' ( (lv_LabelColor_13_0= ruleColorArray ) ) )* otherlv_14= ']' ) )
            	    {
            	    if ( !((true)) ) {
            	        throw new FailedPredicateException(input, "ruleList", "true");
            	    }
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4596:16: (otherlv_10= 'labelcolor=[' ( ( (lv_LabelColor_11_0= ruleColorArray ) ) (otherlv_12= ',' ( (lv_LabelColor_13_0= ruleColorArray ) ) )* otherlv_14= ']' ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4596:18: otherlv_10= 'labelcolor=[' ( ( (lv_LabelColor_11_0= ruleColorArray ) ) (otherlv_12= ',' ( (lv_LabelColor_13_0= ruleColorArray ) ) )* otherlv_14= ']' )
            	    {
            	    otherlv_10=(Token)match(input,19,FOLLOW_19_in_ruleList11184); 

            	        	newLeafNode(otherlv_10, grammarAccess.getListAccess().getLabelcolorKeyword_1_3_0());
            	        
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4600:1: ( ( (lv_LabelColor_11_0= ruleColorArray ) ) (otherlv_12= ',' ( (lv_LabelColor_13_0= ruleColorArray ) ) )* otherlv_14= ']' )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4600:2: ( (lv_LabelColor_11_0= ruleColorArray ) ) (otherlv_12= ',' ( (lv_LabelColor_13_0= ruleColorArray ) ) )* otherlv_14= ']'
            	    {
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4600:2: ( (lv_LabelColor_11_0= ruleColorArray ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4601:1: (lv_LabelColor_11_0= ruleColorArray )
            	    {
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4601:1: (lv_LabelColor_11_0= ruleColorArray )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4602:3: lv_LabelColor_11_0= ruleColorArray
            	    {
            	     
            	    	        newCompositeNode(grammarAccess.getListAccess().getLabelColorColorArrayParserRuleCall_1_3_1_0_0()); 
            	    	    
            	    pushFollow(FOLLOW_ruleColorArray_in_ruleList11206);
            	    lv_LabelColor_11_0=ruleColorArray();

            	    state._fsp--;


            	    	        if (current==null) {
            	    	            current = createModelElementForParent(grammarAccess.getListRule());
            	    	        }
            	           		add(
            	           			current, 
            	           			"LabelColor",
            	            		lv_LabelColor_11_0, 
            	            		"ColorArray");
            	    	        afterParserOrEnumRuleCall();
            	    	    

            	    }


            	    }

            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4618:2: (otherlv_12= ',' ( (lv_LabelColor_13_0= ruleColorArray ) ) )*
            	    loop64:
            	    do {
            	        int alt64=2;
            	        int LA64_0 = input.LA(1);

            	        if ( (LA64_0==20) ) {
            	            alt64=1;
            	        }


            	        switch (alt64) {
            	    	case 1 :
            	    	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4618:4: otherlv_12= ',' ( (lv_LabelColor_13_0= ruleColorArray ) )
            	    	    {
            	    	    otherlv_12=(Token)match(input,20,FOLLOW_20_in_ruleList11219); 

            	    	        	newLeafNode(otherlv_12, grammarAccess.getListAccess().getCommaKeyword_1_3_1_1_0());
            	    	        
            	    	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4622:1: ( (lv_LabelColor_13_0= ruleColorArray ) )
            	    	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4623:1: (lv_LabelColor_13_0= ruleColorArray )
            	    	    {
            	    	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4623:1: (lv_LabelColor_13_0= ruleColorArray )
            	    	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4624:3: lv_LabelColor_13_0= ruleColorArray
            	    	    {
            	    	     
            	    	    	        newCompositeNode(grammarAccess.getListAccess().getLabelColorColorArrayParserRuleCall_1_3_1_1_1_0()); 
            	    	    	    
            	    	    pushFollow(FOLLOW_ruleColorArray_in_ruleList11240);
            	    	    lv_LabelColor_13_0=ruleColorArray();

            	    	    state._fsp--;


            	    	    	        if (current==null) {
            	    	    	            current = createModelElementForParent(grammarAccess.getListRule());
            	    	    	        }
            	    	           		add(
            	    	           			current, 
            	    	           			"LabelColor",
            	    	            		lv_LabelColor_13_0, 
            	    	            		"ColorArray");
            	    	    	        afterParserOrEnumRuleCall();
            	    	    	    

            	    	    }


            	    	    }


            	    	    }
            	    	    break;

            	    	default :
            	    	    break loop64;
            	        }
            	    } while (true);

            	    otherlv_14=(Token)match(input,21,FOLLOW_21_in_ruleList11254); 

            	        	newLeafNode(otherlv_14, grammarAccess.getListAccess().getRightSquareBracketKeyword_1_3_1_2());
            	        

            	    }


            	    }


            	    }

            	     
            	    	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getListAccess().getUnorderedGroup_1());
            	    	 				

            	    }


            	    }


            	    }
            	    break;
            	case 5 :
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4651:4: ({...}? => ( ({...}? => (otherlv_15= 'valuecolor=[' ( ( (lv_ValueColor_16_0= ruleColorArray ) ) (otherlv_17= ',' ( (lv_ValueColor_18_0= ruleColorArray ) ) )* otherlv_19= ']' ) ) ) ) )
            	    {
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4651:4: ({...}? => ( ({...}? => (otherlv_15= 'valuecolor=[' ( ( (lv_ValueColor_16_0= ruleColorArray ) ) (otherlv_17= ',' ( (lv_ValueColor_18_0= ruleColorArray ) ) )* otherlv_19= ']' ) ) ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4652:5: {...}? => ( ({...}? => (otherlv_15= 'valuecolor=[' ( ( (lv_ValueColor_16_0= ruleColorArray ) ) (otherlv_17= ',' ( (lv_ValueColor_18_0= ruleColorArray ) ) )* otherlv_19= ']' ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getListAccess().getUnorderedGroup_1(), 4) ) {
            	        throw new FailedPredicateException(input, "ruleList", "getUnorderedGroupHelper().canSelect(grammarAccess.getListAccess().getUnorderedGroup_1(), 4)");
            	    }
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4652:101: ( ({...}? => (otherlv_15= 'valuecolor=[' ( ( (lv_ValueColor_16_0= ruleColorArray ) ) (otherlv_17= ',' ( (lv_ValueColor_18_0= ruleColorArray ) ) )* otherlv_19= ']' ) ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4653:6: ({...}? => (otherlv_15= 'valuecolor=[' ( ( (lv_ValueColor_16_0= ruleColorArray ) ) (otherlv_17= ',' ( (lv_ValueColor_18_0= ruleColorArray ) ) )* otherlv_19= ']' ) ) )
            	    {
            	     
            	    	 				  getUnorderedGroupHelper().select(grammarAccess.getListAccess().getUnorderedGroup_1(), 4);
            	    	 				
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4656:6: ({...}? => (otherlv_15= 'valuecolor=[' ( ( (lv_ValueColor_16_0= ruleColorArray ) ) (otherlv_17= ',' ( (lv_ValueColor_18_0= ruleColorArray ) ) )* otherlv_19= ']' ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4656:7: {...}? => (otherlv_15= 'valuecolor=[' ( ( (lv_ValueColor_16_0= ruleColorArray ) ) (otherlv_17= ',' ( (lv_ValueColor_18_0= ruleColorArray ) ) )* otherlv_19= ']' ) )
            	    {
            	    if ( !((true)) ) {
            	        throw new FailedPredicateException(input, "ruleList", "true");
            	    }
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4656:16: (otherlv_15= 'valuecolor=[' ( ( (lv_ValueColor_16_0= ruleColorArray ) ) (otherlv_17= ',' ( (lv_ValueColor_18_0= ruleColorArray ) ) )* otherlv_19= ']' ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4656:18: otherlv_15= 'valuecolor=[' ( ( (lv_ValueColor_16_0= ruleColorArray ) ) (otherlv_17= ',' ( (lv_ValueColor_18_0= ruleColorArray ) ) )* otherlv_19= ']' )
            	    {
            	    otherlv_15=(Token)match(input,22,FOLLOW_22_in_ruleList11323); 

            	        	newLeafNode(otherlv_15, grammarAccess.getListAccess().getValuecolorKeyword_1_4_0());
            	        
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4660:1: ( ( (lv_ValueColor_16_0= ruleColorArray ) ) (otherlv_17= ',' ( (lv_ValueColor_18_0= ruleColorArray ) ) )* otherlv_19= ']' )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4660:2: ( (lv_ValueColor_16_0= ruleColorArray ) ) (otherlv_17= ',' ( (lv_ValueColor_18_0= ruleColorArray ) ) )* otherlv_19= ']'
            	    {
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4660:2: ( (lv_ValueColor_16_0= ruleColorArray ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4661:1: (lv_ValueColor_16_0= ruleColorArray )
            	    {
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4661:1: (lv_ValueColor_16_0= ruleColorArray )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4662:3: lv_ValueColor_16_0= ruleColorArray
            	    {
            	     
            	    	        newCompositeNode(grammarAccess.getListAccess().getValueColorColorArrayParserRuleCall_1_4_1_0_0()); 
            	    	    
            	    pushFollow(FOLLOW_ruleColorArray_in_ruleList11345);
            	    lv_ValueColor_16_0=ruleColorArray();

            	    state._fsp--;


            	    	        if (current==null) {
            	    	            current = createModelElementForParent(grammarAccess.getListRule());
            	    	        }
            	           		add(
            	           			current, 
            	           			"ValueColor",
            	            		lv_ValueColor_16_0, 
            	            		"ColorArray");
            	    	        afterParserOrEnumRuleCall();
            	    	    

            	    }


            	    }

            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4678:2: (otherlv_17= ',' ( (lv_ValueColor_18_0= ruleColorArray ) ) )*
            	    loop65:
            	    do {
            	        int alt65=2;
            	        int LA65_0 = input.LA(1);

            	        if ( (LA65_0==20) ) {
            	            alt65=1;
            	        }


            	        switch (alt65) {
            	    	case 1 :
            	    	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4678:4: otherlv_17= ',' ( (lv_ValueColor_18_0= ruleColorArray ) )
            	    	    {
            	    	    otherlv_17=(Token)match(input,20,FOLLOW_20_in_ruleList11358); 

            	    	        	newLeafNode(otherlv_17, grammarAccess.getListAccess().getCommaKeyword_1_4_1_1_0());
            	    	        
            	    	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4682:1: ( (lv_ValueColor_18_0= ruleColorArray ) )
            	    	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4683:1: (lv_ValueColor_18_0= ruleColorArray )
            	    	    {
            	    	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4683:1: (lv_ValueColor_18_0= ruleColorArray )
            	    	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4684:3: lv_ValueColor_18_0= ruleColorArray
            	    	    {
            	    	     
            	    	    	        newCompositeNode(grammarAccess.getListAccess().getValueColorColorArrayParserRuleCall_1_4_1_1_1_0()); 
            	    	    	    
            	    	    pushFollow(FOLLOW_ruleColorArray_in_ruleList11379);
            	    	    lv_ValueColor_18_0=ruleColorArray();

            	    	    state._fsp--;


            	    	    	        if (current==null) {
            	    	    	            current = createModelElementForParent(grammarAccess.getListRule());
            	    	    	        }
            	    	           		add(
            	    	           			current, 
            	    	           			"ValueColor",
            	    	            		lv_ValueColor_18_0, 
            	    	            		"ColorArray");
            	    	    	        afterParserOrEnumRuleCall();
            	    	    	    

            	    	    }


            	    	    }


            	    	    }
            	    	    break;

            	    	default :
            	    	    break loop65;
            	        }
            	    } while (true);

            	    otherlv_19=(Token)match(input,21,FOLLOW_21_in_ruleList11393); 

            	        	newLeafNode(otherlv_19, grammarAccess.getListAccess().getRightSquareBracketKeyword_1_4_1_2());
            	        

            	    }


            	    }


            	    }

            	     
            	    	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getListAccess().getUnorderedGroup_1());
            	    	 				

            	    }


            	    }


            	    }
            	    break;
            	case 6 :
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4711:4: ({...}? => ( ({...}? => (otherlv_20= 'visibility=[' ( ( (lv_Visibility_21_0= ruleVisibilityRule ) ) (otherlv_22= ',' ( (lv_Visibility_23_0= ruleVisibilityRule ) ) )* otherlv_24= ']' ) ) ) ) )
            	    {
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4711:4: ({...}? => ( ({...}? => (otherlv_20= 'visibility=[' ( ( (lv_Visibility_21_0= ruleVisibilityRule ) ) (otherlv_22= ',' ( (lv_Visibility_23_0= ruleVisibilityRule ) ) )* otherlv_24= ']' ) ) ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4712:5: {...}? => ( ({...}? => (otherlv_20= 'visibility=[' ( ( (lv_Visibility_21_0= ruleVisibilityRule ) ) (otherlv_22= ',' ( (lv_Visibility_23_0= ruleVisibilityRule ) ) )* otherlv_24= ']' ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getListAccess().getUnorderedGroup_1(), 5) ) {
            	        throw new FailedPredicateException(input, "ruleList", "getUnorderedGroupHelper().canSelect(grammarAccess.getListAccess().getUnorderedGroup_1(), 5)");
            	    }
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4712:101: ( ({...}? => (otherlv_20= 'visibility=[' ( ( (lv_Visibility_21_0= ruleVisibilityRule ) ) (otherlv_22= ',' ( (lv_Visibility_23_0= ruleVisibilityRule ) ) )* otherlv_24= ']' ) ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4713:6: ({...}? => (otherlv_20= 'visibility=[' ( ( (lv_Visibility_21_0= ruleVisibilityRule ) ) (otherlv_22= ',' ( (lv_Visibility_23_0= ruleVisibilityRule ) ) )* otherlv_24= ']' ) ) )
            	    {
            	     
            	    	 				  getUnorderedGroupHelper().select(grammarAccess.getListAccess().getUnorderedGroup_1(), 5);
            	    	 				
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4716:6: ({...}? => (otherlv_20= 'visibility=[' ( ( (lv_Visibility_21_0= ruleVisibilityRule ) ) (otherlv_22= ',' ( (lv_Visibility_23_0= ruleVisibilityRule ) ) )* otherlv_24= ']' ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4716:7: {...}? => (otherlv_20= 'visibility=[' ( ( (lv_Visibility_21_0= ruleVisibilityRule ) ) (otherlv_22= ',' ( (lv_Visibility_23_0= ruleVisibilityRule ) ) )* otherlv_24= ']' ) )
            	    {
            	    if ( !((true)) ) {
            	        throw new FailedPredicateException(input, "ruleList", "true");
            	    }
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4716:16: (otherlv_20= 'visibility=[' ( ( (lv_Visibility_21_0= ruleVisibilityRule ) ) (otherlv_22= ',' ( (lv_Visibility_23_0= ruleVisibilityRule ) ) )* otherlv_24= ']' ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4716:18: otherlv_20= 'visibility=[' ( ( (lv_Visibility_21_0= ruleVisibilityRule ) ) (otherlv_22= ',' ( (lv_Visibility_23_0= ruleVisibilityRule ) ) )* otherlv_24= ']' )
            	    {
            	    otherlv_20=(Token)match(input,23,FOLLOW_23_in_ruleList11462); 

            	        	newLeafNode(otherlv_20, grammarAccess.getListAccess().getVisibilityKeyword_1_5_0());
            	        
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4720:1: ( ( (lv_Visibility_21_0= ruleVisibilityRule ) ) (otherlv_22= ',' ( (lv_Visibility_23_0= ruleVisibilityRule ) ) )* otherlv_24= ']' )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4720:2: ( (lv_Visibility_21_0= ruleVisibilityRule ) ) (otherlv_22= ',' ( (lv_Visibility_23_0= ruleVisibilityRule ) ) )* otherlv_24= ']'
            	    {
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4720:2: ( (lv_Visibility_21_0= ruleVisibilityRule ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4721:1: (lv_Visibility_21_0= ruleVisibilityRule )
            	    {
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4721:1: (lv_Visibility_21_0= ruleVisibilityRule )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4722:3: lv_Visibility_21_0= ruleVisibilityRule
            	    {
            	     
            	    	        newCompositeNode(grammarAccess.getListAccess().getVisibilityVisibilityRuleParserRuleCall_1_5_1_0_0()); 
            	    	    
            	    pushFollow(FOLLOW_ruleVisibilityRule_in_ruleList11484);
            	    lv_Visibility_21_0=ruleVisibilityRule();

            	    state._fsp--;


            	    	        if (current==null) {
            	    	            current = createModelElementForParent(grammarAccess.getListRule());
            	    	        }
            	           		add(
            	           			current, 
            	           			"Visibility",
            	            		lv_Visibility_21_0, 
            	            		"VisibilityRule");
            	    	        afterParserOrEnumRuleCall();
            	    	    

            	    }


            	    }

            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4738:2: (otherlv_22= ',' ( (lv_Visibility_23_0= ruleVisibilityRule ) ) )*
            	    loop66:
            	    do {
            	        int alt66=2;
            	        int LA66_0 = input.LA(1);

            	        if ( (LA66_0==20) ) {
            	            alt66=1;
            	        }


            	        switch (alt66) {
            	    	case 1 :
            	    	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4738:4: otherlv_22= ',' ( (lv_Visibility_23_0= ruleVisibilityRule ) )
            	    	    {
            	    	    otherlv_22=(Token)match(input,20,FOLLOW_20_in_ruleList11497); 

            	    	        	newLeafNode(otherlv_22, grammarAccess.getListAccess().getCommaKeyword_1_5_1_1_0());
            	    	        
            	    	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4742:1: ( (lv_Visibility_23_0= ruleVisibilityRule ) )
            	    	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4743:1: (lv_Visibility_23_0= ruleVisibilityRule )
            	    	    {
            	    	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4743:1: (lv_Visibility_23_0= ruleVisibilityRule )
            	    	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4744:3: lv_Visibility_23_0= ruleVisibilityRule
            	    	    {
            	    	     
            	    	    	        newCompositeNode(grammarAccess.getListAccess().getVisibilityVisibilityRuleParserRuleCall_1_5_1_1_1_0()); 
            	    	    	    
            	    	    pushFollow(FOLLOW_ruleVisibilityRule_in_ruleList11518);
            	    	    lv_Visibility_23_0=ruleVisibilityRule();

            	    	    state._fsp--;


            	    	    	        if (current==null) {
            	    	    	            current = createModelElementForParent(grammarAccess.getListRule());
            	    	    	        }
            	    	           		add(
            	    	           			current, 
            	    	           			"Visibility",
            	    	            		lv_Visibility_23_0, 
            	    	            		"VisibilityRule");
            	    	    	        afterParserOrEnumRuleCall();
            	    	    	    

            	    	    }


            	    	    }


            	    	    }
            	    	    break;

            	    	default :
            	    	    break loop66;
            	        }
            	    } while (true);

            	    otherlv_24=(Token)match(input,21,FOLLOW_21_in_ruleList11532); 

            	        	newLeafNode(otherlv_24, grammarAccess.getListAccess().getRightSquareBracketKeyword_1_5_1_2());
            	        

            	    }


            	    }


            	    }

            	     
            	    	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getListAccess().getUnorderedGroup_1());
            	    	 				

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    if ( cnt67 >= 1 ) break loop67;
                        EarlyExitException eee =
                            new EarlyExitException(67, input);
                        throw eee;
                }
                cnt67++;
            } while (true);

            if ( ! getUnorderedGroupHelper().canLeave(grammarAccess.getListAccess().getUnorderedGroup_1()) ) {
                throw new FailedPredicateException(input, "ruleList", "getUnorderedGroupHelper().canLeave(grammarAccess.getListAccess().getUnorderedGroup_1())");
            }

            }


            }

             
            	  getUnorderedGroupHelper().leave(grammarAccess.getListAccess().getUnorderedGroup_1());
            	

            }


            }


            }

             leaveRule(); 
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleList"


    // $ANTLR start "entryRuleSetpoint"
    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4787:1: entryRuleSetpoint returns [EObject current=null] : iv_ruleSetpoint= ruleSetpoint EOF ;
    public final EObject entryRuleSetpoint() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleSetpoint = null;


        try {
            // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4788:2: (iv_ruleSetpoint= ruleSetpoint EOF )
            // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4789:2: iv_ruleSetpoint= ruleSetpoint EOF
            {
             newCompositeNode(grammarAccess.getSetpointRule()); 
            pushFollow(FOLLOW_ruleSetpoint_in_entryRuleSetpoint11616);
            iv_ruleSetpoint=ruleSetpoint();

            state._fsp--;

             current =iv_ruleSetpoint; 
            match(input,EOF,FOLLOW_EOF_in_entryRuleSetpoint11626); 

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleSetpoint"


    // $ANTLR start "ruleSetpoint"
    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4796:1: ruleSetpoint returns [EObject current=null] : (otherlv_0= 'Setpoint' ( ( ( ( ({...}? => ( ({...}? => (otherlv_2= 'item=' ( (lv_item_3_0= ruleItemRef ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= 'label=' ( ( (lv_label_5_1= RULE_ID | lv_label_5_2= RULE_STRING ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= 'icon=' ( (lv_icon_7_0= ruleIcon ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_8= 'minValue=' ( (lv_minValue_9_0= ruleNumber ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= 'maxValue=' ( (lv_maxValue_11_0= ruleNumber ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_12= 'step=' ( (lv_step_13_0= ruleNumber ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= 'labelcolor=[' ( ( (lv_LabelColor_15_0= ruleColorArray ) ) (otherlv_16= ',' ( (lv_LabelColor_17_0= ruleColorArray ) ) )* otherlv_18= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_19= 'valuecolor=[' ( ( (lv_ValueColor_20_0= ruleColorArray ) ) (otherlv_21= ',' ( (lv_ValueColor_22_0= ruleColorArray ) ) )* otherlv_23= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_24= 'visibility=[' ( ( (lv_Visibility_25_0= ruleVisibilityRule ) ) (otherlv_26= ',' ( (lv_Visibility_27_0= ruleVisibilityRule ) ) )* otherlv_28= ']' ) ) ) ) ) )+ {...}?) ) ) ) ;
    public final EObject ruleSetpoint() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_2=null;
        Token otherlv_4=null;
        Token lv_label_5_1=null;
        Token lv_label_5_2=null;
        Token otherlv_6=null;
        Token otherlv_8=null;
        Token otherlv_10=null;
        Token otherlv_12=null;
        Token otherlv_14=null;
        Token otherlv_16=null;
        Token otherlv_18=null;
        Token otherlv_19=null;
        Token otherlv_21=null;
        Token otherlv_23=null;
        Token otherlv_24=null;
        Token otherlv_26=null;
        Token otherlv_28=null;
        AntlrDatatypeRuleToken lv_item_3_0 = null;

        AntlrDatatypeRuleToken lv_icon_7_0 = null;

        AntlrDatatypeRuleToken lv_minValue_9_0 = null;

        AntlrDatatypeRuleToken lv_maxValue_11_0 = null;

        AntlrDatatypeRuleToken lv_step_13_0 = null;

        EObject lv_LabelColor_15_0 = null;

        EObject lv_LabelColor_17_0 = null;

        EObject lv_ValueColor_20_0 = null;

        EObject lv_ValueColor_22_0 = null;

        EObject lv_Visibility_25_0 = null;

        EObject lv_Visibility_27_0 = null;


         enterRule(); 
            
        try {
            // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4799:28: ( (otherlv_0= 'Setpoint' ( ( ( ( ({...}? => ( ({...}? => (otherlv_2= 'item=' ( (lv_item_3_0= ruleItemRef ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= 'label=' ( ( (lv_label_5_1= RULE_ID | lv_label_5_2= RULE_STRING ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= 'icon=' ( (lv_icon_7_0= ruleIcon ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_8= 'minValue=' ( (lv_minValue_9_0= ruleNumber ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= 'maxValue=' ( (lv_maxValue_11_0= ruleNumber ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_12= 'step=' ( (lv_step_13_0= ruleNumber ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= 'labelcolor=[' ( ( (lv_LabelColor_15_0= ruleColorArray ) ) (otherlv_16= ',' ( (lv_LabelColor_17_0= ruleColorArray ) ) )* otherlv_18= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_19= 'valuecolor=[' ( ( (lv_ValueColor_20_0= ruleColorArray ) ) (otherlv_21= ',' ( (lv_ValueColor_22_0= ruleColorArray ) ) )* otherlv_23= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_24= 'visibility=[' ( ( (lv_Visibility_25_0= ruleVisibilityRule ) ) (otherlv_26= ',' ( (lv_Visibility_27_0= ruleVisibilityRule ) ) )* otherlv_28= ']' ) ) ) ) ) )+ {...}?) ) ) ) )
            // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4800:1: (otherlv_0= 'Setpoint' ( ( ( ( ({...}? => ( ({...}? => (otherlv_2= 'item=' ( (lv_item_3_0= ruleItemRef ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= 'label=' ( ( (lv_label_5_1= RULE_ID | lv_label_5_2= RULE_STRING ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= 'icon=' ( (lv_icon_7_0= ruleIcon ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_8= 'minValue=' ( (lv_minValue_9_0= ruleNumber ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= 'maxValue=' ( (lv_maxValue_11_0= ruleNumber ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_12= 'step=' ( (lv_step_13_0= ruleNumber ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= 'labelcolor=[' ( ( (lv_LabelColor_15_0= ruleColorArray ) ) (otherlv_16= ',' ( (lv_LabelColor_17_0= ruleColorArray ) ) )* otherlv_18= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_19= 'valuecolor=[' ( ( (lv_ValueColor_20_0= ruleColorArray ) ) (otherlv_21= ',' ( (lv_ValueColor_22_0= ruleColorArray ) ) )* otherlv_23= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_24= 'visibility=[' ( ( (lv_Visibility_25_0= ruleVisibilityRule ) ) (otherlv_26= ',' ( (lv_Visibility_27_0= ruleVisibilityRule ) ) )* otherlv_28= ']' ) ) ) ) ) )+ {...}?) ) ) )
            {
            // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4800:1: (otherlv_0= 'Setpoint' ( ( ( ( ({...}? => ( ({...}? => (otherlv_2= 'item=' ( (lv_item_3_0= ruleItemRef ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= 'label=' ( ( (lv_label_5_1= RULE_ID | lv_label_5_2= RULE_STRING ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= 'icon=' ( (lv_icon_7_0= ruleIcon ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_8= 'minValue=' ( (lv_minValue_9_0= ruleNumber ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= 'maxValue=' ( (lv_maxValue_11_0= ruleNumber ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_12= 'step=' ( (lv_step_13_0= ruleNumber ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= 'labelcolor=[' ( ( (lv_LabelColor_15_0= ruleColorArray ) ) (otherlv_16= ',' ( (lv_LabelColor_17_0= ruleColorArray ) ) )* otherlv_18= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_19= 'valuecolor=[' ( ( (lv_ValueColor_20_0= ruleColorArray ) ) (otherlv_21= ',' ( (lv_ValueColor_22_0= ruleColorArray ) ) )* otherlv_23= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_24= 'visibility=[' ( ( (lv_Visibility_25_0= ruleVisibilityRule ) ) (otherlv_26= ',' ( (lv_Visibility_27_0= ruleVisibilityRule ) ) )* otherlv_28= ']' ) ) ) ) ) )+ {...}?) ) ) )
            // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4800:3: otherlv_0= 'Setpoint' ( ( ( ( ({...}? => ( ({...}? => (otherlv_2= 'item=' ( (lv_item_3_0= ruleItemRef ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= 'label=' ( ( (lv_label_5_1= RULE_ID | lv_label_5_2= RULE_STRING ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= 'icon=' ( (lv_icon_7_0= ruleIcon ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_8= 'minValue=' ( (lv_minValue_9_0= ruleNumber ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= 'maxValue=' ( (lv_maxValue_11_0= ruleNumber ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_12= 'step=' ( (lv_step_13_0= ruleNumber ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= 'labelcolor=[' ( ( (lv_LabelColor_15_0= ruleColorArray ) ) (otherlv_16= ',' ( (lv_LabelColor_17_0= ruleColorArray ) ) )* otherlv_18= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_19= 'valuecolor=[' ( ( (lv_ValueColor_20_0= ruleColorArray ) ) (otherlv_21= ',' ( (lv_ValueColor_22_0= ruleColorArray ) ) )* otherlv_23= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_24= 'visibility=[' ( ( (lv_Visibility_25_0= ruleVisibilityRule ) ) (otherlv_26= ',' ( (lv_Visibility_27_0= ruleVisibilityRule ) ) )* otherlv_28= ']' ) ) ) ) ) )+ {...}?) ) )
            {
            otherlv_0=(Token)match(input,45,FOLLOW_45_in_ruleSetpoint11663); 

                	newLeafNode(otherlv_0, grammarAccess.getSetpointAccess().getSetpointKeyword_0());
                
            // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4804:1: ( ( ( ( ({...}? => ( ({...}? => (otherlv_2= 'item=' ( (lv_item_3_0= ruleItemRef ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= 'label=' ( ( (lv_label_5_1= RULE_ID | lv_label_5_2= RULE_STRING ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= 'icon=' ( (lv_icon_7_0= ruleIcon ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_8= 'minValue=' ( (lv_minValue_9_0= ruleNumber ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= 'maxValue=' ( (lv_maxValue_11_0= ruleNumber ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_12= 'step=' ( (lv_step_13_0= ruleNumber ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= 'labelcolor=[' ( ( (lv_LabelColor_15_0= ruleColorArray ) ) (otherlv_16= ',' ( (lv_LabelColor_17_0= ruleColorArray ) ) )* otherlv_18= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_19= 'valuecolor=[' ( ( (lv_ValueColor_20_0= ruleColorArray ) ) (otherlv_21= ',' ( (lv_ValueColor_22_0= ruleColorArray ) ) )* otherlv_23= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_24= 'visibility=[' ( ( (lv_Visibility_25_0= ruleVisibilityRule ) ) (otherlv_26= ',' ( (lv_Visibility_27_0= ruleVisibilityRule ) ) )* otherlv_28= ']' ) ) ) ) ) )+ {...}?) ) )
            // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4806:1: ( ( ( ({...}? => ( ({...}? => (otherlv_2= 'item=' ( (lv_item_3_0= ruleItemRef ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= 'label=' ( ( (lv_label_5_1= RULE_ID | lv_label_5_2= RULE_STRING ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= 'icon=' ( (lv_icon_7_0= ruleIcon ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_8= 'minValue=' ( (lv_minValue_9_0= ruleNumber ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= 'maxValue=' ( (lv_maxValue_11_0= ruleNumber ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_12= 'step=' ( (lv_step_13_0= ruleNumber ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= 'labelcolor=[' ( ( (lv_LabelColor_15_0= ruleColorArray ) ) (otherlv_16= ',' ( (lv_LabelColor_17_0= ruleColorArray ) ) )* otherlv_18= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_19= 'valuecolor=[' ( ( (lv_ValueColor_20_0= ruleColorArray ) ) (otherlv_21= ',' ( (lv_ValueColor_22_0= ruleColorArray ) ) )* otherlv_23= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_24= 'visibility=[' ( ( (lv_Visibility_25_0= ruleVisibilityRule ) ) (otherlv_26= ',' ( (lv_Visibility_27_0= ruleVisibilityRule ) ) )* otherlv_28= ']' ) ) ) ) ) )+ {...}?) )
            {
            // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4806:1: ( ( ( ({...}? => ( ({...}? => (otherlv_2= 'item=' ( (lv_item_3_0= ruleItemRef ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= 'label=' ( ( (lv_label_5_1= RULE_ID | lv_label_5_2= RULE_STRING ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= 'icon=' ( (lv_icon_7_0= ruleIcon ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_8= 'minValue=' ( (lv_minValue_9_0= ruleNumber ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= 'maxValue=' ( (lv_maxValue_11_0= ruleNumber ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_12= 'step=' ( (lv_step_13_0= ruleNumber ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= 'labelcolor=[' ( ( (lv_LabelColor_15_0= ruleColorArray ) ) (otherlv_16= ',' ( (lv_LabelColor_17_0= ruleColorArray ) ) )* otherlv_18= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_19= 'valuecolor=[' ( ( (lv_ValueColor_20_0= ruleColorArray ) ) (otherlv_21= ',' ( (lv_ValueColor_22_0= ruleColorArray ) ) )* otherlv_23= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_24= 'visibility=[' ( ( (lv_Visibility_25_0= ruleVisibilityRule ) ) (otherlv_26= ',' ( (lv_Visibility_27_0= ruleVisibilityRule ) ) )* otherlv_28= ']' ) ) ) ) ) )+ {...}?) )
            // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4807:2: ( ( ({...}? => ( ({...}? => (otherlv_2= 'item=' ( (lv_item_3_0= ruleItemRef ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= 'label=' ( ( (lv_label_5_1= RULE_ID | lv_label_5_2= RULE_STRING ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= 'icon=' ( (lv_icon_7_0= ruleIcon ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_8= 'minValue=' ( (lv_minValue_9_0= ruleNumber ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= 'maxValue=' ( (lv_maxValue_11_0= ruleNumber ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_12= 'step=' ( (lv_step_13_0= ruleNumber ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= 'labelcolor=[' ( ( (lv_LabelColor_15_0= ruleColorArray ) ) (otherlv_16= ',' ( (lv_LabelColor_17_0= ruleColorArray ) ) )* otherlv_18= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_19= 'valuecolor=[' ( ( (lv_ValueColor_20_0= ruleColorArray ) ) (otherlv_21= ',' ( (lv_ValueColor_22_0= ruleColorArray ) ) )* otherlv_23= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_24= 'visibility=[' ( ( (lv_Visibility_25_0= ruleVisibilityRule ) ) (otherlv_26= ',' ( (lv_Visibility_27_0= ruleVisibilityRule ) ) )* otherlv_28= ']' ) ) ) ) ) )+ {...}?)
            {
             
            	  getUnorderedGroupHelper().enter(grammarAccess.getSetpointAccess().getUnorderedGroup_1());
            	
            // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4810:2: ( ( ({...}? => ( ({...}? => (otherlv_2= 'item=' ( (lv_item_3_0= ruleItemRef ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= 'label=' ( ( (lv_label_5_1= RULE_ID | lv_label_5_2= RULE_STRING ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= 'icon=' ( (lv_icon_7_0= ruleIcon ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_8= 'minValue=' ( (lv_minValue_9_0= ruleNumber ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= 'maxValue=' ( (lv_maxValue_11_0= ruleNumber ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_12= 'step=' ( (lv_step_13_0= ruleNumber ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= 'labelcolor=[' ( ( (lv_LabelColor_15_0= ruleColorArray ) ) (otherlv_16= ',' ( (lv_LabelColor_17_0= ruleColorArray ) ) )* otherlv_18= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_19= 'valuecolor=[' ( ( (lv_ValueColor_20_0= ruleColorArray ) ) (otherlv_21= ',' ( (lv_ValueColor_22_0= ruleColorArray ) ) )* otherlv_23= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_24= 'visibility=[' ( ( (lv_Visibility_25_0= ruleVisibilityRule ) ) (otherlv_26= ',' ( (lv_Visibility_27_0= ruleVisibilityRule ) ) )* otherlv_28= ']' ) ) ) ) ) )+ {...}?)
            // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4811:3: ( ({...}? => ( ({...}? => (otherlv_2= 'item=' ( (lv_item_3_0= ruleItemRef ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= 'label=' ( ( (lv_label_5_1= RULE_ID | lv_label_5_2= RULE_STRING ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= 'icon=' ( (lv_icon_7_0= ruleIcon ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_8= 'minValue=' ( (lv_minValue_9_0= ruleNumber ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= 'maxValue=' ( (lv_maxValue_11_0= ruleNumber ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_12= 'step=' ( (lv_step_13_0= ruleNumber ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= 'labelcolor=[' ( ( (lv_LabelColor_15_0= ruleColorArray ) ) (otherlv_16= ',' ( (lv_LabelColor_17_0= ruleColorArray ) ) )* otherlv_18= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_19= 'valuecolor=[' ( ( (lv_ValueColor_20_0= ruleColorArray ) ) (otherlv_21= ',' ( (lv_ValueColor_22_0= ruleColorArray ) ) )* otherlv_23= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_24= 'visibility=[' ( ( (lv_Visibility_25_0= ruleVisibilityRule ) ) (otherlv_26= ',' ( (lv_Visibility_27_0= ruleVisibilityRule ) ) )* otherlv_28= ']' ) ) ) ) ) )+ {...}?
            {
            // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4811:3: ( ({...}? => ( ({...}? => (otherlv_2= 'item=' ( (lv_item_3_0= ruleItemRef ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= 'label=' ( ( (lv_label_5_1= RULE_ID | lv_label_5_2= RULE_STRING ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= 'icon=' ( (lv_icon_7_0= ruleIcon ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_8= 'minValue=' ( (lv_minValue_9_0= ruleNumber ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= 'maxValue=' ( (lv_maxValue_11_0= ruleNumber ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_12= 'step=' ( (lv_step_13_0= ruleNumber ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= 'labelcolor=[' ( ( (lv_LabelColor_15_0= ruleColorArray ) ) (otherlv_16= ',' ( (lv_LabelColor_17_0= ruleColorArray ) ) )* otherlv_18= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_19= 'valuecolor=[' ( ( (lv_ValueColor_20_0= ruleColorArray ) ) (otherlv_21= ',' ( (lv_ValueColor_22_0= ruleColorArray ) ) )* otherlv_23= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_24= 'visibility=[' ( ( (lv_Visibility_25_0= ruleVisibilityRule ) ) (otherlv_26= ',' ( (lv_Visibility_27_0= ruleVisibilityRule ) ) )* otherlv_28= ']' ) ) ) ) ) )+
            int cnt72=0;
            loop72:
            do {
                int alt72=10;
                alt72 = dfa72.predict(input);
                switch (alt72) {
            	case 1 :
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4813:4: ({...}? => ( ({...}? => (otherlv_2= 'item=' ( (lv_item_3_0= ruleItemRef ) ) ) ) ) )
            	    {
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4813:4: ({...}? => ( ({...}? => (otherlv_2= 'item=' ( (lv_item_3_0= ruleItemRef ) ) ) ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4814:5: {...}? => ( ({...}? => (otherlv_2= 'item=' ( (lv_item_3_0= ruleItemRef ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getSetpointAccess().getUnorderedGroup_1(), 0) ) {
            	        throw new FailedPredicateException(input, "ruleSetpoint", "getUnorderedGroupHelper().canSelect(grammarAccess.getSetpointAccess().getUnorderedGroup_1(), 0)");
            	    }
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4814:105: ( ({...}? => (otherlv_2= 'item=' ( (lv_item_3_0= ruleItemRef ) ) ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4815:6: ({...}? => (otherlv_2= 'item=' ( (lv_item_3_0= ruleItemRef ) ) ) )
            	    {
            	     
            	    	 				  getUnorderedGroupHelper().select(grammarAccess.getSetpointAccess().getUnorderedGroup_1(), 0);
            	    	 				
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4818:6: ({...}? => (otherlv_2= 'item=' ( (lv_item_3_0= ruleItemRef ) ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4818:7: {...}? => (otherlv_2= 'item=' ( (lv_item_3_0= ruleItemRef ) ) )
            	    {
            	    if ( !((true)) ) {
            	        throw new FailedPredicateException(input, "ruleSetpoint", "true");
            	    }
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4818:16: (otherlv_2= 'item=' ( (lv_item_3_0= ruleItemRef ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4818:18: otherlv_2= 'item=' ( (lv_item_3_0= ruleItemRef ) )
            	    {
            	    otherlv_2=(Token)match(input,18,FOLLOW_18_in_ruleSetpoint11721); 

            	        	newLeafNode(otherlv_2, grammarAccess.getSetpointAccess().getItemKeyword_1_0_0());
            	        
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4822:1: ( (lv_item_3_0= ruleItemRef ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4823:1: (lv_item_3_0= ruleItemRef )
            	    {
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4823:1: (lv_item_3_0= ruleItemRef )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4824:3: lv_item_3_0= ruleItemRef
            	    {
            	     
            	    	        newCompositeNode(grammarAccess.getSetpointAccess().getItemItemRefParserRuleCall_1_0_1_0()); 
            	    	    
            	    pushFollow(FOLLOW_ruleItemRef_in_ruleSetpoint11742);
            	    lv_item_3_0=ruleItemRef();

            	    state._fsp--;


            	    	        if (current==null) {
            	    	            current = createModelElementForParent(grammarAccess.getSetpointRule());
            	    	        }
            	           		set(
            	           			current, 
            	           			"item",
            	            		lv_item_3_0, 
            	            		"ItemRef");
            	    	        afterParserOrEnumRuleCall();
            	    	    

            	    }


            	    }


            	    }


            	    }

            	     
            	    	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getSetpointAccess().getUnorderedGroup_1());
            	    	 				

            	    }


            	    }


            	    }
            	    break;
            	case 2 :
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4847:4: ({...}? => ( ({...}? => (otherlv_4= 'label=' ( ( (lv_label_5_1= RULE_ID | lv_label_5_2= RULE_STRING ) ) ) ) ) ) )
            	    {
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4847:4: ({...}? => ( ({...}? => (otherlv_4= 'label=' ( ( (lv_label_5_1= RULE_ID | lv_label_5_2= RULE_STRING ) ) ) ) ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4848:5: {...}? => ( ({...}? => (otherlv_4= 'label=' ( ( (lv_label_5_1= RULE_ID | lv_label_5_2= RULE_STRING ) ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getSetpointAccess().getUnorderedGroup_1(), 1) ) {
            	        throw new FailedPredicateException(input, "ruleSetpoint", "getUnorderedGroupHelper().canSelect(grammarAccess.getSetpointAccess().getUnorderedGroup_1(), 1)");
            	    }
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4848:105: ( ({...}? => (otherlv_4= 'label=' ( ( (lv_label_5_1= RULE_ID | lv_label_5_2= RULE_STRING ) ) ) ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4849:6: ({...}? => (otherlv_4= 'label=' ( ( (lv_label_5_1= RULE_ID | lv_label_5_2= RULE_STRING ) ) ) ) )
            	    {
            	     
            	    	 				  getUnorderedGroupHelper().select(grammarAccess.getSetpointAccess().getUnorderedGroup_1(), 1);
            	    	 				
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4852:6: ({...}? => (otherlv_4= 'label=' ( ( (lv_label_5_1= RULE_ID | lv_label_5_2= RULE_STRING ) ) ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4852:7: {...}? => (otherlv_4= 'label=' ( ( (lv_label_5_1= RULE_ID | lv_label_5_2= RULE_STRING ) ) ) )
            	    {
            	    if ( !((true)) ) {
            	        throw new FailedPredicateException(input, "ruleSetpoint", "true");
            	    }
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4852:16: (otherlv_4= 'label=' ( ( (lv_label_5_1= RULE_ID | lv_label_5_2= RULE_STRING ) ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4852:18: otherlv_4= 'label=' ( ( (lv_label_5_1= RULE_ID | lv_label_5_2= RULE_STRING ) ) )
            	    {
            	    otherlv_4=(Token)match(input,13,FOLLOW_13_in_ruleSetpoint11810); 

            	        	newLeafNode(otherlv_4, grammarAccess.getSetpointAccess().getLabelKeyword_1_1_0());
            	        
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4856:1: ( ( (lv_label_5_1= RULE_ID | lv_label_5_2= RULE_STRING ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4857:1: ( (lv_label_5_1= RULE_ID | lv_label_5_2= RULE_STRING ) )
            	    {
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4857:1: ( (lv_label_5_1= RULE_ID | lv_label_5_2= RULE_STRING ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4858:1: (lv_label_5_1= RULE_ID | lv_label_5_2= RULE_STRING )
            	    {
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4858:1: (lv_label_5_1= RULE_ID | lv_label_5_2= RULE_STRING )
            	    int alt68=2;
            	    int LA68_0 = input.LA(1);

            	    if ( (LA68_0==RULE_ID) ) {
            	        alt68=1;
            	    }
            	    else if ( (LA68_0==RULE_STRING) ) {
            	        alt68=2;
            	    }
            	    else {
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 68, 0, input);

            	        throw nvae;
            	    }
            	    switch (alt68) {
            	        case 1 :
            	            // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4859:3: lv_label_5_1= RULE_ID
            	            {
            	            lv_label_5_1=(Token)match(input,RULE_ID,FOLLOW_RULE_ID_in_ruleSetpoint11829); 

            	            			newLeafNode(lv_label_5_1, grammarAccess.getSetpointAccess().getLabelIDTerminalRuleCall_1_1_1_0_0()); 
            	            		

            	            	        if (current==null) {
            	            	            current = createModelElement(grammarAccess.getSetpointRule());
            	            	        }
            	                   		setWithLastConsumed(
            	                   			current, 
            	                   			"label",
            	                    		lv_label_5_1, 
            	                    		"ID");
            	            	    

            	            }
            	            break;
            	        case 2 :
            	            // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4874:8: lv_label_5_2= RULE_STRING
            	            {
            	            lv_label_5_2=(Token)match(input,RULE_STRING,FOLLOW_RULE_STRING_in_ruleSetpoint11849); 

            	            			newLeafNode(lv_label_5_2, grammarAccess.getSetpointAccess().getLabelSTRINGTerminalRuleCall_1_1_1_0_1()); 
            	            		

            	            	        if (current==null) {
            	            	            current = createModelElement(grammarAccess.getSetpointRule());
            	            	        }
            	                   		setWithLastConsumed(
            	                   			current, 
            	                   			"label",
            	                    		lv_label_5_2, 
            	                    		"STRING");
            	            	    

            	            }
            	            break;

            	    }


            	    }


            	    }


            	    }


            	    }

            	     
            	    	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getSetpointAccess().getUnorderedGroup_1());
            	    	 				

            	    }


            	    }


            	    }
            	    break;
            	case 3 :
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4899:4: ({...}? => ( ({...}? => (otherlv_6= 'icon=' ( (lv_icon_7_0= ruleIcon ) ) ) ) ) )
            	    {
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4899:4: ({...}? => ( ({...}? => (otherlv_6= 'icon=' ( (lv_icon_7_0= ruleIcon ) ) ) ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4900:5: {...}? => ( ({...}? => (otherlv_6= 'icon=' ( (lv_icon_7_0= ruleIcon ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getSetpointAccess().getUnorderedGroup_1(), 2) ) {
            	        throw new FailedPredicateException(input, "ruleSetpoint", "getUnorderedGroupHelper().canSelect(grammarAccess.getSetpointAccess().getUnorderedGroup_1(), 2)");
            	    }
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4900:105: ( ({...}? => (otherlv_6= 'icon=' ( (lv_icon_7_0= ruleIcon ) ) ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4901:6: ({...}? => (otherlv_6= 'icon=' ( (lv_icon_7_0= ruleIcon ) ) ) )
            	    {
            	     
            	    	 				  getUnorderedGroupHelper().select(grammarAccess.getSetpointAccess().getUnorderedGroup_1(), 2);
            	    	 				
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4904:6: ({...}? => (otherlv_6= 'icon=' ( (lv_icon_7_0= ruleIcon ) ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4904:7: {...}? => (otherlv_6= 'icon=' ( (lv_icon_7_0= ruleIcon ) ) )
            	    {
            	    if ( !((true)) ) {
            	        throw new FailedPredicateException(input, "ruleSetpoint", "true");
            	    }
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4904:16: (otherlv_6= 'icon=' ( (lv_icon_7_0= ruleIcon ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4904:18: otherlv_6= 'icon=' ( (lv_icon_7_0= ruleIcon ) )
            	    {
            	    otherlv_6=(Token)match(input,14,FOLLOW_14_in_ruleSetpoint11925); 

            	        	newLeafNode(otherlv_6, grammarAccess.getSetpointAccess().getIconKeyword_1_2_0());
            	        
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4908:1: ( (lv_icon_7_0= ruleIcon ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4909:1: (lv_icon_7_0= ruleIcon )
            	    {
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4909:1: (lv_icon_7_0= ruleIcon )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4910:3: lv_icon_7_0= ruleIcon
            	    {
            	     
            	    	        newCompositeNode(grammarAccess.getSetpointAccess().getIconIconParserRuleCall_1_2_1_0()); 
            	    	    
            	    pushFollow(FOLLOW_ruleIcon_in_ruleSetpoint11946);
            	    lv_icon_7_0=ruleIcon();

            	    state._fsp--;


            	    	        if (current==null) {
            	    	            current = createModelElementForParent(grammarAccess.getSetpointRule());
            	    	        }
            	           		set(
            	           			current, 
            	           			"icon",
            	            		lv_icon_7_0, 
            	            		"Icon");
            	    	        afterParserOrEnumRuleCall();
            	    	    

            	    }


            	    }


            	    }


            	    }

            	     
            	    	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getSetpointAccess().getUnorderedGroup_1());
            	    	 				

            	    }


            	    }


            	    }
            	    break;
            	case 4 :
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4933:4: ({...}? => ( ({...}? => (otherlv_8= 'minValue=' ( (lv_minValue_9_0= ruleNumber ) ) ) ) ) )
            	    {
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4933:4: ({...}? => ( ({...}? => (otherlv_8= 'minValue=' ( (lv_minValue_9_0= ruleNumber ) ) ) ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4934:5: {...}? => ( ({...}? => (otherlv_8= 'minValue=' ( (lv_minValue_9_0= ruleNumber ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getSetpointAccess().getUnorderedGroup_1(), 3) ) {
            	        throw new FailedPredicateException(input, "ruleSetpoint", "getUnorderedGroupHelper().canSelect(grammarAccess.getSetpointAccess().getUnorderedGroup_1(), 3)");
            	    }
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4934:105: ( ({...}? => (otherlv_8= 'minValue=' ( (lv_minValue_9_0= ruleNumber ) ) ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4935:6: ({...}? => (otherlv_8= 'minValue=' ( (lv_minValue_9_0= ruleNumber ) ) ) )
            	    {
            	     
            	    	 				  getUnorderedGroupHelper().select(grammarAccess.getSetpointAccess().getUnorderedGroup_1(), 3);
            	    	 				
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4938:6: ({...}? => (otherlv_8= 'minValue=' ( (lv_minValue_9_0= ruleNumber ) ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4938:7: {...}? => (otherlv_8= 'minValue=' ( (lv_minValue_9_0= ruleNumber ) ) )
            	    {
            	    if ( !((true)) ) {
            	        throw new FailedPredicateException(input, "ruleSetpoint", "true");
            	    }
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4938:16: (otherlv_8= 'minValue=' ( (lv_minValue_9_0= ruleNumber ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4938:18: otherlv_8= 'minValue=' ( (lv_minValue_9_0= ruleNumber ) )
            	    {
            	    otherlv_8=(Token)match(input,46,FOLLOW_46_in_ruleSetpoint12014); 

            	        	newLeafNode(otherlv_8, grammarAccess.getSetpointAccess().getMinValueKeyword_1_3_0());
            	        
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4942:1: ( (lv_minValue_9_0= ruleNumber ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4943:1: (lv_minValue_9_0= ruleNumber )
            	    {
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4943:1: (lv_minValue_9_0= ruleNumber )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4944:3: lv_minValue_9_0= ruleNumber
            	    {
            	     
            	    	        newCompositeNode(grammarAccess.getSetpointAccess().getMinValueNumberParserRuleCall_1_3_1_0()); 
            	    	    
            	    pushFollow(FOLLOW_ruleNumber_in_ruleSetpoint12035);
            	    lv_minValue_9_0=ruleNumber();

            	    state._fsp--;


            	    	        if (current==null) {
            	    	            current = createModelElementForParent(grammarAccess.getSetpointRule());
            	    	        }
            	           		set(
            	           			current, 
            	           			"minValue",
            	            		lv_minValue_9_0, 
            	            		"Number");
            	    	        afterParserOrEnumRuleCall();
            	    	    

            	    }


            	    }


            	    }


            	    }

            	     
            	    	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getSetpointAccess().getUnorderedGroup_1());
            	    	 				

            	    }


            	    }


            	    }
            	    break;
            	case 5 :
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4967:4: ({...}? => ( ({...}? => (otherlv_10= 'maxValue=' ( (lv_maxValue_11_0= ruleNumber ) ) ) ) ) )
            	    {
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4967:4: ({...}? => ( ({...}? => (otherlv_10= 'maxValue=' ( (lv_maxValue_11_0= ruleNumber ) ) ) ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4968:5: {...}? => ( ({...}? => (otherlv_10= 'maxValue=' ( (lv_maxValue_11_0= ruleNumber ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getSetpointAccess().getUnorderedGroup_1(), 4) ) {
            	        throw new FailedPredicateException(input, "ruleSetpoint", "getUnorderedGroupHelper().canSelect(grammarAccess.getSetpointAccess().getUnorderedGroup_1(), 4)");
            	    }
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4968:105: ( ({...}? => (otherlv_10= 'maxValue=' ( (lv_maxValue_11_0= ruleNumber ) ) ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4969:6: ({...}? => (otherlv_10= 'maxValue=' ( (lv_maxValue_11_0= ruleNumber ) ) ) )
            	    {
            	     
            	    	 				  getUnorderedGroupHelper().select(grammarAccess.getSetpointAccess().getUnorderedGroup_1(), 4);
            	    	 				
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4972:6: ({...}? => (otherlv_10= 'maxValue=' ( (lv_maxValue_11_0= ruleNumber ) ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4972:7: {...}? => (otherlv_10= 'maxValue=' ( (lv_maxValue_11_0= ruleNumber ) ) )
            	    {
            	    if ( !((true)) ) {
            	        throw new FailedPredicateException(input, "ruleSetpoint", "true");
            	    }
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4972:16: (otherlv_10= 'maxValue=' ( (lv_maxValue_11_0= ruleNumber ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4972:18: otherlv_10= 'maxValue=' ( (lv_maxValue_11_0= ruleNumber ) )
            	    {
            	    otherlv_10=(Token)match(input,47,FOLLOW_47_in_ruleSetpoint12103); 

            	        	newLeafNode(otherlv_10, grammarAccess.getSetpointAccess().getMaxValueKeyword_1_4_0());
            	        
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4976:1: ( (lv_maxValue_11_0= ruleNumber ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4977:1: (lv_maxValue_11_0= ruleNumber )
            	    {
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4977:1: (lv_maxValue_11_0= ruleNumber )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:4978:3: lv_maxValue_11_0= ruleNumber
            	    {
            	     
            	    	        newCompositeNode(grammarAccess.getSetpointAccess().getMaxValueNumberParserRuleCall_1_4_1_0()); 
            	    	    
            	    pushFollow(FOLLOW_ruleNumber_in_ruleSetpoint12124);
            	    lv_maxValue_11_0=ruleNumber();

            	    state._fsp--;


            	    	        if (current==null) {
            	    	            current = createModelElementForParent(grammarAccess.getSetpointRule());
            	    	        }
            	           		set(
            	           			current, 
            	           			"maxValue",
            	            		lv_maxValue_11_0, 
            	            		"Number");
            	    	        afterParserOrEnumRuleCall();
            	    	    

            	    }


            	    }


            	    }


            	    }

            	     
            	    	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getSetpointAccess().getUnorderedGroup_1());
            	    	 				

            	    }


            	    }


            	    }
            	    break;
            	case 6 :
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:5001:4: ({...}? => ( ({...}? => (otherlv_12= 'step=' ( (lv_step_13_0= ruleNumber ) ) ) ) ) )
            	    {
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:5001:4: ({...}? => ( ({...}? => (otherlv_12= 'step=' ( (lv_step_13_0= ruleNumber ) ) ) ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:5002:5: {...}? => ( ({...}? => (otherlv_12= 'step=' ( (lv_step_13_0= ruleNumber ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getSetpointAccess().getUnorderedGroup_1(), 5) ) {
            	        throw new FailedPredicateException(input, "ruleSetpoint", "getUnorderedGroupHelper().canSelect(grammarAccess.getSetpointAccess().getUnorderedGroup_1(), 5)");
            	    }
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:5002:105: ( ({...}? => (otherlv_12= 'step=' ( (lv_step_13_0= ruleNumber ) ) ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:5003:6: ({...}? => (otherlv_12= 'step=' ( (lv_step_13_0= ruleNumber ) ) ) )
            	    {
            	     
            	    	 				  getUnorderedGroupHelper().select(grammarAccess.getSetpointAccess().getUnorderedGroup_1(), 5);
            	    	 				
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:5006:6: ({...}? => (otherlv_12= 'step=' ( (lv_step_13_0= ruleNumber ) ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:5006:7: {...}? => (otherlv_12= 'step=' ( (lv_step_13_0= ruleNumber ) ) )
            	    {
            	    if ( !((true)) ) {
            	        throw new FailedPredicateException(input, "ruleSetpoint", "true");
            	    }
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:5006:16: (otherlv_12= 'step=' ( (lv_step_13_0= ruleNumber ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:5006:18: otherlv_12= 'step=' ( (lv_step_13_0= ruleNumber ) )
            	    {
            	    otherlv_12=(Token)match(input,48,FOLLOW_48_in_ruleSetpoint12192); 

            	        	newLeafNode(otherlv_12, grammarAccess.getSetpointAccess().getStepKeyword_1_5_0());
            	        
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:5010:1: ( (lv_step_13_0= ruleNumber ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:5011:1: (lv_step_13_0= ruleNumber )
            	    {
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:5011:1: (lv_step_13_0= ruleNumber )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:5012:3: lv_step_13_0= ruleNumber
            	    {
            	     
            	    	        newCompositeNode(grammarAccess.getSetpointAccess().getStepNumberParserRuleCall_1_5_1_0()); 
            	    	    
            	    pushFollow(FOLLOW_ruleNumber_in_ruleSetpoint12213);
            	    lv_step_13_0=ruleNumber();

            	    state._fsp--;


            	    	        if (current==null) {
            	    	            current = createModelElementForParent(grammarAccess.getSetpointRule());
            	    	        }
            	           		set(
            	           			current, 
            	           			"step",
            	            		lv_step_13_0, 
            	            		"Number");
            	    	        afterParserOrEnumRuleCall();
            	    	    

            	    }


            	    }


            	    }


            	    }

            	     
            	    	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getSetpointAccess().getUnorderedGroup_1());
            	    	 				

            	    }


            	    }


            	    }
            	    break;
            	case 7 :
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:5035:4: ({...}? => ( ({...}? => (otherlv_14= 'labelcolor=[' ( ( (lv_LabelColor_15_0= ruleColorArray ) ) (otherlv_16= ',' ( (lv_LabelColor_17_0= ruleColorArray ) ) )* otherlv_18= ']' ) ) ) ) )
            	    {
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:5035:4: ({...}? => ( ({...}? => (otherlv_14= 'labelcolor=[' ( ( (lv_LabelColor_15_0= ruleColorArray ) ) (otherlv_16= ',' ( (lv_LabelColor_17_0= ruleColorArray ) ) )* otherlv_18= ']' ) ) ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:5036:5: {...}? => ( ({...}? => (otherlv_14= 'labelcolor=[' ( ( (lv_LabelColor_15_0= ruleColorArray ) ) (otherlv_16= ',' ( (lv_LabelColor_17_0= ruleColorArray ) ) )* otherlv_18= ']' ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getSetpointAccess().getUnorderedGroup_1(), 6) ) {
            	        throw new FailedPredicateException(input, "ruleSetpoint", "getUnorderedGroupHelper().canSelect(grammarAccess.getSetpointAccess().getUnorderedGroup_1(), 6)");
            	    }
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:5036:105: ( ({...}? => (otherlv_14= 'labelcolor=[' ( ( (lv_LabelColor_15_0= ruleColorArray ) ) (otherlv_16= ',' ( (lv_LabelColor_17_0= ruleColorArray ) ) )* otherlv_18= ']' ) ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:5037:6: ({...}? => (otherlv_14= 'labelcolor=[' ( ( (lv_LabelColor_15_0= ruleColorArray ) ) (otherlv_16= ',' ( (lv_LabelColor_17_0= ruleColorArray ) ) )* otherlv_18= ']' ) ) )
            	    {
            	     
            	    	 				  getUnorderedGroupHelper().select(grammarAccess.getSetpointAccess().getUnorderedGroup_1(), 6);
            	    	 				
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:5040:6: ({...}? => (otherlv_14= 'labelcolor=[' ( ( (lv_LabelColor_15_0= ruleColorArray ) ) (otherlv_16= ',' ( (lv_LabelColor_17_0= ruleColorArray ) ) )* otherlv_18= ']' ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:5040:7: {...}? => (otherlv_14= 'labelcolor=[' ( ( (lv_LabelColor_15_0= ruleColorArray ) ) (otherlv_16= ',' ( (lv_LabelColor_17_0= ruleColorArray ) ) )* otherlv_18= ']' ) )
            	    {
            	    if ( !((true)) ) {
            	        throw new FailedPredicateException(input, "ruleSetpoint", "true");
            	    }
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:5040:16: (otherlv_14= 'labelcolor=[' ( ( (lv_LabelColor_15_0= ruleColorArray ) ) (otherlv_16= ',' ( (lv_LabelColor_17_0= ruleColorArray ) ) )* otherlv_18= ']' ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:5040:18: otherlv_14= 'labelcolor=[' ( ( (lv_LabelColor_15_0= ruleColorArray ) ) (otherlv_16= ',' ( (lv_LabelColor_17_0= ruleColorArray ) ) )* otherlv_18= ']' )
            	    {
            	    otherlv_14=(Token)match(input,19,FOLLOW_19_in_ruleSetpoint12281); 

            	        	newLeafNode(otherlv_14, grammarAccess.getSetpointAccess().getLabelcolorKeyword_1_6_0());
            	        
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:5044:1: ( ( (lv_LabelColor_15_0= ruleColorArray ) ) (otherlv_16= ',' ( (lv_LabelColor_17_0= ruleColorArray ) ) )* otherlv_18= ']' )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:5044:2: ( (lv_LabelColor_15_0= ruleColorArray ) ) (otherlv_16= ',' ( (lv_LabelColor_17_0= ruleColorArray ) ) )* otherlv_18= ']'
            	    {
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:5044:2: ( (lv_LabelColor_15_0= ruleColorArray ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:5045:1: (lv_LabelColor_15_0= ruleColorArray )
            	    {
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:5045:1: (lv_LabelColor_15_0= ruleColorArray )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:5046:3: lv_LabelColor_15_0= ruleColorArray
            	    {
            	     
            	    	        newCompositeNode(grammarAccess.getSetpointAccess().getLabelColorColorArrayParserRuleCall_1_6_1_0_0()); 
            	    	    
            	    pushFollow(FOLLOW_ruleColorArray_in_ruleSetpoint12303);
            	    lv_LabelColor_15_0=ruleColorArray();

            	    state._fsp--;


            	    	        if (current==null) {
            	    	            current = createModelElementForParent(grammarAccess.getSetpointRule());
            	    	        }
            	           		add(
            	           			current, 
            	           			"LabelColor",
            	            		lv_LabelColor_15_0, 
            	            		"ColorArray");
            	    	        afterParserOrEnumRuleCall();
            	    	    

            	    }


            	    }

            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:5062:2: (otherlv_16= ',' ( (lv_LabelColor_17_0= ruleColorArray ) ) )*
            	    loop69:
            	    do {
            	        int alt69=2;
            	        int LA69_0 = input.LA(1);

            	        if ( (LA69_0==20) ) {
            	            alt69=1;
            	        }


            	        switch (alt69) {
            	    	case 1 :
            	    	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:5062:4: otherlv_16= ',' ( (lv_LabelColor_17_0= ruleColorArray ) )
            	    	    {
            	    	    otherlv_16=(Token)match(input,20,FOLLOW_20_in_ruleSetpoint12316); 

            	    	        	newLeafNode(otherlv_16, grammarAccess.getSetpointAccess().getCommaKeyword_1_6_1_1_0());
            	    	        
            	    	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:5066:1: ( (lv_LabelColor_17_0= ruleColorArray ) )
            	    	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:5067:1: (lv_LabelColor_17_0= ruleColorArray )
            	    	    {
            	    	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:5067:1: (lv_LabelColor_17_0= ruleColorArray )
            	    	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:5068:3: lv_LabelColor_17_0= ruleColorArray
            	    	    {
            	    	     
            	    	    	        newCompositeNode(grammarAccess.getSetpointAccess().getLabelColorColorArrayParserRuleCall_1_6_1_1_1_0()); 
            	    	    	    
            	    	    pushFollow(FOLLOW_ruleColorArray_in_ruleSetpoint12337);
            	    	    lv_LabelColor_17_0=ruleColorArray();

            	    	    state._fsp--;


            	    	    	        if (current==null) {
            	    	    	            current = createModelElementForParent(grammarAccess.getSetpointRule());
            	    	    	        }
            	    	           		add(
            	    	           			current, 
            	    	           			"LabelColor",
            	    	            		lv_LabelColor_17_0, 
            	    	            		"ColorArray");
            	    	    	        afterParserOrEnumRuleCall();
            	    	    	    

            	    	    }


            	    	    }


            	    	    }
            	    	    break;

            	    	default :
            	    	    break loop69;
            	        }
            	    } while (true);

            	    otherlv_18=(Token)match(input,21,FOLLOW_21_in_ruleSetpoint12351); 

            	        	newLeafNode(otherlv_18, grammarAccess.getSetpointAccess().getRightSquareBracketKeyword_1_6_1_2());
            	        

            	    }


            	    }


            	    }

            	     
            	    	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getSetpointAccess().getUnorderedGroup_1());
            	    	 				

            	    }


            	    }


            	    }
            	    break;
            	case 8 :
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:5095:4: ({...}? => ( ({...}? => (otherlv_19= 'valuecolor=[' ( ( (lv_ValueColor_20_0= ruleColorArray ) ) (otherlv_21= ',' ( (lv_ValueColor_22_0= ruleColorArray ) ) )* otherlv_23= ']' ) ) ) ) )
            	    {
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:5095:4: ({...}? => ( ({...}? => (otherlv_19= 'valuecolor=[' ( ( (lv_ValueColor_20_0= ruleColorArray ) ) (otherlv_21= ',' ( (lv_ValueColor_22_0= ruleColorArray ) ) )* otherlv_23= ']' ) ) ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:5096:5: {...}? => ( ({...}? => (otherlv_19= 'valuecolor=[' ( ( (lv_ValueColor_20_0= ruleColorArray ) ) (otherlv_21= ',' ( (lv_ValueColor_22_0= ruleColorArray ) ) )* otherlv_23= ']' ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getSetpointAccess().getUnorderedGroup_1(), 7) ) {
            	        throw new FailedPredicateException(input, "ruleSetpoint", "getUnorderedGroupHelper().canSelect(grammarAccess.getSetpointAccess().getUnorderedGroup_1(), 7)");
            	    }
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:5096:105: ( ({...}? => (otherlv_19= 'valuecolor=[' ( ( (lv_ValueColor_20_0= ruleColorArray ) ) (otherlv_21= ',' ( (lv_ValueColor_22_0= ruleColorArray ) ) )* otherlv_23= ']' ) ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:5097:6: ({...}? => (otherlv_19= 'valuecolor=[' ( ( (lv_ValueColor_20_0= ruleColorArray ) ) (otherlv_21= ',' ( (lv_ValueColor_22_0= ruleColorArray ) ) )* otherlv_23= ']' ) ) )
            	    {
            	     
            	    	 				  getUnorderedGroupHelper().select(grammarAccess.getSetpointAccess().getUnorderedGroup_1(), 7);
            	    	 				
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:5100:6: ({...}? => (otherlv_19= 'valuecolor=[' ( ( (lv_ValueColor_20_0= ruleColorArray ) ) (otherlv_21= ',' ( (lv_ValueColor_22_0= ruleColorArray ) ) )* otherlv_23= ']' ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:5100:7: {...}? => (otherlv_19= 'valuecolor=[' ( ( (lv_ValueColor_20_0= ruleColorArray ) ) (otherlv_21= ',' ( (lv_ValueColor_22_0= ruleColorArray ) ) )* otherlv_23= ']' ) )
            	    {
            	    if ( !((true)) ) {
            	        throw new FailedPredicateException(input, "ruleSetpoint", "true");
            	    }
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:5100:16: (otherlv_19= 'valuecolor=[' ( ( (lv_ValueColor_20_0= ruleColorArray ) ) (otherlv_21= ',' ( (lv_ValueColor_22_0= ruleColorArray ) ) )* otherlv_23= ']' ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:5100:18: otherlv_19= 'valuecolor=[' ( ( (lv_ValueColor_20_0= ruleColorArray ) ) (otherlv_21= ',' ( (lv_ValueColor_22_0= ruleColorArray ) ) )* otherlv_23= ']' )
            	    {
            	    otherlv_19=(Token)match(input,22,FOLLOW_22_in_ruleSetpoint12420); 

            	        	newLeafNode(otherlv_19, grammarAccess.getSetpointAccess().getValuecolorKeyword_1_7_0());
            	        
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:5104:1: ( ( (lv_ValueColor_20_0= ruleColorArray ) ) (otherlv_21= ',' ( (lv_ValueColor_22_0= ruleColorArray ) ) )* otherlv_23= ']' )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:5104:2: ( (lv_ValueColor_20_0= ruleColorArray ) ) (otherlv_21= ',' ( (lv_ValueColor_22_0= ruleColorArray ) ) )* otherlv_23= ']'
            	    {
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:5104:2: ( (lv_ValueColor_20_0= ruleColorArray ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:5105:1: (lv_ValueColor_20_0= ruleColorArray )
            	    {
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:5105:1: (lv_ValueColor_20_0= ruleColorArray )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:5106:3: lv_ValueColor_20_0= ruleColorArray
            	    {
            	     
            	    	        newCompositeNode(grammarAccess.getSetpointAccess().getValueColorColorArrayParserRuleCall_1_7_1_0_0()); 
            	    	    
            	    pushFollow(FOLLOW_ruleColorArray_in_ruleSetpoint12442);
            	    lv_ValueColor_20_0=ruleColorArray();

            	    state._fsp--;


            	    	        if (current==null) {
            	    	            current = createModelElementForParent(grammarAccess.getSetpointRule());
            	    	        }
            	           		add(
            	           			current, 
            	           			"ValueColor",
            	            		lv_ValueColor_20_0, 
            	            		"ColorArray");
            	    	        afterParserOrEnumRuleCall();
            	    	    

            	    }


            	    }

            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:5122:2: (otherlv_21= ',' ( (lv_ValueColor_22_0= ruleColorArray ) ) )*
            	    loop70:
            	    do {
            	        int alt70=2;
            	        int LA70_0 = input.LA(1);

            	        if ( (LA70_0==20) ) {
            	            alt70=1;
            	        }


            	        switch (alt70) {
            	    	case 1 :
            	    	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:5122:4: otherlv_21= ',' ( (lv_ValueColor_22_0= ruleColorArray ) )
            	    	    {
            	    	    otherlv_21=(Token)match(input,20,FOLLOW_20_in_ruleSetpoint12455); 

            	    	        	newLeafNode(otherlv_21, grammarAccess.getSetpointAccess().getCommaKeyword_1_7_1_1_0());
            	    	        
            	    	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:5126:1: ( (lv_ValueColor_22_0= ruleColorArray ) )
            	    	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:5127:1: (lv_ValueColor_22_0= ruleColorArray )
            	    	    {
            	    	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:5127:1: (lv_ValueColor_22_0= ruleColorArray )
            	    	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:5128:3: lv_ValueColor_22_0= ruleColorArray
            	    	    {
            	    	     
            	    	    	        newCompositeNode(grammarAccess.getSetpointAccess().getValueColorColorArrayParserRuleCall_1_7_1_1_1_0()); 
            	    	    	    
            	    	    pushFollow(FOLLOW_ruleColorArray_in_ruleSetpoint12476);
            	    	    lv_ValueColor_22_0=ruleColorArray();

            	    	    state._fsp--;


            	    	    	        if (current==null) {
            	    	    	            current = createModelElementForParent(grammarAccess.getSetpointRule());
            	    	    	        }
            	    	           		add(
            	    	           			current, 
            	    	           			"ValueColor",
            	    	            		lv_ValueColor_22_0, 
            	    	            		"ColorArray");
            	    	    	        afterParserOrEnumRuleCall();
            	    	    	    

            	    	    }


            	    	    }


            	    	    }
            	    	    break;

            	    	default :
            	    	    break loop70;
            	        }
            	    } while (true);

            	    otherlv_23=(Token)match(input,21,FOLLOW_21_in_ruleSetpoint12490); 

            	        	newLeafNode(otherlv_23, grammarAccess.getSetpointAccess().getRightSquareBracketKeyword_1_7_1_2());
            	        

            	    }


            	    }


            	    }

            	     
            	    	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getSetpointAccess().getUnorderedGroup_1());
            	    	 				

            	    }


            	    }


            	    }
            	    break;
            	case 9 :
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:5155:4: ({...}? => ( ({...}? => (otherlv_24= 'visibility=[' ( ( (lv_Visibility_25_0= ruleVisibilityRule ) ) (otherlv_26= ',' ( (lv_Visibility_27_0= ruleVisibilityRule ) ) )* otherlv_28= ']' ) ) ) ) )
            	    {
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:5155:4: ({...}? => ( ({...}? => (otherlv_24= 'visibility=[' ( ( (lv_Visibility_25_0= ruleVisibilityRule ) ) (otherlv_26= ',' ( (lv_Visibility_27_0= ruleVisibilityRule ) ) )* otherlv_28= ']' ) ) ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:5156:5: {...}? => ( ({...}? => (otherlv_24= 'visibility=[' ( ( (lv_Visibility_25_0= ruleVisibilityRule ) ) (otherlv_26= ',' ( (lv_Visibility_27_0= ruleVisibilityRule ) ) )* otherlv_28= ']' ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getSetpointAccess().getUnorderedGroup_1(), 8) ) {
            	        throw new FailedPredicateException(input, "ruleSetpoint", "getUnorderedGroupHelper().canSelect(grammarAccess.getSetpointAccess().getUnorderedGroup_1(), 8)");
            	    }
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:5156:105: ( ({...}? => (otherlv_24= 'visibility=[' ( ( (lv_Visibility_25_0= ruleVisibilityRule ) ) (otherlv_26= ',' ( (lv_Visibility_27_0= ruleVisibilityRule ) ) )* otherlv_28= ']' ) ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:5157:6: ({...}? => (otherlv_24= 'visibility=[' ( ( (lv_Visibility_25_0= ruleVisibilityRule ) ) (otherlv_26= ',' ( (lv_Visibility_27_0= ruleVisibilityRule ) ) )* otherlv_28= ']' ) ) )
            	    {
            	     
            	    	 				  getUnorderedGroupHelper().select(grammarAccess.getSetpointAccess().getUnorderedGroup_1(), 8);
            	    	 				
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:5160:6: ({...}? => (otherlv_24= 'visibility=[' ( ( (lv_Visibility_25_0= ruleVisibilityRule ) ) (otherlv_26= ',' ( (lv_Visibility_27_0= ruleVisibilityRule ) ) )* otherlv_28= ']' ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:5160:7: {...}? => (otherlv_24= 'visibility=[' ( ( (lv_Visibility_25_0= ruleVisibilityRule ) ) (otherlv_26= ',' ( (lv_Visibility_27_0= ruleVisibilityRule ) ) )* otherlv_28= ']' ) )
            	    {
            	    if ( !((true)) ) {
            	        throw new FailedPredicateException(input, "ruleSetpoint", "true");
            	    }
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:5160:16: (otherlv_24= 'visibility=[' ( ( (lv_Visibility_25_0= ruleVisibilityRule ) ) (otherlv_26= ',' ( (lv_Visibility_27_0= ruleVisibilityRule ) ) )* otherlv_28= ']' ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:5160:18: otherlv_24= 'visibility=[' ( ( (lv_Visibility_25_0= ruleVisibilityRule ) ) (otherlv_26= ',' ( (lv_Visibility_27_0= ruleVisibilityRule ) ) )* otherlv_28= ']' )
            	    {
            	    otherlv_24=(Token)match(input,23,FOLLOW_23_in_ruleSetpoint12559); 

            	        	newLeafNode(otherlv_24, grammarAccess.getSetpointAccess().getVisibilityKeyword_1_8_0());
            	        
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:5164:1: ( ( (lv_Visibility_25_0= ruleVisibilityRule ) ) (otherlv_26= ',' ( (lv_Visibility_27_0= ruleVisibilityRule ) ) )* otherlv_28= ']' )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:5164:2: ( (lv_Visibility_25_0= ruleVisibilityRule ) ) (otherlv_26= ',' ( (lv_Visibility_27_0= ruleVisibilityRule ) ) )* otherlv_28= ']'
            	    {
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:5164:2: ( (lv_Visibility_25_0= ruleVisibilityRule ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:5165:1: (lv_Visibility_25_0= ruleVisibilityRule )
            	    {
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:5165:1: (lv_Visibility_25_0= ruleVisibilityRule )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:5166:3: lv_Visibility_25_0= ruleVisibilityRule
            	    {
            	     
            	    	        newCompositeNode(grammarAccess.getSetpointAccess().getVisibilityVisibilityRuleParserRuleCall_1_8_1_0_0()); 
            	    	    
            	    pushFollow(FOLLOW_ruleVisibilityRule_in_ruleSetpoint12581);
            	    lv_Visibility_25_0=ruleVisibilityRule();

            	    state._fsp--;


            	    	        if (current==null) {
            	    	            current = createModelElementForParent(grammarAccess.getSetpointRule());
            	    	        }
            	           		add(
            	           			current, 
            	           			"Visibility",
            	            		lv_Visibility_25_0, 
            	            		"VisibilityRule");
            	    	        afterParserOrEnumRuleCall();
            	    	    

            	    }


            	    }

            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:5182:2: (otherlv_26= ',' ( (lv_Visibility_27_0= ruleVisibilityRule ) ) )*
            	    loop71:
            	    do {
            	        int alt71=2;
            	        int LA71_0 = input.LA(1);

            	        if ( (LA71_0==20) ) {
            	            alt71=1;
            	        }


            	        switch (alt71) {
            	    	case 1 :
            	    	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:5182:4: otherlv_26= ',' ( (lv_Visibility_27_0= ruleVisibilityRule ) )
            	    	    {
            	    	    otherlv_26=(Token)match(input,20,FOLLOW_20_in_ruleSetpoint12594); 

            	    	        	newLeafNode(otherlv_26, grammarAccess.getSetpointAccess().getCommaKeyword_1_8_1_1_0());
            	    	        
            	    	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:5186:1: ( (lv_Visibility_27_0= ruleVisibilityRule ) )
            	    	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:5187:1: (lv_Visibility_27_0= ruleVisibilityRule )
            	    	    {
            	    	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:5187:1: (lv_Visibility_27_0= ruleVisibilityRule )
            	    	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:5188:3: lv_Visibility_27_0= ruleVisibilityRule
            	    	    {
            	    	     
            	    	    	        newCompositeNode(grammarAccess.getSetpointAccess().getVisibilityVisibilityRuleParserRuleCall_1_8_1_1_1_0()); 
            	    	    	    
            	    	    pushFollow(FOLLOW_ruleVisibilityRule_in_ruleSetpoint12615);
            	    	    lv_Visibility_27_0=ruleVisibilityRule();

            	    	    state._fsp--;


            	    	    	        if (current==null) {
            	    	    	            current = createModelElementForParent(grammarAccess.getSetpointRule());
            	    	    	        }
            	    	           		add(
            	    	           			current, 
            	    	           			"Visibility",
            	    	            		lv_Visibility_27_0, 
            	    	            		"VisibilityRule");
            	    	    	        afterParserOrEnumRuleCall();
            	    	    	    

            	    	    }


            	    	    }


            	    	    }
            	    	    break;

            	    	default :
            	    	    break loop71;
            	        }
            	    } while (true);

            	    otherlv_28=(Token)match(input,21,FOLLOW_21_in_ruleSetpoint12629); 

            	        	newLeafNode(otherlv_28, grammarAccess.getSetpointAccess().getRightSquareBracketKeyword_1_8_1_2());
            	        

            	    }


            	    }


            	    }

            	     
            	    	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getSetpointAccess().getUnorderedGroup_1());
            	    	 				

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    if ( cnt72 >= 1 ) break loop72;
                        EarlyExitException eee =
                            new EarlyExitException(72, input);
                        throw eee;
                }
                cnt72++;
            } while (true);

            if ( ! getUnorderedGroupHelper().canLeave(grammarAccess.getSetpointAccess().getUnorderedGroup_1()) ) {
                throw new FailedPredicateException(input, "ruleSetpoint", "getUnorderedGroupHelper().canLeave(grammarAccess.getSetpointAccess().getUnorderedGroup_1())");
            }

            }


            }

             
            	  getUnorderedGroupHelper().leave(grammarAccess.getSetpointAccess().getUnorderedGroup_1());
            	

            }


            }


            }

             leaveRule(); 
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleSetpoint"


    // $ANTLR start "entryRuleColorpicker"
    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:5231:1: entryRuleColorpicker returns [EObject current=null] : iv_ruleColorpicker= ruleColorpicker EOF ;
    public final EObject entryRuleColorpicker() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleColorpicker = null;


        try {
            // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:5232:2: (iv_ruleColorpicker= ruleColorpicker EOF )
            // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:5233:2: iv_ruleColorpicker= ruleColorpicker EOF
            {
             newCompositeNode(grammarAccess.getColorpickerRule()); 
            pushFollow(FOLLOW_ruleColorpicker_in_entryRuleColorpicker12713);
            iv_ruleColorpicker=ruleColorpicker();

            state._fsp--;

             current =iv_ruleColorpicker; 
            match(input,EOF,FOLLOW_EOF_in_entryRuleColorpicker12723); 

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleColorpicker"


    // $ANTLR start "ruleColorpicker"
    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:5240:1: ruleColorpicker returns [EObject current=null] : (otherlv_0= 'Colorpicker' ( ( ( ( ({...}? => ( ({...}? => (otherlv_2= 'item=' ( (lv_item_3_0= ruleItemRef ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= 'label=' ( ( (lv_label_5_1= RULE_ID | lv_label_5_2= RULE_STRING ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= 'icon=' ( (lv_icon_7_0= ruleIcon ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_8= 'sendFrequency=' ( (lv_frequency_9_0= RULE_INT ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= 'labelcolor=[' ( ( (lv_LabelColor_11_0= ruleColorArray ) ) (otherlv_12= ',' ( (lv_LabelColor_13_0= ruleColorArray ) ) )* otherlv_14= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_15= 'valuecolor=[' ( ( (lv_ValueColor_16_0= ruleColorArray ) ) (otherlv_17= ',' ( (lv_ValueColor_18_0= ruleColorArray ) ) )* otherlv_19= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_20= 'visibility=[' ( ( (lv_Visibility_21_0= ruleVisibilityRule ) ) (otherlv_22= ',' ( (lv_Visibility_23_0= ruleVisibilityRule ) ) )* otherlv_24= ']' ) ) ) ) ) )+ {...}?) ) ) ) ;
    public final EObject ruleColorpicker() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_2=null;
        Token otherlv_4=null;
        Token lv_label_5_1=null;
        Token lv_label_5_2=null;
        Token otherlv_6=null;
        Token otherlv_8=null;
        Token lv_frequency_9_0=null;
        Token otherlv_10=null;
        Token otherlv_12=null;
        Token otherlv_14=null;
        Token otherlv_15=null;
        Token otherlv_17=null;
        Token otherlv_19=null;
        Token otherlv_20=null;
        Token otherlv_22=null;
        Token otherlv_24=null;
        AntlrDatatypeRuleToken lv_item_3_0 = null;

        AntlrDatatypeRuleToken lv_icon_7_0 = null;

        EObject lv_LabelColor_11_0 = null;

        EObject lv_LabelColor_13_0 = null;

        EObject lv_ValueColor_16_0 = null;

        EObject lv_ValueColor_18_0 = null;

        EObject lv_Visibility_21_0 = null;

        EObject lv_Visibility_23_0 = null;


         enterRule(); 
            
        try {
            // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:5243:28: ( (otherlv_0= 'Colorpicker' ( ( ( ( ({...}? => ( ({...}? => (otherlv_2= 'item=' ( (lv_item_3_0= ruleItemRef ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= 'label=' ( ( (lv_label_5_1= RULE_ID | lv_label_5_2= RULE_STRING ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= 'icon=' ( (lv_icon_7_0= ruleIcon ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_8= 'sendFrequency=' ( (lv_frequency_9_0= RULE_INT ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= 'labelcolor=[' ( ( (lv_LabelColor_11_0= ruleColorArray ) ) (otherlv_12= ',' ( (lv_LabelColor_13_0= ruleColorArray ) ) )* otherlv_14= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_15= 'valuecolor=[' ( ( (lv_ValueColor_16_0= ruleColorArray ) ) (otherlv_17= ',' ( (lv_ValueColor_18_0= ruleColorArray ) ) )* otherlv_19= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_20= 'visibility=[' ( ( (lv_Visibility_21_0= ruleVisibilityRule ) ) (otherlv_22= ',' ( (lv_Visibility_23_0= ruleVisibilityRule ) ) )* otherlv_24= ']' ) ) ) ) ) )+ {...}?) ) ) ) )
            // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:5244:1: (otherlv_0= 'Colorpicker' ( ( ( ( ({...}? => ( ({...}? => (otherlv_2= 'item=' ( (lv_item_3_0= ruleItemRef ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= 'label=' ( ( (lv_label_5_1= RULE_ID | lv_label_5_2= RULE_STRING ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= 'icon=' ( (lv_icon_7_0= ruleIcon ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_8= 'sendFrequency=' ( (lv_frequency_9_0= RULE_INT ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= 'labelcolor=[' ( ( (lv_LabelColor_11_0= ruleColorArray ) ) (otherlv_12= ',' ( (lv_LabelColor_13_0= ruleColorArray ) ) )* otherlv_14= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_15= 'valuecolor=[' ( ( (lv_ValueColor_16_0= ruleColorArray ) ) (otherlv_17= ',' ( (lv_ValueColor_18_0= ruleColorArray ) ) )* otherlv_19= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_20= 'visibility=[' ( ( (lv_Visibility_21_0= ruleVisibilityRule ) ) (otherlv_22= ',' ( (lv_Visibility_23_0= ruleVisibilityRule ) ) )* otherlv_24= ']' ) ) ) ) ) )+ {...}?) ) ) )
            {
            // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:5244:1: (otherlv_0= 'Colorpicker' ( ( ( ( ({...}? => ( ({...}? => (otherlv_2= 'item=' ( (lv_item_3_0= ruleItemRef ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= 'label=' ( ( (lv_label_5_1= RULE_ID | lv_label_5_2= RULE_STRING ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= 'icon=' ( (lv_icon_7_0= ruleIcon ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_8= 'sendFrequency=' ( (lv_frequency_9_0= RULE_INT ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= 'labelcolor=[' ( ( (lv_LabelColor_11_0= ruleColorArray ) ) (otherlv_12= ',' ( (lv_LabelColor_13_0= ruleColorArray ) ) )* otherlv_14= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_15= 'valuecolor=[' ( ( (lv_ValueColor_16_0= ruleColorArray ) ) (otherlv_17= ',' ( (lv_ValueColor_18_0= ruleColorArray ) ) )* otherlv_19= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_20= 'visibility=[' ( ( (lv_Visibility_21_0= ruleVisibilityRule ) ) (otherlv_22= ',' ( (lv_Visibility_23_0= ruleVisibilityRule ) ) )* otherlv_24= ']' ) ) ) ) ) )+ {...}?) ) ) )
            // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:5244:3: otherlv_0= 'Colorpicker' ( ( ( ( ({...}? => ( ({...}? => (otherlv_2= 'item=' ( (lv_item_3_0= ruleItemRef ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= 'label=' ( ( (lv_label_5_1= RULE_ID | lv_label_5_2= RULE_STRING ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= 'icon=' ( (lv_icon_7_0= ruleIcon ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_8= 'sendFrequency=' ( (lv_frequency_9_0= RULE_INT ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= 'labelcolor=[' ( ( (lv_LabelColor_11_0= ruleColorArray ) ) (otherlv_12= ',' ( (lv_LabelColor_13_0= ruleColorArray ) ) )* otherlv_14= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_15= 'valuecolor=[' ( ( (lv_ValueColor_16_0= ruleColorArray ) ) (otherlv_17= ',' ( (lv_ValueColor_18_0= ruleColorArray ) ) )* otherlv_19= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_20= 'visibility=[' ( ( (lv_Visibility_21_0= ruleVisibilityRule ) ) (otherlv_22= ',' ( (lv_Visibility_23_0= ruleVisibilityRule ) ) )* otherlv_24= ']' ) ) ) ) ) )+ {...}?) ) )
            {
            otherlv_0=(Token)match(input,49,FOLLOW_49_in_ruleColorpicker12760); 

                	newLeafNode(otherlv_0, grammarAccess.getColorpickerAccess().getColorpickerKeyword_0());
                
            // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:5248:1: ( ( ( ( ({...}? => ( ({...}? => (otherlv_2= 'item=' ( (lv_item_3_0= ruleItemRef ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= 'label=' ( ( (lv_label_5_1= RULE_ID | lv_label_5_2= RULE_STRING ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= 'icon=' ( (lv_icon_7_0= ruleIcon ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_8= 'sendFrequency=' ( (lv_frequency_9_0= RULE_INT ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= 'labelcolor=[' ( ( (lv_LabelColor_11_0= ruleColorArray ) ) (otherlv_12= ',' ( (lv_LabelColor_13_0= ruleColorArray ) ) )* otherlv_14= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_15= 'valuecolor=[' ( ( (lv_ValueColor_16_0= ruleColorArray ) ) (otherlv_17= ',' ( (lv_ValueColor_18_0= ruleColorArray ) ) )* otherlv_19= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_20= 'visibility=[' ( ( (lv_Visibility_21_0= ruleVisibilityRule ) ) (otherlv_22= ',' ( (lv_Visibility_23_0= ruleVisibilityRule ) ) )* otherlv_24= ']' ) ) ) ) ) )+ {...}?) ) )
            // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:5250:1: ( ( ( ({...}? => ( ({...}? => (otherlv_2= 'item=' ( (lv_item_3_0= ruleItemRef ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= 'label=' ( ( (lv_label_5_1= RULE_ID | lv_label_5_2= RULE_STRING ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= 'icon=' ( (lv_icon_7_0= ruleIcon ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_8= 'sendFrequency=' ( (lv_frequency_9_0= RULE_INT ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= 'labelcolor=[' ( ( (lv_LabelColor_11_0= ruleColorArray ) ) (otherlv_12= ',' ( (lv_LabelColor_13_0= ruleColorArray ) ) )* otherlv_14= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_15= 'valuecolor=[' ( ( (lv_ValueColor_16_0= ruleColorArray ) ) (otherlv_17= ',' ( (lv_ValueColor_18_0= ruleColorArray ) ) )* otherlv_19= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_20= 'visibility=[' ( ( (lv_Visibility_21_0= ruleVisibilityRule ) ) (otherlv_22= ',' ( (lv_Visibility_23_0= ruleVisibilityRule ) ) )* otherlv_24= ']' ) ) ) ) ) )+ {...}?) )
            {
            // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:5250:1: ( ( ( ({...}? => ( ({...}? => (otherlv_2= 'item=' ( (lv_item_3_0= ruleItemRef ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= 'label=' ( ( (lv_label_5_1= RULE_ID | lv_label_5_2= RULE_STRING ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= 'icon=' ( (lv_icon_7_0= ruleIcon ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_8= 'sendFrequency=' ( (lv_frequency_9_0= RULE_INT ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= 'labelcolor=[' ( ( (lv_LabelColor_11_0= ruleColorArray ) ) (otherlv_12= ',' ( (lv_LabelColor_13_0= ruleColorArray ) ) )* otherlv_14= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_15= 'valuecolor=[' ( ( (lv_ValueColor_16_0= ruleColorArray ) ) (otherlv_17= ',' ( (lv_ValueColor_18_0= ruleColorArray ) ) )* otherlv_19= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_20= 'visibility=[' ( ( (lv_Visibility_21_0= ruleVisibilityRule ) ) (otherlv_22= ',' ( (lv_Visibility_23_0= ruleVisibilityRule ) ) )* otherlv_24= ']' ) ) ) ) ) )+ {...}?) )
            // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:5251:2: ( ( ({...}? => ( ({...}? => (otherlv_2= 'item=' ( (lv_item_3_0= ruleItemRef ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= 'label=' ( ( (lv_label_5_1= RULE_ID | lv_label_5_2= RULE_STRING ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= 'icon=' ( (lv_icon_7_0= ruleIcon ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_8= 'sendFrequency=' ( (lv_frequency_9_0= RULE_INT ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= 'labelcolor=[' ( ( (lv_LabelColor_11_0= ruleColorArray ) ) (otherlv_12= ',' ( (lv_LabelColor_13_0= ruleColorArray ) ) )* otherlv_14= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_15= 'valuecolor=[' ( ( (lv_ValueColor_16_0= ruleColorArray ) ) (otherlv_17= ',' ( (lv_ValueColor_18_0= ruleColorArray ) ) )* otherlv_19= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_20= 'visibility=[' ( ( (lv_Visibility_21_0= ruleVisibilityRule ) ) (otherlv_22= ',' ( (lv_Visibility_23_0= ruleVisibilityRule ) ) )* otherlv_24= ']' ) ) ) ) ) )+ {...}?)
            {
             
            	  getUnorderedGroupHelper().enter(grammarAccess.getColorpickerAccess().getUnorderedGroup_1());
            	
            // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:5254:2: ( ( ({...}? => ( ({...}? => (otherlv_2= 'item=' ( (lv_item_3_0= ruleItemRef ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= 'label=' ( ( (lv_label_5_1= RULE_ID | lv_label_5_2= RULE_STRING ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= 'icon=' ( (lv_icon_7_0= ruleIcon ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_8= 'sendFrequency=' ( (lv_frequency_9_0= RULE_INT ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= 'labelcolor=[' ( ( (lv_LabelColor_11_0= ruleColorArray ) ) (otherlv_12= ',' ( (lv_LabelColor_13_0= ruleColorArray ) ) )* otherlv_14= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_15= 'valuecolor=[' ( ( (lv_ValueColor_16_0= ruleColorArray ) ) (otherlv_17= ',' ( (lv_ValueColor_18_0= ruleColorArray ) ) )* otherlv_19= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_20= 'visibility=[' ( ( (lv_Visibility_21_0= ruleVisibilityRule ) ) (otherlv_22= ',' ( (lv_Visibility_23_0= ruleVisibilityRule ) ) )* otherlv_24= ']' ) ) ) ) ) )+ {...}?)
            // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:5255:3: ( ({...}? => ( ({...}? => (otherlv_2= 'item=' ( (lv_item_3_0= ruleItemRef ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= 'label=' ( ( (lv_label_5_1= RULE_ID | lv_label_5_2= RULE_STRING ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= 'icon=' ( (lv_icon_7_0= ruleIcon ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_8= 'sendFrequency=' ( (lv_frequency_9_0= RULE_INT ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= 'labelcolor=[' ( ( (lv_LabelColor_11_0= ruleColorArray ) ) (otherlv_12= ',' ( (lv_LabelColor_13_0= ruleColorArray ) ) )* otherlv_14= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_15= 'valuecolor=[' ( ( (lv_ValueColor_16_0= ruleColorArray ) ) (otherlv_17= ',' ( (lv_ValueColor_18_0= ruleColorArray ) ) )* otherlv_19= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_20= 'visibility=[' ( ( (lv_Visibility_21_0= ruleVisibilityRule ) ) (otherlv_22= ',' ( (lv_Visibility_23_0= ruleVisibilityRule ) ) )* otherlv_24= ']' ) ) ) ) ) )+ {...}?
            {
            // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:5255:3: ( ({...}? => ( ({...}? => (otherlv_2= 'item=' ( (lv_item_3_0= ruleItemRef ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= 'label=' ( ( (lv_label_5_1= RULE_ID | lv_label_5_2= RULE_STRING ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= 'icon=' ( (lv_icon_7_0= ruleIcon ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_8= 'sendFrequency=' ( (lv_frequency_9_0= RULE_INT ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= 'labelcolor=[' ( ( (lv_LabelColor_11_0= ruleColorArray ) ) (otherlv_12= ',' ( (lv_LabelColor_13_0= ruleColorArray ) ) )* otherlv_14= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_15= 'valuecolor=[' ( ( (lv_ValueColor_16_0= ruleColorArray ) ) (otherlv_17= ',' ( (lv_ValueColor_18_0= ruleColorArray ) ) )* otherlv_19= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_20= 'visibility=[' ( ( (lv_Visibility_21_0= ruleVisibilityRule ) ) (otherlv_22= ',' ( (lv_Visibility_23_0= ruleVisibilityRule ) ) )* otherlv_24= ']' ) ) ) ) ) )+
            int cnt77=0;
            loop77:
            do {
                int alt77=8;
                int LA77_0 = input.LA(1);

                if ( LA77_0 ==18 && getUnorderedGroupHelper().canSelect(grammarAccess.getColorpickerAccess().getUnorderedGroup_1(), 0) ) {
                    alt77=1;
                }
                else if ( LA77_0 ==13 && getUnorderedGroupHelper().canSelect(grammarAccess.getColorpickerAccess().getUnorderedGroup_1(), 1) ) {
                    alt77=2;
                }
                else if ( LA77_0 ==14 && getUnorderedGroupHelper().canSelect(grammarAccess.getColorpickerAccess().getUnorderedGroup_1(), 2) ) {
                    alt77=3;
                }
                else if ( LA77_0 ==40 && getUnorderedGroupHelper().canSelect(grammarAccess.getColorpickerAccess().getUnorderedGroup_1(), 3) ) {
                    alt77=4;
                }
                else if ( LA77_0 ==19 && getUnorderedGroupHelper().canSelect(grammarAccess.getColorpickerAccess().getUnorderedGroup_1(), 4) ) {
                    alt77=5;
                }
                else if ( LA77_0 ==22 && getUnorderedGroupHelper().canSelect(grammarAccess.getColorpickerAccess().getUnorderedGroup_1(), 5) ) {
                    alt77=6;
                }
                else if ( LA77_0 ==23 && getUnorderedGroupHelper().canSelect(grammarAccess.getColorpickerAccess().getUnorderedGroup_1(), 6) ) {
                    alt77=7;
                }


                switch (alt77) {
            	case 1 :
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:5257:4: ({...}? => ( ({...}? => (otherlv_2= 'item=' ( (lv_item_3_0= ruleItemRef ) ) ) ) ) )
            	    {
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:5257:4: ({...}? => ( ({...}? => (otherlv_2= 'item=' ( (lv_item_3_0= ruleItemRef ) ) ) ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:5258:5: {...}? => ( ({...}? => (otherlv_2= 'item=' ( (lv_item_3_0= ruleItemRef ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getColorpickerAccess().getUnorderedGroup_1(), 0) ) {
            	        throw new FailedPredicateException(input, "ruleColorpicker", "getUnorderedGroupHelper().canSelect(grammarAccess.getColorpickerAccess().getUnorderedGroup_1(), 0)");
            	    }
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:5258:108: ( ({...}? => (otherlv_2= 'item=' ( (lv_item_3_0= ruleItemRef ) ) ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:5259:6: ({...}? => (otherlv_2= 'item=' ( (lv_item_3_0= ruleItemRef ) ) ) )
            	    {
            	     
            	    	 				  getUnorderedGroupHelper().select(grammarAccess.getColorpickerAccess().getUnorderedGroup_1(), 0);
            	    	 				
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:5262:6: ({...}? => (otherlv_2= 'item=' ( (lv_item_3_0= ruleItemRef ) ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:5262:7: {...}? => (otherlv_2= 'item=' ( (lv_item_3_0= ruleItemRef ) ) )
            	    {
            	    if ( !((true)) ) {
            	        throw new FailedPredicateException(input, "ruleColorpicker", "true");
            	    }
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:5262:16: (otherlv_2= 'item=' ( (lv_item_3_0= ruleItemRef ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:5262:18: otherlv_2= 'item=' ( (lv_item_3_0= ruleItemRef ) )
            	    {
            	    otherlv_2=(Token)match(input,18,FOLLOW_18_in_ruleColorpicker12818); 

            	        	newLeafNode(otherlv_2, grammarAccess.getColorpickerAccess().getItemKeyword_1_0_0());
            	        
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:5266:1: ( (lv_item_3_0= ruleItemRef ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:5267:1: (lv_item_3_0= ruleItemRef )
            	    {
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:5267:1: (lv_item_3_0= ruleItemRef )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:5268:3: lv_item_3_0= ruleItemRef
            	    {
            	     
            	    	        newCompositeNode(grammarAccess.getColorpickerAccess().getItemItemRefParserRuleCall_1_0_1_0()); 
            	    	    
            	    pushFollow(FOLLOW_ruleItemRef_in_ruleColorpicker12839);
            	    lv_item_3_0=ruleItemRef();

            	    state._fsp--;


            	    	        if (current==null) {
            	    	            current = createModelElementForParent(grammarAccess.getColorpickerRule());
            	    	        }
            	           		set(
            	           			current, 
            	           			"item",
            	            		lv_item_3_0, 
            	            		"ItemRef");
            	    	        afterParserOrEnumRuleCall();
            	    	    

            	    }


            	    }


            	    }


            	    }

            	     
            	    	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getColorpickerAccess().getUnorderedGroup_1());
            	    	 				

            	    }


            	    }


            	    }
            	    break;
            	case 2 :
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:5291:4: ({...}? => ( ({...}? => (otherlv_4= 'label=' ( ( (lv_label_5_1= RULE_ID | lv_label_5_2= RULE_STRING ) ) ) ) ) ) )
            	    {
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:5291:4: ({...}? => ( ({...}? => (otherlv_4= 'label=' ( ( (lv_label_5_1= RULE_ID | lv_label_5_2= RULE_STRING ) ) ) ) ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:5292:5: {...}? => ( ({...}? => (otherlv_4= 'label=' ( ( (lv_label_5_1= RULE_ID | lv_label_5_2= RULE_STRING ) ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getColorpickerAccess().getUnorderedGroup_1(), 1) ) {
            	        throw new FailedPredicateException(input, "ruleColorpicker", "getUnorderedGroupHelper().canSelect(grammarAccess.getColorpickerAccess().getUnorderedGroup_1(), 1)");
            	    }
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:5292:108: ( ({...}? => (otherlv_4= 'label=' ( ( (lv_label_5_1= RULE_ID | lv_label_5_2= RULE_STRING ) ) ) ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:5293:6: ({...}? => (otherlv_4= 'label=' ( ( (lv_label_5_1= RULE_ID | lv_label_5_2= RULE_STRING ) ) ) ) )
            	    {
            	     
            	    	 				  getUnorderedGroupHelper().select(grammarAccess.getColorpickerAccess().getUnorderedGroup_1(), 1);
            	    	 				
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:5296:6: ({...}? => (otherlv_4= 'label=' ( ( (lv_label_5_1= RULE_ID | lv_label_5_2= RULE_STRING ) ) ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:5296:7: {...}? => (otherlv_4= 'label=' ( ( (lv_label_5_1= RULE_ID | lv_label_5_2= RULE_STRING ) ) ) )
            	    {
            	    if ( !((true)) ) {
            	        throw new FailedPredicateException(input, "ruleColorpicker", "true");
            	    }
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:5296:16: (otherlv_4= 'label=' ( ( (lv_label_5_1= RULE_ID | lv_label_5_2= RULE_STRING ) ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:5296:18: otherlv_4= 'label=' ( ( (lv_label_5_1= RULE_ID | lv_label_5_2= RULE_STRING ) ) )
            	    {
            	    otherlv_4=(Token)match(input,13,FOLLOW_13_in_ruleColorpicker12907); 

            	        	newLeafNode(otherlv_4, grammarAccess.getColorpickerAccess().getLabelKeyword_1_1_0());
            	        
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:5300:1: ( ( (lv_label_5_1= RULE_ID | lv_label_5_2= RULE_STRING ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:5301:1: ( (lv_label_5_1= RULE_ID | lv_label_5_2= RULE_STRING ) )
            	    {
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:5301:1: ( (lv_label_5_1= RULE_ID | lv_label_5_2= RULE_STRING ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:5302:1: (lv_label_5_1= RULE_ID | lv_label_5_2= RULE_STRING )
            	    {
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:5302:1: (lv_label_5_1= RULE_ID | lv_label_5_2= RULE_STRING )
            	    int alt73=2;
            	    int LA73_0 = input.LA(1);

            	    if ( (LA73_0==RULE_ID) ) {
            	        alt73=1;
            	    }
            	    else if ( (LA73_0==RULE_STRING) ) {
            	        alt73=2;
            	    }
            	    else {
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 73, 0, input);

            	        throw nvae;
            	    }
            	    switch (alt73) {
            	        case 1 :
            	            // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:5303:3: lv_label_5_1= RULE_ID
            	            {
            	            lv_label_5_1=(Token)match(input,RULE_ID,FOLLOW_RULE_ID_in_ruleColorpicker12926); 

            	            			newLeafNode(lv_label_5_1, grammarAccess.getColorpickerAccess().getLabelIDTerminalRuleCall_1_1_1_0_0()); 
            	            		

            	            	        if (current==null) {
            	            	            current = createModelElement(grammarAccess.getColorpickerRule());
            	            	        }
            	                   		setWithLastConsumed(
            	                   			current, 
            	                   			"label",
            	                    		lv_label_5_1, 
            	                    		"ID");
            	            	    

            	            }
            	            break;
            	        case 2 :
            	            // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:5318:8: lv_label_5_2= RULE_STRING
            	            {
            	            lv_label_5_2=(Token)match(input,RULE_STRING,FOLLOW_RULE_STRING_in_ruleColorpicker12946); 

            	            			newLeafNode(lv_label_5_2, grammarAccess.getColorpickerAccess().getLabelSTRINGTerminalRuleCall_1_1_1_0_1()); 
            	            		

            	            	        if (current==null) {
            	            	            current = createModelElement(grammarAccess.getColorpickerRule());
            	            	        }
            	                   		setWithLastConsumed(
            	                   			current, 
            	                   			"label",
            	                    		lv_label_5_2, 
            	                    		"STRING");
            	            	    

            	            }
            	            break;

            	    }


            	    }


            	    }


            	    }


            	    }

            	     
            	    	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getColorpickerAccess().getUnorderedGroup_1());
            	    	 				

            	    }


            	    }


            	    }
            	    break;
            	case 3 :
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:5343:4: ({...}? => ( ({...}? => (otherlv_6= 'icon=' ( (lv_icon_7_0= ruleIcon ) ) ) ) ) )
            	    {
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:5343:4: ({...}? => ( ({...}? => (otherlv_6= 'icon=' ( (lv_icon_7_0= ruleIcon ) ) ) ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:5344:5: {...}? => ( ({...}? => (otherlv_6= 'icon=' ( (lv_icon_7_0= ruleIcon ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getColorpickerAccess().getUnorderedGroup_1(), 2) ) {
            	        throw new FailedPredicateException(input, "ruleColorpicker", "getUnorderedGroupHelper().canSelect(grammarAccess.getColorpickerAccess().getUnorderedGroup_1(), 2)");
            	    }
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:5344:108: ( ({...}? => (otherlv_6= 'icon=' ( (lv_icon_7_0= ruleIcon ) ) ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:5345:6: ({...}? => (otherlv_6= 'icon=' ( (lv_icon_7_0= ruleIcon ) ) ) )
            	    {
            	     
            	    	 				  getUnorderedGroupHelper().select(grammarAccess.getColorpickerAccess().getUnorderedGroup_1(), 2);
            	    	 				
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:5348:6: ({...}? => (otherlv_6= 'icon=' ( (lv_icon_7_0= ruleIcon ) ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:5348:7: {...}? => (otherlv_6= 'icon=' ( (lv_icon_7_0= ruleIcon ) ) )
            	    {
            	    if ( !((true)) ) {
            	        throw new FailedPredicateException(input, "ruleColorpicker", "true");
            	    }
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:5348:16: (otherlv_6= 'icon=' ( (lv_icon_7_0= ruleIcon ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:5348:18: otherlv_6= 'icon=' ( (lv_icon_7_0= ruleIcon ) )
            	    {
            	    otherlv_6=(Token)match(input,14,FOLLOW_14_in_ruleColorpicker13022); 

            	        	newLeafNode(otherlv_6, grammarAccess.getColorpickerAccess().getIconKeyword_1_2_0());
            	        
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:5352:1: ( (lv_icon_7_0= ruleIcon ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:5353:1: (lv_icon_7_0= ruleIcon )
            	    {
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:5353:1: (lv_icon_7_0= ruleIcon )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:5354:3: lv_icon_7_0= ruleIcon
            	    {
            	     
            	    	        newCompositeNode(grammarAccess.getColorpickerAccess().getIconIconParserRuleCall_1_2_1_0()); 
            	    	    
            	    pushFollow(FOLLOW_ruleIcon_in_ruleColorpicker13043);
            	    lv_icon_7_0=ruleIcon();

            	    state._fsp--;


            	    	        if (current==null) {
            	    	            current = createModelElementForParent(grammarAccess.getColorpickerRule());
            	    	        }
            	           		set(
            	           			current, 
            	           			"icon",
            	            		lv_icon_7_0, 
            	            		"Icon");
            	    	        afterParserOrEnumRuleCall();
            	    	    

            	    }


            	    }


            	    }


            	    }

            	     
            	    	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getColorpickerAccess().getUnorderedGroup_1());
            	    	 				

            	    }


            	    }


            	    }
            	    break;
            	case 4 :
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:5377:4: ({...}? => ( ({...}? => (otherlv_8= 'sendFrequency=' ( (lv_frequency_9_0= RULE_INT ) ) ) ) ) )
            	    {
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:5377:4: ({...}? => ( ({...}? => (otherlv_8= 'sendFrequency=' ( (lv_frequency_9_0= RULE_INT ) ) ) ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:5378:5: {...}? => ( ({...}? => (otherlv_8= 'sendFrequency=' ( (lv_frequency_9_0= RULE_INT ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getColorpickerAccess().getUnorderedGroup_1(), 3) ) {
            	        throw new FailedPredicateException(input, "ruleColorpicker", "getUnorderedGroupHelper().canSelect(grammarAccess.getColorpickerAccess().getUnorderedGroup_1(), 3)");
            	    }
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:5378:108: ( ({...}? => (otherlv_8= 'sendFrequency=' ( (lv_frequency_9_0= RULE_INT ) ) ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:5379:6: ({...}? => (otherlv_8= 'sendFrequency=' ( (lv_frequency_9_0= RULE_INT ) ) ) )
            	    {
            	     
            	    	 				  getUnorderedGroupHelper().select(grammarAccess.getColorpickerAccess().getUnorderedGroup_1(), 3);
            	    	 				
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:5382:6: ({...}? => (otherlv_8= 'sendFrequency=' ( (lv_frequency_9_0= RULE_INT ) ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:5382:7: {...}? => (otherlv_8= 'sendFrequency=' ( (lv_frequency_9_0= RULE_INT ) ) )
            	    {
            	    if ( !((true)) ) {
            	        throw new FailedPredicateException(input, "ruleColorpicker", "true");
            	    }
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:5382:16: (otherlv_8= 'sendFrequency=' ( (lv_frequency_9_0= RULE_INT ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:5382:18: otherlv_8= 'sendFrequency=' ( (lv_frequency_9_0= RULE_INT ) )
            	    {
            	    otherlv_8=(Token)match(input,40,FOLLOW_40_in_ruleColorpicker13111); 

            	        	newLeafNode(otherlv_8, grammarAccess.getColorpickerAccess().getSendFrequencyKeyword_1_3_0());
            	        
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:5386:1: ( (lv_frequency_9_0= RULE_INT ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:5387:1: (lv_frequency_9_0= RULE_INT )
            	    {
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:5387:1: (lv_frequency_9_0= RULE_INT )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:5388:3: lv_frequency_9_0= RULE_INT
            	    {
            	    lv_frequency_9_0=(Token)match(input,RULE_INT,FOLLOW_RULE_INT_in_ruleColorpicker13128); 

            	    			newLeafNode(lv_frequency_9_0, grammarAccess.getColorpickerAccess().getFrequencyINTTerminalRuleCall_1_3_1_0()); 
            	    		

            	    	        if (current==null) {
            	    	            current = createModelElement(grammarAccess.getColorpickerRule());
            	    	        }
            	           		setWithLastConsumed(
            	           			current, 
            	           			"frequency",
            	            		lv_frequency_9_0, 
            	            		"INT");
            	    	    

            	    }


            	    }


            	    }


            	    }

            	     
            	    	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getColorpickerAccess().getUnorderedGroup_1());
            	    	 				

            	    }


            	    }


            	    }
            	    break;
            	case 5 :
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:5411:4: ({...}? => ( ({...}? => (otherlv_10= 'labelcolor=[' ( ( (lv_LabelColor_11_0= ruleColorArray ) ) (otherlv_12= ',' ( (lv_LabelColor_13_0= ruleColorArray ) ) )* otherlv_14= ']' ) ) ) ) )
            	    {
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:5411:4: ({...}? => ( ({...}? => (otherlv_10= 'labelcolor=[' ( ( (lv_LabelColor_11_0= ruleColorArray ) ) (otherlv_12= ',' ( (lv_LabelColor_13_0= ruleColorArray ) ) )* otherlv_14= ']' ) ) ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:5412:5: {...}? => ( ({...}? => (otherlv_10= 'labelcolor=[' ( ( (lv_LabelColor_11_0= ruleColorArray ) ) (otherlv_12= ',' ( (lv_LabelColor_13_0= ruleColorArray ) ) )* otherlv_14= ']' ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getColorpickerAccess().getUnorderedGroup_1(), 4) ) {
            	        throw new FailedPredicateException(input, "ruleColorpicker", "getUnorderedGroupHelper().canSelect(grammarAccess.getColorpickerAccess().getUnorderedGroup_1(), 4)");
            	    }
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:5412:108: ( ({...}? => (otherlv_10= 'labelcolor=[' ( ( (lv_LabelColor_11_0= ruleColorArray ) ) (otherlv_12= ',' ( (lv_LabelColor_13_0= ruleColorArray ) ) )* otherlv_14= ']' ) ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:5413:6: ({...}? => (otherlv_10= 'labelcolor=[' ( ( (lv_LabelColor_11_0= ruleColorArray ) ) (otherlv_12= ',' ( (lv_LabelColor_13_0= ruleColorArray ) ) )* otherlv_14= ']' ) ) )
            	    {
            	     
            	    	 				  getUnorderedGroupHelper().select(grammarAccess.getColorpickerAccess().getUnorderedGroup_1(), 4);
            	    	 				
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:5416:6: ({...}? => (otherlv_10= 'labelcolor=[' ( ( (lv_LabelColor_11_0= ruleColorArray ) ) (otherlv_12= ',' ( (lv_LabelColor_13_0= ruleColorArray ) ) )* otherlv_14= ']' ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:5416:7: {...}? => (otherlv_10= 'labelcolor=[' ( ( (lv_LabelColor_11_0= ruleColorArray ) ) (otherlv_12= ',' ( (lv_LabelColor_13_0= ruleColorArray ) ) )* otherlv_14= ']' ) )
            	    {
            	    if ( !((true)) ) {
            	        throw new FailedPredicateException(input, "ruleColorpicker", "true");
            	    }
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:5416:16: (otherlv_10= 'labelcolor=[' ( ( (lv_LabelColor_11_0= ruleColorArray ) ) (otherlv_12= ',' ( (lv_LabelColor_13_0= ruleColorArray ) ) )* otherlv_14= ']' ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:5416:18: otherlv_10= 'labelcolor=[' ( ( (lv_LabelColor_11_0= ruleColorArray ) ) (otherlv_12= ',' ( (lv_LabelColor_13_0= ruleColorArray ) ) )* otherlv_14= ']' )
            	    {
            	    otherlv_10=(Token)match(input,19,FOLLOW_19_in_ruleColorpicker13201); 

            	        	newLeafNode(otherlv_10, grammarAccess.getColorpickerAccess().getLabelcolorKeyword_1_4_0());
            	        
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:5420:1: ( ( (lv_LabelColor_11_0= ruleColorArray ) ) (otherlv_12= ',' ( (lv_LabelColor_13_0= ruleColorArray ) ) )* otherlv_14= ']' )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:5420:2: ( (lv_LabelColor_11_0= ruleColorArray ) ) (otherlv_12= ',' ( (lv_LabelColor_13_0= ruleColorArray ) ) )* otherlv_14= ']'
            	    {
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:5420:2: ( (lv_LabelColor_11_0= ruleColorArray ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:5421:1: (lv_LabelColor_11_0= ruleColorArray )
            	    {
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:5421:1: (lv_LabelColor_11_0= ruleColorArray )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:5422:3: lv_LabelColor_11_0= ruleColorArray
            	    {
            	     
            	    	        newCompositeNode(grammarAccess.getColorpickerAccess().getLabelColorColorArrayParserRuleCall_1_4_1_0_0()); 
            	    	    
            	    pushFollow(FOLLOW_ruleColorArray_in_ruleColorpicker13223);
            	    lv_LabelColor_11_0=ruleColorArray();

            	    state._fsp--;


            	    	        if (current==null) {
            	    	            current = createModelElementForParent(grammarAccess.getColorpickerRule());
            	    	        }
            	           		add(
            	           			current, 
            	           			"LabelColor",
            	            		lv_LabelColor_11_0, 
            	            		"ColorArray");
            	    	        afterParserOrEnumRuleCall();
            	    	    

            	    }


            	    }

            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:5438:2: (otherlv_12= ',' ( (lv_LabelColor_13_0= ruleColorArray ) ) )*
            	    loop74:
            	    do {
            	        int alt74=2;
            	        int LA74_0 = input.LA(1);

            	        if ( (LA74_0==20) ) {
            	            alt74=1;
            	        }


            	        switch (alt74) {
            	    	case 1 :
            	    	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:5438:4: otherlv_12= ',' ( (lv_LabelColor_13_0= ruleColorArray ) )
            	    	    {
            	    	    otherlv_12=(Token)match(input,20,FOLLOW_20_in_ruleColorpicker13236); 

            	    	        	newLeafNode(otherlv_12, grammarAccess.getColorpickerAccess().getCommaKeyword_1_4_1_1_0());
            	    	        
            	    	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:5442:1: ( (lv_LabelColor_13_0= ruleColorArray ) )
            	    	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:5443:1: (lv_LabelColor_13_0= ruleColorArray )
            	    	    {
            	    	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:5443:1: (lv_LabelColor_13_0= ruleColorArray )
            	    	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:5444:3: lv_LabelColor_13_0= ruleColorArray
            	    	    {
            	    	     
            	    	    	        newCompositeNode(grammarAccess.getColorpickerAccess().getLabelColorColorArrayParserRuleCall_1_4_1_1_1_0()); 
            	    	    	    
            	    	    pushFollow(FOLLOW_ruleColorArray_in_ruleColorpicker13257);
            	    	    lv_LabelColor_13_0=ruleColorArray();

            	    	    state._fsp--;


            	    	    	        if (current==null) {
            	    	    	            current = createModelElementForParent(grammarAccess.getColorpickerRule());
            	    	    	        }
            	    	           		add(
            	    	           			current, 
            	    	           			"LabelColor",
            	    	            		lv_LabelColor_13_0, 
            	    	            		"ColorArray");
            	    	    	        afterParserOrEnumRuleCall();
            	    	    	    

            	    	    }


            	    	    }


            	    	    }
            	    	    break;

            	    	default :
            	    	    break loop74;
            	        }
            	    } while (true);

            	    otherlv_14=(Token)match(input,21,FOLLOW_21_in_ruleColorpicker13271); 

            	        	newLeafNode(otherlv_14, grammarAccess.getColorpickerAccess().getRightSquareBracketKeyword_1_4_1_2());
            	        

            	    }


            	    }


            	    }

            	     
            	    	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getColorpickerAccess().getUnorderedGroup_1());
            	    	 				

            	    }


            	    }


            	    }
            	    break;
            	case 6 :
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:5471:4: ({...}? => ( ({...}? => (otherlv_15= 'valuecolor=[' ( ( (lv_ValueColor_16_0= ruleColorArray ) ) (otherlv_17= ',' ( (lv_ValueColor_18_0= ruleColorArray ) ) )* otherlv_19= ']' ) ) ) ) )
            	    {
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:5471:4: ({...}? => ( ({...}? => (otherlv_15= 'valuecolor=[' ( ( (lv_ValueColor_16_0= ruleColorArray ) ) (otherlv_17= ',' ( (lv_ValueColor_18_0= ruleColorArray ) ) )* otherlv_19= ']' ) ) ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:5472:5: {...}? => ( ({...}? => (otherlv_15= 'valuecolor=[' ( ( (lv_ValueColor_16_0= ruleColorArray ) ) (otherlv_17= ',' ( (lv_ValueColor_18_0= ruleColorArray ) ) )* otherlv_19= ']' ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getColorpickerAccess().getUnorderedGroup_1(), 5) ) {
            	        throw new FailedPredicateException(input, "ruleColorpicker", "getUnorderedGroupHelper().canSelect(grammarAccess.getColorpickerAccess().getUnorderedGroup_1(), 5)");
            	    }
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:5472:108: ( ({...}? => (otherlv_15= 'valuecolor=[' ( ( (lv_ValueColor_16_0= ruleColorArray ) ) (otherlv_17= ',' ( (lv_ValueColor_18_0= ruleColorArray ) ) )* otherlv_19= ']' ) ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:5473:6: ({...}? => (otherlv_15= 'valuecolor=[' ( ( (lv_ValueColor_16_0= ruleColorArray ) ) (otherlv_17= ',' ( (lv_ValueColor_18_0= ruleColorArray ) ) )* otherlv_19= ']' ) ) )
            	    {
            	     
            	    	 				  getUnorderedGroupHelper().select(grammarAccess.getColorpickerAccess().getUnorderedGroup_1(), 5);
            	    	 				
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:5476:6: ({...}? => (otherlv_15= 'valuecolor=[' ( ( (lv_ValueColor_16_0= ruleColorArray ) ) (otherlv_17= ',' ( (lv_ValueColor_18_0= ruleColorArray ) ) )* otherlv_19= ']' ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:5476:7: {...}? => (otherlv_15= 'valuecolor=[' ( ( (lv_ValueColor_16_0= ruleColorArray ) ) (otherlv_17= ',' ( (lv_ValueColor_18_0= ruleColorArray ) ) )* otherlv_19= ']' ) )
            	    {
            	    if ( !((true)) ) {
            	        throw new FailedPredicateException(input, "ruleColorpicker", "true");
            	    }
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:5476:16: (otherlv_15= 'valuecolor=[' ( ( (lv_ValueColor_16_0= ruleColorArray ) ) (otherlv_17= ',' ( (lv_ValueColor_18_0= ruleColorArray ) ) )* otherlv_19= ']' ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:5476:18: otherlv_15= 'valuecolor=[' ( ( (lv_ValueColor_16_0= ruleColorArray ) ) (otherlv_17= ',' ( (lv_ValueColor_18_0= ruleColorArray ) ) )* otherlv_19= ']' )
            	    {
            	    otherlv_15=(Token)match(input,22,FOLLOW_22_in_ruleColorpicker13340); 

            	        	newLeafNode(otherlv_15, grammarAccess.getColorpickerAccess().getValuecolorKeyword_1_5_0());
            	        
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:5480:1: ( ( (lv_ValueColor_16_0= ruleColorArray ) ) (otherlv_17= ',' ( (lv_ValueColor_18_0= ruleColorArray ) ) )* otherlv_19= ']' )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:5480:2: ( (lv_ValueColor_16_0= ruleColorArray ) ) (otherlv_17= ',' ( (lv_ValueColor_18_0= ruleColorArray ) ) )* otherlv_19= ']'
            	    {
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:5480:2: ( (lv_ValueColor_16_0= ruleColorArray ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:5481:1: (lv_ValueColor_16_0= ruleColorArray )
            	    {
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:5481:1: (lv_ValueColor_16_0= ruleColorArray )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:5482:3: lv_ValueColor_16_0= ruleColorArray
            	    {
            	     
            	    	        newCompositeNode(grammarAccess.getColorpickerAccess().getValueColorColorArrayParserRuleCall_1_5_1_0_0()); 
            	    	    
            	    pushFollow(FOLLOW_ruleColorArray_in_ruleColorpicker13362);
            	    lv_ValueColor_16_0=ruleColorArray();

            	    state._fsp--;


            	    	        if (current==null) {
            	    	            current = createModelElementForParent(grammarAccess.getColorpickerRule());
            	    	        }
            	           		add(
            	           			current, 
            	           			"ValueColor",
            	            		lv_ValueColor_16_0, 
            	            		"ColorArray");
            	    	        afterParserOrEnumRuleCall();
            	    	    

            	    }


            	    }

            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:5498:2: (otherlv_17= ',' ( (lv_ValueColor_18_0= ruleColorArray ) ) )*
            	    loop75:
            	    do {
            	        int alt75=2;
            	        int LA75_0 = input.LA(1);

            	        if ( (LA75_0==20) ) {
            	            alt75=1;
            	        }


            	        switch (alt75) {
            	    	case 1 :
            	    	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:5498:4: otherlv_17= ',' ( (lv_ValueColor_18_0= ruleColorArray ) )
            	    	    {
            	    	    otherlv_17=(Token)match(input,20,FOLLOW_20_in_ruleColorpicker13375); 

            	    	        	newLeafNode(otherlv_17, grammarAccess.getColorpickerAccess().getCommaKeyword_1_5_1_1_0());
            	    	        
            	    	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:5502:1: ( (lv_ValueColor_18_0= ruleColorArray ) )
            	    	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:5503:1: (lv_ValueColor_18_0= ruleColorArray )
            	    	    {
            	    	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:5503:1: (lv_ValueColor_18_0= ruleColorArray )
            	    	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:5504:3: lv_ValueColor_18_0= ruleColorArray
            	    	    {
            	    	     
            	    	    	        newCompositeNode(grammarAccess.getColorpickerAccess().getValueColorColorArrayParserRuleCall_1_5_1_1_1_0()); 
            	    	    	    
            	    	    pushFollow(FOLLOW_ruleColorArray_in_ruleColorpicker13396);
            	    	    lv_ValueColor_18_0=ruleColorArray();

            	    	    state._fsp--;


            	    	    	        if (current==null) {
            	    	    	            current = createModelElementForParent(grammarAccess.getColorpickerRule());
            	    	    	        }
            	    	           		add(
            	    	           			current, 
            	    	           			"ValueColor",
            	    	            		lv_ValueColor_18_0, 
            	    	            		"ColorArray");
            	    	    	        afterParserOrEnumRuleCall();
            	    	    	    

            	    	    }


            	    	    }


            	    	    }
            	    	    break;

            	    	default :
            	    	    break loop75;
            	        }
            	    } while (true);

            	    otherlv_19=(Token)match(input,21,FOLLOW_21_in_ruleColorpicker13410); 

            	        	newLeafNode(otherlv_19, grammarAccess.getColorpickerAccess().getRightSquareBracketKeyword_1_5_1_2());
            	        

            	    }


            	    }


            	    }

            	     
            	    	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getColorpickerAccess().getUnorderedGroup_1());
            	    	 				

            	    }


            	    }


            	    }
            	    break;
            	case 7 :
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:5531:4: ({...}? => ( ({...}? => (otherlv_20= 'visibility=[' ( ( (lv_Visibility_21_0= ruleVisibilityRule ) ) (otherlv_22= ',' ( (lv_Visibility_23_0= ruleVisibilityRule ) ) )* otherlv_24= ']' ) ) ) ) )
            	    {
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:5531:4: ({...}? => ( ({...}? => (otherlv_20= 'visibility=[' ( ( (lv_Visibility_21_0= ruleVisibilityRule ) ) (otherlv_22= ',' ( (lv_Visibility_23_0= ruleVisibilityRule ) ) )* otherlv_24= ']' ) ) ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:5532:5: {...}? => ( ({...}? => (otherlv_20= 'visibility=[' ( ( (lv_Visibility_21_0= ruleVisibilityRule ) ) (otherlv_22= ',' ( (lv_Visibility_23_0= ruleVisibilityRule ) ) )* otherlv_24= ']' ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getColorpickerAccess().getUnorderedGroup_1(), 6) ) {
            	        throw new FailedPredicateException(input, "ruleColorpicker", "getUnorderedGroupHelper().canSelect(grammarAccess.getColorpickerAccess().getUnorderedGroup_1(), 6)");
            	    }
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:5532:108: ( ({...}? => (otherlv_20= 'visibility=[' ( ( (lv_Visibility_21_0= ruleVisibilityRule ) ) (otherlv_22= ',' ( (lv_Visibility_23_0= ruleVisibilityRule ) ) )* otherlv_24= ']' ) ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:5533:6: ({...}? => (otherlv_20= 'visibility=[' ( ( (lv_Visibility_21_0= ruleVisibilityRule ) ) (otherlv_22= ',' ( (lv_Visibility_23_0= ruleVisibilityRule ) ) )* otherlv_24= ']' ) ) )
            	    {
            	     
            	    	 				  getUnorderedGroupHelper().select(grammarAccess.getColorpickerAccess().getUnorderedGroup_1(), 6);
            	    	 				
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:5536:6: ({...}? => (otherlv_20= 'visibility=[' ( ( (lv_Visibility_21_0= ruleVisibilityRule ) ) (otherlv_22= ',' ( (lv_Visibility_23_0= ruleVisibilityRule ) ) )* otherlv_24= ']' ) ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:5536:7: {...}? => (otherlv_20= 'visibility=[' ( ( (lv_Visibility_21_0= ruleVisibilityRule ) ) (otherlv_22= ',' ( (lv_Visibility_23_0= ruleVisibilityRule ) ) )* otherlv_24= ']' ) )
            	    {
            	    if ( !((true)) ) {
            	        throw new FailedPredicateException(input, "ruleColorpicker", "true");
            	    }
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:5536:16: (otherlv_20= 'visibility=[' ( ( (lv_Visibility_21_0= ruleVisibilityRule ) ) (otherlv_22= ',' ( (lv_Visibility_23_0= ruleVisibilityRule ) ) )* otherlv_24= ']' ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:5536:18: otherlv_20= 'visibility=[' ( ( (lv_Visibility_21_0= ruleVisibilityRule ) ) (otherlv_22= ',' ( (lv_Visibility_23_0= ruleVisibilityRule ) ) )* otherlv_24= ']' )
            	    {
            	    otherlv_20=(Token)match(input,23,FOLLOW_23_in_ruleColorpicker13479); 

            	        	newLeafNode(otherlv_20, grammarAccess.getColorpickerAccess().getVisibilityKeyword_1_6_0());
            	        
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:5540:1: ( ( (lv_Visibility_21_0= ruleVisibilityRule ) ) (otherlv_22= ',' ( (lv_Visibility_23_0= ruleVisibilityRule ) ) )* otherlv_24= ']' )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:5540:2: ( (lv_Visibility_21_0= ruleVisibilityRule ) ) (otherlv_22= ',' ( (lv_Visibility_23_0= ruleVisibilityRule ) ) )* otherlv_24= ']'
            	    {
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:5540:2: ( (lv_Visibility_21_0= ruleVisibilityRule ) )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:5541:1: (lv_Visibility_21_0= ruleVisibilityRule )
            	    {
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:5541:1: (lv_Visibility_21_0= ruleVisibilityRule )
            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:5542:3: lv_Visibility_21_0= ruleVisibilityRule
            	    {
            	     
            	    	        newCompositeNode(grammarAccess.getColorpickerAccess().getVisibilityVisibilityRuleParserRuleCall_1_6_1_0_0()); 
            	    	    
            	    pushFollow(FOLLOW_ruleVisibilityRule_in_ruleColorpicker13501);
            	    lv_Visibility_21_0=ruleVisibilityRule();

            	    state._fsp--;


            	    	        if (current==null) {
            	    	            current = createModelElementForParent(grammarAccess.getColorpickerRule());
            	    	        }
            	           		add(
            	           			current, 
            	           			"Visibility",
            	            		lv_Visibility_21_0, 
            	            		"VisibilityRule");
            	    	        afterParserOrEnumRuleCall();
            	    	    

            	    }


            	    }

            	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:5558:2: (otherlv_22= ',' ( (lv_Visibility_23_0= ruleVisibilityRule ) ) )*
            	    loop76:
            	    do {
            	        int alt76=2;
            	        int LA76_0 = input.LA(1);

            	        if ( (LA76_0==20) ) {
            	            alt76=1;
            	        }


            	        switch (alt76) {
            	    	case 1 :
            	    	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:5558:4: otherlv_22= ',' ( (lv_Visibility_23_0= ruleVisibilityRule ) )
            	    	    {
            	    	    otherlv_22=(Token)match(input,20,FOLLOW_20_in_ruleColorpicker13514); 

            	    	        	newLeafNode(otherlv_22, grammarAccess.getColorpickerAccess().getCommaKeyword_1_6_1_1_0());
            	    	        
            	    	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:5562:1: ( (lv_Visibility_23_0= ruleVisibilityRule ) )
            	    	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:5563:1: (lv_Visibility_23_0= ruleVisibilityRule )
            	    	    {
            	    	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:5563:1: (lv_Visibility_23_0= ruleVisibilityRule )
            	    	    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:5564:3: lv_Visibility_23_0= ruleVisibilityRule
            	    	    {
            	    	     
            	    	    	        newCompositeNode(grammarAccess.getColorpickerAccess().getVisibilityVisibilityRuleParserRuleCall_1_6_1_1_1_0()); 
            	    	    	    
            	    	    pushFollow(FOLLOW_ruleVisibilityRule_in_ruleColorpicker13535);
            	    	    lv_Visibility_23_0=ruleVisibilityRule();

            	    	    state._fsp--;


            	    	    	        if (current==null) {
            	    	    	            current = createModelElementForParent(grammarAccess.getColorpickerRule());
            	    	    	        }
            	    	           		add(
            	    	           			current, 
            	    	           			"Visibility",
            	    	            		lv_Visibility_23_0, 
            	    	            		"VisibilityRule");
            	    	    	        afterParserOrEnumRuleCall();
            	    	    	    

            	    	    }


            	    	    }


            	    	    }
            	    	    break;

            	    	default :
            	    	    break loop76;
            	        }
            	    } while (true);

            	    otherlv_24=(Token)match(input,21,FOLLOW_21_in_ruleColorpicker13549); 

            	        	newLeafNode(otherlv_24, grammarAccess.getColorpickerAccess().getRightSquareBracketKeyword_1_6_1_2());
            	        

            	    }


            	    }


            	    }

            	     
            	    	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getColorpickerAccess().getUnorderedGroup_1());
            	    	 				

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    if ( cnt77 >= 1 ) break loop77;
                        EarlyExitException eee =
                            new EarlyExitException(77, input);
                        throw eee;
                }
                cnt77++;
            } while (true);

            if ( ! getUnorderedGroupHelper().canLeave(grammarAccess.getColorpickerAccess().getUnorderedGroup_1()) ) {
                throw new FailedPredicateException(input, "ruleColorpicker", "getUnorderedGroupHelper().canLeave(grammarAccess.getColorpickerAccess().getUnorderedGroup_1())");
            }

            }


            }

             
            	  getUnorderedGroupHelper().leave(grammarAccess.getColorpickerAccess().getUnorderedGroup_1());
            	

            }


            }


            }

             leaveRule(); 
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleColorpicker"


    // $ANTLR start "entryRuleMapping"
    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:5607:1: entryRuleMapping returns [EObject current=null] : iv_ruleMapping= ruleMapping EOF ;
    public final EObject entryRuleMapping() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleMapping = null;


        try {
            // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:5608:2: (iv_ruleMapping= ruleMapping EOF )
            // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:5609:2: iv_ruleMapping= ruleMapping EOF
            {
             newCompositeNode(grammarAccess.getMappingRule()); 
            pushFollow(FOLLOW_ruleMapping_in_entryRuleMapping13633);
            iv_ruleMapping=ruleMapping();

            state._fsp--;

             current =iv_ruleMapping; 
            match(input,EOF,FOLLOW_EOF_in_entryRuleMapping13643); 

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleMapping"


    // $ANTLR start "ruleMapping"
    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:5616:1: ruleMapping returns [EObject current=null] : ( ( (lv_cmd_0_0= ruleCommand ) ) otherlv_1= '=' ( ( (lv_label_2_1= RULE_ID | lv_label_2_2= RULE_STRING ) ) ) ) ;
    public final EObject ruleMapping() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token lv_label_2_1=null;
        Token lv_label_2_2=null;
        AntlrDatatypeRuleToken lv_cmd_0_0 = null;


         enterRule(); 
            
        try {
            // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:5619:28: ( ( ( (lv_cmd_0_0= ruleCommand ) ) otherlv_1= '=' ( ( (lv_label_2_1= RULE_ID | lv_label_2_2= RULE_STRING ) ) ) ) )
            // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:5620:1: ( ( (lv_cmd_0_0= ruleCommand ) ) otherlv_1= '=' ( ( (lv_label_2_1= RULE_ID | lv_label_2_2= RULE_STRING ) ) ) )
            {
            // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:5620:1: ( ( (lv_cmd_0_0= ruleCommand ) ) otherlv_1= '=' ( ( (lv_label_2_1= RULE_ID | lv_label_2_2= RULE_STRING ) ) ) )
            // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:5620:2: ( (lv_cmd_0_0= ruleCommand ) ) otherlv_1= '=' ( ( (lv_label_2_1= RULE_ID | lv_label_2_2= RULE_STRING ) ) )
            {
            // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:5620:2: ( (lv_cmd_0_0= ruleCommand ) )
            // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:5621:1: (lv_cmd_0_0= ruleCommand )
            {
            // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:5621:1: (lv_cmd_0_0= ruleCommand )
            // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:5622:3: lv_cmd_0_0= ruleCommand
            {
             
            	        newCompositeNode(grammarAccess.getMappingAccess().getCmdCommandParserRuleCall_0_0()); 
            	    
            pushFollow(FOLLOW_ruleCommand_in_ruleMapping13689);
            lv_cmd_0_0=ruleCommand();

            state._fsp--;


            	        if (current==null) {
            	            current = createModelElementForParent(grammarAccess.getMappingRule());
            	        }
                   		set(
                   			current, 
                   			"cmd",
                    		lv_cmd_0_0, 
                    		"Command");
            	        afterParserOrEnumRuleCall();
            	    

            }


            }

            otherlv_1=(Token)match(input,50,FOLLOW_50_in_ruleMapping13701); 

                	newLeafNode(otherlv_1, grammarAccess.getMappingAccess().getEqualsSignKeyword_1());
                
            // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:5642:1: ( ( (lv_label_2_1= RULE_ID | lv_label_2_2= RULE_STRING ) ) )
            // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:5643:1: ( (lv_label_2_1= RULE_ID | lv_label_2_2= RULE_STRING ) )
            {
            // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:5643:1: ( (lv_label_2_1= RULE_ID | lv_label_2_2= RULE_STRING ) )
            // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:5644:1: (lv_label_2_1= RULE_ID | lv_label_2_2= RULE_STRING )
            {
            // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:5644:1: (lv_label_2_1= RULE_ID | lv_label_2_2= RULE_STRING )
            int alt78=2;
            int LA78_0 = input.LA(1);

            if ( (LA78_0==RULE_ID) ) {
                alt78=1;
            }
            else if ( (LA78_0==RULE_STRING) ) {
                alt78=2;
            }
            else {
                NoViableAltException nvae =
                    new NoViableAltException("", 78, 0, input);

                throw nvae;
            }
            switch (alt78) {
                case 1 :
                    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:5645:3: lv_label_2_1= RULE_ID
                    {
                    lv_label_2_1=(Token)match(input,RULE_ID,FOLLOW_RULE_ID_in_ruleMapping13720); 

                    			newLeafNode(lv_label_2_1, grammarAccess.getMappingAccess().getLabelIDTerminalRuleCall_2_0_0()); 
                    		

                    	        if (current==null) {
                    	            current = createModelElement(grammarAccess.getMappingRule());
                    	        }
                           		setWithLastConsumed(
                           			current, 
                           			"label",
                            		lv_label_2_1, 
                            		"ID");
                    	    

                    }
                    break;
                case 2 :
                    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:5660:8: lv_label_2_2= RULE_STRING
                    {
                    lv_label_2_2=(Token)match(input,RULE_STRING,FOLLOW_RULE_STRING_in_ruleMapping13740); 

                    			newLeafNode(lv_label_2_2, grammarAccess.getMappingAccess().getLabelSTRINGTerminalRuleCall_2_0_1()); 
                    		

                    	        if (current==null) {
                    	            current = createModelElement(grammarAccess.getMappingRule());
                    	        }
                           		setWithLastConsumed(
                           			current, 
                           			"label",
                            		lv_label_2_2, 
                            		"STRING");
                    	    

                    }
                    break;

            }


            }


            }


            }


            }

             leaveRule(); 
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleMapping"


    // $ANTLR start "entryRuleVisibilityRule"
    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:5686:1: entryRuleVisibilityRule returns [EObject current=null] : iv_ruleVisibilityRule= ruleVisibilityRule EOF ;
    public final EObject entryRuleVisibilityRule() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleVisibilityRule = null;


        try {
            // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:5687:2: (iv_ruleVisibilityRule= ruleVisibilityRule EOF )
            // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:5688:2: iv_ruleVisibilityRule= ruleVisibilityRule EOF
            {
             newCompositeNode(grammarAccess.getVisibilityRuleRule()); 
            pushFollow(FOLLOW_ruleVisibilityRule_in_entryRuleVisibilityRule13784);
            iv_ruleVisibilityRule=ruleVisibilityRule();

            state._fsp--;

             current =iv_ruleVisibilityRule; 
            match(input,EOF,FOLLOW_EOF_in_entryRuleVisibilityRule13794); 

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleVisibilityRule"


    // $ANTLR start "ruleVisibilityRule"
    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:5695:1: ruleVisibilityRule returns [EObject current=null] : ( ( (lv_item_0_0= RULE_ID ) ) ( ( (lv_condition_1_1= '==' | lv_condition_1_2= '>' | lv_condition_1_3= '<' | lv_condition_1_4= '>=' | lv_condition_1_5= '<=' | lv_condition_1_6= '!=' ) ) ) ( ( (lv_sign_2_1= '-' | lv_sign_2_2= '+' ) ) )? ( (lv_state_3_0= ruleXState ) ) ) ;
    public final EObject ruleVisibilityRule() throws RecognitionException {
        EObject current = null;

        Token lv_item_0_0=null;
        Token lv_condition_1_1=null;
        Token lv_condition_1_2=null;
        Token lv_condition_1_3=null;
        Token lv_condition_1_4=null;
        Token lv_condition_1_5=null;
        Token lv_condition_1_6=null;
        Token lv_sign_2_1=null;
        Token lv_sign_2_2=null;
        AntlrDatatypeRuleToken lv_state_3_0 = null;


         enterRule(); 
            
        try {
            // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:5698:28: ( ( ( (lv_item_0_0= RULE_ID ) ) ( ( (lv_condition_1_1= '==' | lv_condition_1_2= '>' | lv_condition_1_3= '<' | lv_condition_1_4= '>=' | lv_condition_1_5= '<=' | lv_condition_1_6= '!=' ) ) ) ( ( (lv_sign_2_1= '-' | lv_sign_2_2= '+' ) ) )? ( (lv_state_3_0= ruleXState ) ) ) )
            // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:5699:1: ( ( (lv_item_0_0= RULE_ID ) ) ( ( (lv_condition_1_1= '==' | lv_condition_1_2= '>' | lv_condition_1_3= '<' | lv_condition_1_4= '>=' | lv_condition_1_5= '<=' | lv_condition_1_6= '!=' ) ) ) ( ( (lv_sign_2_1= '-' | lv_sign_2_2= '+' ) ) )? ( (lv_state_3_0= ruleXState ) ) )
            {
            // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:5699:1: ( ( (lv_item_0_0= RULE_ID ) ) ( ( (lv_condition_1_1= '==' | lv_condition_1_2= '>' | lv_condition_1_3= '<' | lv_condition_1_4= '>=' | lv_condition_1_5= '<=' | lv_condition_1_6= '!=' ) ) ) ( ( (lv_sign_2_1= '-' | lv_sign_2_2= '+' ) ) )? ( (lv_state_3_0= ruleXState ) ) )
            // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:5699:2: ( (lv_item_0_0= RULE_ID ) ) ( ( (lv_condition_1_1= '==' | lv_condition_1_2= '>' | lv_condition_1_3= '<' | lv_condition_1_4= '>=' | lv_condition_1_5= '<=' | lv_condition_1_6= '!=' ) ) ) ( ( (lv_sign_2_1= '-' | lv_sign_2_2= '+' ) ) )? ( (lv_state_3_0= ruleXState ) )
            {
            // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:5699:2: ( (lv_item_0_0= RULE_ID ) )
            // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:5700:1: (lv_item_0_0= RULE_ID )
            {
            // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:5700:1: (lv_item_0_0= RULE_ID )
            // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:5701:3: lv_item_0_0= RULE_ID
            {
            lv_item_0_0=(Token)match(input,RULE_ID,FOLLOW_RULE_ID_in_ruleVisibilityRule13836); 

            			newLeafNode(lv_item_0_0, grammarAccess.getVisibilityRuleAccess().getItemIDTerminalRuleCall_0_0()); 
            		

            	        if (current==null) {
            	            current = createModelElement(grammarAccess.getVisibilityRuleRule());
            	        }
                   		setWithLastConsumed(
                   			current, 
                   			"item",
                    		lv_item_0_0, 
                    		"ID");
            	    

            }


            }

            // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:5717:2: ( ( (lv_condition_1_1= '==' | lv_condition_1_2= '>' | lv_condition_1_3= '<' | lv_condition_1_4= '>=' | lv_condition_1_5= '<=' | lv_condition_1_6= '!=' ) ) )
            // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:5718:1: ( (lv_condition_1_1= '==' | lv_condition_1_2= '>' | lv_condition_1_3= '<' | lv_condition_1_4= '>=' | lv_condition_1_5= '<=' | lv_condition_1_6= '!=' ) )
            {
            // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:5718:1: ( (lv_condition_1_1= '==' | lv_condition_1_2= '>' | lv_condition_1_3= '<' | lv_condition_1_4= '>=' | lv_condition_1_5= '<=' | lv_condition_1_6= '!=' ) )
            // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:5719:1: (lv_condition_1_1= '==' | lv_condition_1_2= '>' | lv_condition_1_3= '<' | lv_condition_1_4= '>=' | lv_condition_1_5= '<=' | lv_condition_1_6= '!=' )
            {
            // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:5719:1: (lv_condition_1_1= '==' | lv_condition_1_2= '>' | lv_condition_1_3= '<' | lv_condition_1_4= '>=' | lv_condition_1_5= '<=' | lv_condition_1_6= '!=' )
            int alt79=6;
            switch ( input.LA(1) ) {
            case 51:
                {
                alt79=1;
                }
                break;
            case 52:
                {
                alt79=2;
                }
                break;
            case 53:
                {
                alt79=3;
                }
                break;
            case 54:
                {
                alt79=4;
                }
                break;
            case 55:
                {
                alt79=5;
                }
                break;
            case 56:
                {
                alt79=6;
                }
                break;
            default:
                NoViableAltException nvae =
                    new NoViableAltException("", 79, 0, input);

                throw nvae;
            }

            switch (alt79) {
                case 1 :
                    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:5720:3: lv_condition_1_1= '=='
                    {
                    lv_condition_1_1=(Token)match(input,51,FOLLOW_51_in_ruleVisibilityRule13861); 

                            newLeafNode(lv_condition_1_1, grammarAccess.getVisibilityRuleAccess().getConditionEqualsSignEqualsSignKeyword_1_0_0());
                        

                    	        if (current==null) {
                    	            current = createModelElement(grammarAccess.getVisibilityRuleRule());
                    	        }
                           		setWithLastConsumed(current, "condition", lv_condition_1_1, null);
                    	    

                    }
                    break;
                case 2 :
                    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:5732:8: lv_condition_1_2= '>'
                    {
                    lv_condition_1_2=(Token)match(input,52,FOLLOW_52_in_ruleVisibilityRule13890); 

                            newLeafNode(lv_condition_1_2, grammarAccess.getVisibilityRuleAccess().getConditionGreaterThanSignKeyword_1_0_1());
                        

                    	        if (current==null) {
                    	            current = createModelElement(grammarAccess.getVisibilityRuleRule());
                    	        }
                           		setWithLastConsumed(current, "condition", lv_condition_1_2, null);
                    	    

                    }
                    break;
                case 3 :
                    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:5744:8: lv_condition_1_3= '<'
                    {
                    lv_condition_1_3=(Token)match(input,53,FOLLOW_53_in_ruleVisibilityRule13919); 

                            newLeafNode(lv_condition_1_3, grammarAccess.getVisibilityRuleAccess().getConditionLessThanSignKeyword_1_0_2());
                        

                    	        if (current==null) {
                    	            current = createModelElement(grammarAccess.getVisibilityRuleRule());
                    	        }
                           		setWithLastConsumed(current, "condition", lv_condition_1_3, null);
                    	    

                    }
                    break;
                case 4 :
                    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:5756:8: lv_condition_1_4= '>='
                    {
                    lv_condition_1_4=(Token)match(input,54,FOLLOW_54_in_ruleVisibilityRule13948); 

                            newLeafNode(lv_condition_1_4, grammarAccess.getVisibilityRuleAccess().getConditionGreaterThanSignEqualsSignKeyword_1_0_3());
                        

                    	        if (current==null) {
                    	            current = createModelElement(grammarAccess.getVisibilityRuleRule());
                    	        }
                           		setWithLastConsumed(current, "condition", lv_condition_1_4, null);
                    	    

                    }
                    break;
                case 5 :
                    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:5768:8: lv_condition_1_5= '<='
                    {
                    lv_condition_1_5=(Token)match(input,55,FOLLOW_55_in_ruleVisibilityRule13977); 

                            newLeafNode(lv_condition_1_5, grammarAccess.getVisibilityRuleAccess().getConditionLessThanSignEqualsSignKeyword_1_0_4());
                        

                    	        if (current==null) {
                    	            current = createModelElement(grammarAccess.getVisibilityRuleRule());
                    	        }
                           		setWithLastConsumed(current, "condition", lv_condition_1_5, null);
                    	    

                    }
                    break;
                case 6 :
                    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:5780:8: lv_condition_1_6= '!='
                    {
                    lv_condition_1_6=(Token)match(input,56,FOLLOW_56_in_ruleVisibilityRule14006); 

                            newLeafNode(lv_condition_1_6, grammarAccess.getVisibilityRuleAccess().getConditionExclamationMarkEqualsSignKeyword_1_0_5());
                        

                    	        if (current==null) {
                    	            current = createModelElement(grammarAccess.getVisibilityRuleRule());
                    	        }
                           		setWithLastConsumed(current, "condition", lv_condition_1_6, null);
                    	    

                    }
                    break;

            }


            }


            }

            // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:5795:2: ( ( (lv_sign_2_1= '-' | lv_sign_2_2= '+' ) ) )?
            int alt81=2;
            int LA81_0 = input.LA(1);

            if ( ((LA81_0>=57 && LA81_0<=58)) ) {
                alt81=1;
            }
            switch (alt81) {
                case 1 :
                    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:5796:1: ( (lv_sign_2_1= '-' | lv_sign_2_2= '+' ) )
                    {
                    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:5796:1: ( (lv_sign_2_1= '-' | lv_sign_2_2= '+' ) )
                    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:5797:1: (lv_sign_2_1= '-' | lv_sign_2_2= '+' )
                    {
                    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:5797:1: (lv_sign_2_1= '-' | lv_sign_2_2= '+' )
                    int alt80=2;
                    int LA80_0 = input.LA(1);

                    if ( (LA80_0==57) ) {
                        alt80=1;
                    }
                    else if ( (LA80_0==58) ) {
                        alt80=2;
                    }
                    else {
                        NoViableAltException nvae =
                            new NoViableAltException("", 80, 0, input);

                        throw nvae;
                    }
                    switch (alt80) {
                        case 1 :
                            // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:5798:3: lv_sign_2_1= '-'
                            {
                            lv_sign_2_1=(Token)match(input,57,FOLLOW_57_in_ruleVisibilityRule14042); 

                                    newLeafNode(lv_sign_2_1, grammarAccess.getVisibilityRuleAccess().getSignHyphenMinusKeyword_2_0_0());
                                

                            	        if (current==null) {
                            	            current = createModelElement(grammarAccess.getVisibilityRuleRule());
                            	        }
                                   		setWithLastConsumed(current, "sign", lv_sign_2_1, null);
                            	    

                            }
                            break;
                        case 2 :
                            // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:5810:8: lv_sign_2_2= '+'
                            {
                            lv_sign_2_2=(Token)match(input,58,FOLLOW_58_in_ruleVisibilityRule14071); 

                                    newLeafNode(lv_sign_2_2, grammarAccess.getVisibilityRuleAccess().getSignPlusSignKeyword_2_0_1());
                                

                            	        if (current==null) {
                            	            current = createModelElement(grammarAccess.getVisibilityRuleRule());
                            	        }
                                   		setWithLastConsumed(current, "sign", lv_sign_2_2, null);
                            	    

                            }
                            break;

                    }


                    }


                    }
                    break;

            }

            // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:5825:3: ( (lv_state_3_0= ruleXState ) )
            // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:5826:1: (lv_state_3_0= ruleXState )
            {
            // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:5826:1: (lv_state_3_0= ruleXState )
            // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:5827:3: lv_state_3_0= ruleXState
            {
             
            	        newCompositeNode(grammarAccess.getVisibilityRuleAccess().getStateXStateParserRuleCall_3_0()); 
            	    
            pushFollow(FOLLOW_ruleXState_in_ruleVisibilityRule14109);
            lv_state_3_0=ruleXState();

            state._fsp--;


            	        if (current==null) {
            	            current = createModelElementForParent(grammarAccess.getVisibilityRuleRule());
            	        }
                   		set(
                   			current, 
                   			"state",
                    		lv_state_3_0, 
                    		"XState");
            	        afterParserOrEnumRuleCall();
            	    

            }


            }


            }


            }

             leaveRule(); 
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleVisibilityRule"


    // $ANTLR start "entryRuleItemRef"
    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:5851:1: entryRuleItemRef returns [String current=null] : iv_ruleItemRef= ruleItemRef EOF ;
    public final String entryRuleItemRef() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleItemRef = null;


        try {
            // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:5852:2: (iv_ruleItemRef= ruleItemRef EOF )
            // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:5853:2: iv_ruleItemRef= ruleItemRef EOF
            {
             newCompositeNode(grammarAccess.getItemRefRule()); 
            pushFollow(FOLLOW_ruleItemRef_in_entryRuleItemRef14146);
            iv_ruleItemRef=ruleItemRef();

            state._fsp--;

             current =iv_ruleItemRef.getText(); 
            match(input,EOF,FOLLOW_EOF_in_entryRuleItemRef14157); 

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleItemRef"


    // $ANTLR start "ruleItemRef"
    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:5860:1: ruleItemRef returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : this_ID_0= RULE_ID ;
    public final AntlrDatatypeRuleToken ruleItemRef() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token this_ID_0=null;

         enterRule(); 
            
        try {
            // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:5863:28: (this_ID_0= RULE_ID )
            // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:5864:5: this_ID_0= RULE_ID
            {
            this_ID_0=(Token)match(input,RULE_ID,FOLLOW_RULE_ID_in_ruleItemRef14196); 

            		current.merge(this_ID_0);
                
             
                newLeafNode(this_ID_0, grammarAccess.getItemRefAccess().getIDTerminalRuleCall()); 
                

            }

             leaveRule(); 
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleItemRef"


    // $ANTLR start "entryRuleGroupItemRef"
    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:5879:1: entryRuleGroupItemRef returns [String current=null] : iv_ruleGroupItemRef= ruleGroupItemRef EOF ;
    public final String entryRuleGroupItemRef() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleGroupItemRef = null;


        try {
            // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:5880:2: (iv_ruleGroupItemRef= ruleGroupItemRef EOF )
            // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:5881:2: iv_ruleGroupItemRef= ruleGroupItemRef EOF
            {
             newCompositeNode(grammarAccess.getGroupItemRefRule()); 
            pushFollow(FOLLOW_ruleGroupItemRef_in_entryRuleGroupItemRef14241);
            iv_ruleGroupItemRef=ruleGroupItemRef();

            state._fsp--;

             current =iv_ruleGroupItemRef.getText(); 
            match(input,EOF,FOLLOW_EOF_in_entryRuleGroupItemRef14252); 

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleGroupItemRef"


    // $ANTLR start "ruleGroupItemRef"
    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:5888:1: ruleGroupItemRef returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : this_ID_0= RULE_ID ;
    public final AntlrDatatypeRuleToken ruleGroupItemRef() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token this_ID_0=null;

         enterRule(); 
            
        try {
            // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:5891:28: (this_ID_0= RULE_ID )
            // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:5892:5: this_ID_0= RULE_ID
            {
            this_ID_0=(Token)match(input,RULE_ID,FOLLOW_RULE_ID_in_ruleGroupItemRef14291); 

            		current.merge(this_ID_0);
                
             
                newLeafNode(this_ID_0, grammarAccess.getGroupItemRefAccess().getIDTerminalRuleCall()); 
                

            }

             leaveRule(); 
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleGroupItemRef"


    // $ANTLR start "entryRuleIcon"
    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:5907:1: entryRuleIcon returns [String current=null] : iv_ruleIcon= ruleIcon EOF ;
    public final String entryRuleIcon() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleIcon = null;


        try {
            // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:5908:2: (iv_ruleIcon= ruleIcon EOF )
            // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:5909:2: iv_ruleIcon= ruleIcon EOF
            {
             newCompositeNode(grammarAccess.getIconRule()); 
            pushFollow(FOLLOW_ruleIcon_in_entryRuleIcon14336);
            iv_ruleIcon=ruleIcon();

            state._fsp--;

             current =iv_ruleIcon.getText(); 
            match(input,EOF,FOLLOW_EOF_in_entryRuleIcon14347); 

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleIcon"


    // $ANTLR start "ruleIcon"
    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:5916:1: ruleIcon returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : this_STRING_0= RULE_STRING ;
    public final AntlrDatatypeRuleToken ruleIcon() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token this_STRING_0=null;

         enterRule(); 
            
        try {
            // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:5919:28: (this_STRING_0= RULE_STRING )
            // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:5920:5: this_STRING_0= RULE_STRING
            {
            this_STRING_0=(Token)match(input,RULE_STRING,FOLLOW_RULE_STRING_in_ruleIcon14386); 

            		current.merge(this_STRING_0);
                
             
                newLeafNode(this_STRING_0, grammarAccess.getIconAccess().getSTRINGTerminalRuleCall()); 
                

            }

             leaveRule(); 
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleIcon"


    // $ANTLR start "entryRuleColorArray"
    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:5935:1: entryRuleColorArray returns [EObject current=null] : iv_ruleColorArray= ruleColorArray EOF ;
    public final EObject entryRuleColorArray() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleColorArray = null;


        try {
            // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:5936:2: (iv_ruleColorArray= ruleColorArray EOF )
            // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:5937:2: iv_ruleColorArray= ruleColorArray EOF
            {
             newCompositeNode(grammarAccess.getColorArrayRule()); 
            pushFollow(FOLLOW_ruleColorArray_in_entryRuleColorArray14430);
            iv_ruleColorArray=ruleColorArray();

            state._fsp--;

             current =iv_ruleColorArray; 
            match(input,EOF,FOLLOW_EOF_in_entryRuleColorArray14440); 

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleColorArray"


    // $ANTLR start "ruleColorArray"
    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:5944:1: ruleColorArray returns [EObject current=null] : ( ( ( (lv_item_0_0= RULE_ID ) )? ( ( (lv_condition_1_1= '==' | lv_condition_1_2= '>' | lv_condition_1_3= '<' | lv_condition_1_4= '>=' | lv_condition_1_5= '<=' | lv_condition_1_6= '!=' ) ) )? ( ( (lv_sign_2_1= '-' | lv_sign_2_2= '+' ) ) )? ( (lv_state_3_0= ruleXState ) ) otherlv_4= '=' )? ( (lv_arg_5_0= RULE_STRING ) ) ) ;
    public final EObject ruleColorArray() throws RecognitionException {
        EObject current = null;

        Token lv_item_0_0=null;
        Token lv_condition_1_1=null;
        Token lv_condition_1_2=null;
        Token lv_condition_1_3=null;
        Token lv_condition_1_4=null;
        Token lv_condition_1_5=null;
        Token lv_condition_1_6=null;
        Token lv_sign_2_1=null;
        Token lv_sign_2_2=null;
        Token otherlv_4=null;
        Token lv_arg_5_0=null;
        AntlrDatatypeRuleToken lv_state_3_0 = null;


         enterRule(); 
            
        try {
            // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:5947:28: ( ( ( ( (lv_item_0_0= RULE_ID ) )? ( ( (lv_condition_1_1= '==' | lv_condition_1_2= '>' | lv_condition_1_3= '<' | lv_condition_1_4= '>=' | lv_condition_1_5= '<=' | lv_condition_1_6= '!=' ) ) )? ( ( (lv_sign_2_1= '-' | lv_sign_2_2= '+' ) ) )? ( (lv_state_3_0= ruleXState ) ) otherlv_4= '=' )? ( (lv_arg_5_0= RULE_STRING ) ) ) )
            // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:5948:1: ( ( ( (lv_item_0_0= RULE_ID ) )? ( ( (lv_condition_1_1= '==' | lv_condition_1_2= '>' | lv_condition_1_3= '<' | lv_condition_1_4= '>=' | lv_condition_1_5= '<=' | lv_condition_1_6= '!=' ) ) )? ( ( (lv_sign_2_1= '-' | lv_sign_2_2= '+' ) ) )? ( (lv_state_3_0= ruleXState ) ) otherlv_4= '=' )? ( (lv_arg_5_0= RULE_STRING ) ) )
            {
            // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:5948:1: ( ( ( (lv_item_0_0= RULE_ID ) )? ( ( (lv_condition_1_1= '==' | lv_condition_1_2= '>' | lv_condition_1_3= '<' | lv_condition_1_4= '>=' | lv_condition_1_5= '<=' | lv_condition_1_6= '!=' ) ) )? ( ( (lv_sign_2_1= '-' | lv_sign_2_2= '+' ) ) )? ( (lv_state_3_0= ruleXState ) ) otherlv_4= '=' )? ( (lv_arg_5_0= RULE_STRING ) ) )
            // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:5948:2: ( ( (lv_item_0_0= RULE_ID ) )? ( ( (lv_condition_1_1= '==' | lv_condition_1_2= '>' | lv_condition_1_3= '<' | lv_condition_1_4= '>=' | lv_condition_1_5= '<=' | lv_condition_1_6= '!=' ) ) )? ( ( (lv_sign_2_1= '-' | lv_sign_2_2= '+' ) ) )? ( (lv_state_3_0= ruleXState ) ) otherlv_4= '=' )? ( (lv_arg_5_0= RULE_STRING ) )
            {
            // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:5948:2: ( ( (lv_item_0_0= RULE_ID ) )? ( ( (lv_condition_1_1= '==' | lv_condition_1_2= '>' | lv_condition_1_3= '<' | lv_condition_1_4= '>=' | lv_condition_1_5= '<=' | lv_condition_1_6= '!=' ) ) )? ( ( (lv_sign_2_1= '-' | lv_sign_2_2= '+' ) ) )? ( (lv_state_3_0= ruleXState ) ) otherlv_4= '=' )?
            int alt87=2;
            int LA87_0 = input.LA(1);

            if ( (LA87_0==RULE_ID||(LA87_0>=RULE_INT && LA87_0<=RULE_FLOAT)||(LA87_0>=51 && LA87_0<=58)) ) {
                alt87=1;
            }
            else if ( (LA87_0==RULE_STRING) ) {
                int LA87_2 = input.LA(2);

                if ( (LA87_2==50) ) {
                    alt87=1;
                }
            }
            switch (alt87) {
                case 1 :
                    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:5948:3: ( (lv_item_0_0= RULE_ID ) )? ( ( (lv_condition_1_1= '==' | lv_condition_1_2= '>' | lv_condition_1_3= '<' | lv_condition_1_4= '>=' | lv_condition_1_5= '<=' | lv_condition_1_6= '!=' ) ) )? ( ( (lv_sign_2_1= '-' | lv_sign_2_2= '+' ) ) )? ( (lv_state_3_0= ruleXState ) ) otherlv_4= '='
                    {
                    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:5948:3: ( (lv_item_0_0= RULE_ID ) )?
                    int alt82=2;
                    int LA82_0 = input.LA(1);

                    if ( (LA82_0==RULE_ID) ) {
                        int LA82_1 = input.LA(2);

                        if ( ((LA82_1>=RULE_ID && LA82_1<=RULE_FLOAT)||(LA82_1>=51 && LA82_1<=58)) ) {
                            alt82=1;
                        }
                    }
                    switch (alt82) {
                        case 1 :
                            // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:5949:1: (lv_item_0_0= RULE_ID )
                            {
                            // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:5949:1: (lv_item_0_0= RULE_ID )
                            // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:5950:3: lv_item_0_0= RULE_ID
                            {
                            lv_item_0_0=(Token)match(input,RULE_ID,FOLLOW_RULE_ID_in_ruleColorArray14483); 

                            			newLeafNode(lv_item_0_0, grammarAccess.getColorArrayAccess().getItemIDTerminalRuleCall_0_0_0()); 
                            		

                            	        if (current==null) {
                            	            current = createModelElement(grammarAccess.getColorArrayRule());
                            	        }
                                   		setWithLastConsumed(
                                   			current, 
                                   			"item",
                                    		lv_item_0_0, 
                                    		"ID");
                            	    

                            }


                            }
                            break;

                    }

                    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:5966:3: ( ( (lv_condition_1_1= '==' | lv_condition_1_2= '>' | lv_condition_1_3= '<' | lv_condition_1_4= '>=' | lv_condition_1_5= '<=' | lv_condition_1_6= '!=' ) ) )?
                    int alt84=2;
                    int LA84_0 = input.LA(1);

                    if ( ((LA84_0>=51 && LA84_0<=56)) ) {
                        alt84=1;
                    }
                    switch (alt84) {
                        case 1 :
                            // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:5967:1: ( (lv_condition_1_1= '==' | lv_condition_1_2= '>' | lv_condition_1_3= '<' | lv_condition_1_4= '>=' | lv_condition_1_5= '<=' | lv_condition_1_6= '!=' ) )
                            {
                            // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:5967:1: ( (lv_condition_1_1= '==' | lv_condition_1_2= '>' | lv_condition_1_3= '<' | lv_condition_1_4= '>=' | lv_condition_1_5= '<=' | lv_condition_1_6= '!=' ) )
                            // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:5968:1: (lv_condition_1_1= '==' | lv_condition_1_2= '>' | lv_condition_1_3= '<' | lv_condition_1_4= '>=' | lv_condition_1_5= '<=' | lv_condition_1_6= '!=' )
                            {
                            // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:5968:1: (lv_condition_1_1= '==' | lv_condition_1_2= '>' | lv_condition_1_3= '<' | lv_condition_1_4= '>=' | lv_condition_1_5= '<=' | lv_condition_1_6= '!=' )
                            int alt83=6;
                            switch ( input.LA(1) ) {
                            case 51:
                                {
                                alt83=1;
                                }
                                break;
                            case 52:
                                {
                                alt83=2;
                                }
                                break;
                            case 53:
                                {
                                alt83=3;
                                }
                                break;
                            case 54:
                                {
                                alt83=4;
                                }
                                break;
                            case 55:
                                {
                                alt83=5;
                                }
                                break;
                            case 56:
                                {
                                alt83=6;
                                }
                                break;
                            default:
                                NoViableAltException nvae =
                                    new NoViableAltException("", 83, 0, input);

                                throw nvae;
                            }

                            switch (alt83) {
                                case 1 :
                                    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:5969:3: lv_condition_1_1= '=='
                                    {
                                    lv_condition_1_1=(Token)match(input,51,FOLLOW_51_in_ruleColorArray14509); 

                                            newLeafNode(lv_condition_1_1, grammarAccess.getColorArrayAccess().getConditionEqualsSignEqualsSignKeyword_0_1_0_0());
                                        

                                    	        if (current==null) {
                                    	            current = createModelElement(grammarAccess.getColorArrayRule());
                                    	        }
                                           		setWithLastConsumed(current, "condition", lv_condition_1_1, null);
                                    	    

                                    }
                                    break;
                                case 2 :
                                    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:5981:8: lv_condition_1_2= '>'
                                    {
                                    lv_condition_1_2=(Token)match(input,52,FOLLOW_52_in_ruleColorArray14538); 

                                            newLeafNode(lv_condition_1_2, grammarAccess.getColorArrayAccess().getConditionGreaterThanSignKeyword_0_1_0_1());
                                        

                                    	        if (current==null) {
                                    	            current = createModelElement(grammarAccess.getColorArrayRule());
                                    	        }
                                           		setWithLastConsumed(current, "condition", lv_condition_1_2, null);
                                    	    

                                    }
                                    break;
                                case 3 :
                                    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:5993:8: lv_condition_1_3= '<'
                                    {
                                    lv_condition_1_3=(Token)match(input,53,FOLLOW_53_in_ruleColorArray14567); 

                                            newLeafNode(lv_condition_1_3, grammarAccess.getColorArrayAccess().getConditionLessThanSignKeyword_0_1_0_2());
                                        

                                    	        if (current==null) {
                                    	            current = createModelElement(grammarAccess.getColorArrayRule());
                                    	        }
                                           		setWithLastConsumed(current, "condition", lv_condition_1_3, null);
                                    	    

                                    }
                                    break;
                                case 4 :
                                    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:6005:8: lv_condition_1_4= '>='
                                    {
                                    lv_condition_1_4=(Token)match(input,54,FOLLOW_54_in_ruleColorArray14596); 

                                            newLeafNode(lv_condition_1_4, grammarAccess.getColorArrayAccess().getConditionGreaterThanSignEqualsSignKeyword_0_1_0_3());
                                        

                                    	        if (current==null) {
                                    	            current = createModelElement(grammarAccess.getColorArrayRule());
                                    	        }
                                           		setWithLastConsumed(current, "condition", lv_condition_1_4, null);
                                    	    

                                    }
                                    break;
                                case 5 :
                                    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:6017:8: lv_condition_1_5= '<='
                                    {
                                    lv_condition_1_5=(Token)match(input,55,FOLLOW_55_in_ruleColorArray14625); 

                                            newLeafNode(lv_condition_1_5, grammarAccess.getColorArrayAccess().getConditionLessThanSignEqualsSignKeyword_0_1_0_4());
                                        

                                    	        if (current==null) {
                                    	            current = createModelElement(grammarAccess.getColorArrayRule());
                                    	        }
                                           		setWithLastConsumed(current, "condition", lv_condition_1_5, null);
                                    	    

                                    }
                                    break;
                                case 6 :
                                    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:6029:8: lv_condition_1_6= '!='
                                    {
                                    lv_condition_1_6=(Token)match(input,56,FOLLOW_56_in_ruleColorArray14654); 

                                            newLeafNode(lv_condition_1_6, grammarAccess.getColorArrayAccess().getConditionExclamationMarkEqualsSignKeyword_0_1_0_5());
                                        

                                    	        if (current==null) {
                                    	            current = createModelElement(grammarAccess.getColorArrayRule());
                                    	        }
                                           		setWithLastConsumed(current, "condition", lv_condition_1_6, null);
                                    	    

                                    }
                                    break;

                            }


                            }


                            }
                            break;

                    }

                    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:6044:3: ( ( (lv_sign_2_1= '-' | lv_sign_2_2= '+' ) ) )?
                    int alt86=2;
                    int LA86_0 = input.LA(1);

                    if ( ((LA86_0>=57 && LA86_0<=58)) ) {
                        alt86=1;
                    }
                    switch (alt86) {
                        case 1 :
                            // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:6045:1: ( (lv_sign_2_1= '-' | lv_sign_2_2= '+' ) )
                            {
                            // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:6045:1: ( (lv_sign_2_1= '-' | lv_sign_2_2= '+' ) )
                            // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:6046:1: (lv_sign_2_1= '-' | lv_sign_2_2= '+' )
                            {
                            // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:6046:1: (lv_sign_2_1= '-' | lv_sign_2_2= '+' )
                            int alt85=2;
                            int LA85_0 = input.LA(1);

                            if ( (LA85_0==57) ) {
                                alt85=1;
                            }
                            else if ( (LA85_0==58) ) {
                                alt85=2;
                            }
                            else {
                                NoViableAltException nvae =
                                    new NoViableAltException("", 85, 0, input);

                                throw nvae;
                            }
                            switch (alt85) {
                                case 1 :
                                    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:6047:3: lv_sign_2_1= '-'
                                    {
                                    lv_sign_2_1=(Token)match(input,57,FOLLOW_57_in_ruleColorArray14691); 

                                            newLeafNode(lv_sign_2_1, grammarAccess.getColorArrayAccess().getSignHyphenMinusKeyword_0_2_0_0());
                                        

                                    	        if (current==null) {
                                    	            current = createModelElement(grammarAccess.getColorArrayRule());
                                    	        }
                                           		setWithLastConsumed(current, "sign", lv_sign_2_1, null);
                                    	    

                                    }
                                    break;
                                case 2 :
                                    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:6059:8: lv_sign_2_2= '+'
                                    {
                                    lv_sign_2_2=(Token)match(input,58,FOLLOW_58_in_ruleColorArray14720); 

                                            newLeafNode(lv_sign_2_2, grammarAccess.getColorArrayAccess().getSignPlusSignKeyword_0_2_0_1());
                                        

                                    	        if (current==null) {
                                    	            current = createModelElement(grammarAccess.getColorArrayRule());
                                    	        }
                                           		setWithLastConsumed(current, "sign", lv_sign_2_2, null);
                                    	    

                                    }
                                    break;

                            }


                            }


                            }
                            break;

                    }

                    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:6074:3: ( (lv_state_3_0= ruleXState ) )
                    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:6075:1: (lv_state_3_0= ruleXState )
                    {
                    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:6075:1: (lv_state_3_0= ruleXState )
                    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:6076:3: lv_state_3_0= ruleXState
                    {
                     
                    	        newCompositeNode(grammarAccess.getColorArrayAccess().getStateXStateParserRuleCall_0_3_0()); 
                    	    
                    pushFollow(FOLLOW_ruleXState_in_ruleColorArray14758);
                    lv_state_3_0=ruleXState();

                    state._fsp--;


                    	        if (current==null) {
                    	            current = createModelElementForParent(grammarAccess.getColorArrayRule());
                    	        }
                           		set(
                           			current, 
                           			"state",
                            		lv_state_3_0, 
                            		"XState");
                    	        afterParserOrEnumRuleCall();
                    	    

                    }


                    }

                    otherlv_4=(Token)match(input,50,FOLLOW_50_in_ruleColorArray14770); 

                        	newLeafNode(otherlv_4, grammarAccess.getColorArrayAccess().getEqualsSignKeyword_0_4());
                        

                    }
                    break;

            }

            // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:6096:3: ( (lv_arg_5_0= RULE_STRING ) )
            // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:6097:1: (lv_arg_5_0= RULE_STRING )
            {
            // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:6097:1: (lv_arg_5_0= RULE_STRING )
            // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:6098:3: lv_arg_5_0= RULE_STRING
            {
            lv_arg_5_0=(Token)match(input,RULE_STRING,FOLLOW_RULE_STRING_in_ruleColorArray14789); 

            			newLeafNode(lv_arg_5_0, grammarAccess.getColorArrayAccess().getArgSTRINGTerminalRuleCall_1_0()); 
            		

            	        if (current==null) {
            	            current = createModelElement(grammarAccess.getColorArrayRule());
            	        }
                   		setWithLastConsumed(
                   			current, 
                   			"arg",
                    		lv_arg_5_0, 
                    		"STRING");
            	    

            }


            }


            }


            }

             leaveRule(); 
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleColorArray"


    // $ANTLR start "entryRuleCommand"
    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:6122:1: entryRuleCommand returns [String current=null] : iv_ruleCommand= ruleCommand EOF ;
    public final String entryRuleCommand() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleCommand = null;


        try {
            // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:6123:2: (iv_ruleCommand= ruleCommand EOF )
            // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:6124:2: iv_ruleCommand= ruleCommand EOF
            {
             newCompositeNode(grammarAccess.getCommandRule()); 
            pushFollow(FOLLOW_ruleCommand_in_entryRuleCommand14831);
            iv_ruleCommand=ruleCommand();

            state._fsp--;

             current =iv_ruleCommand.getText(); 
            match(input,EOF,FOLLOW_EOF_in_entryRuleCommand14842); 

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleCommand"


    // $ANTLR start "ruleCommand"
    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:6131:1: ruleCommand returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (this_INT_0= RULE_INT | this_ID_1= RULE_ID | this_STRING_2= RULE_STRING ) ;
    public final AntlrDatatypeRuleToken ruleCommand() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token this_INT_0=null;
        Token this_ID_1=null;
        Token this_STRING_2=null;

         enterRule(); 
            
        try {
            // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:6134:28: ( (this_INT_0= RULE_INT | this_ID_1= RULE_ID | this_STRING_2= RULE_STRING ) )
            // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:6135:1: (this_INT_0= RULE_INT | this_ID_1= RULE_ID | this_STRING_2= RULE_STRING )
            {
            // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:6135:1: (this_INT_0= RULE_INT | this_ID_1= RULE_ID | this_STRING_2= RULE_STRING )
            int alt88=3;
            switch ( input.LA(1) ) {
            case RULE_INT:
                {
                alt88=1;
                }
                break;
            case RULE_ID:
                {
                alt88=2;
                }
                break;
            case RULE_STRING:
                {
                alt88=3;
                }
                break;
            default:
                NoViableAltException nvae =
                    new NoViableAltException("", 88, 0, input);

                throw nvae;
            }

            switch (alt88) {
                case 1 :
                    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:6135:6: this_INT_0= RULE_INT
                    {
                    this_INT_0=(Token)match(input,RULE_INT,FOLLOW_RULE_INT_in_ruleCommand14882); 

                    		current.merge(this_INT_0);
                        
                     
                        newLeafNode(this_INT_0, grammarAccess.getCommandAccess().getINTTerminalRuleCall_0()); 
                        

                    }
                    break;
                case 2 :
                    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:6143:10: this_ID_1= RULE_ID
                    {
                    this_ID_1=(Token)match(input,RULE_ID,FOLLOW_RULE_ID_in_ruleCommand14908); 

                    		current.merge(this_ID_1);
                        
                     
                        newLeafNode(this_ID_1, grammarAccess.getCommandAccess().getIDTerminalRuleCall_1()); 
                        

                    }
                    break;
                case 3 :
                    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:6151:10: this_STRING_2= RULE_STRING
                    {
                    this_STRING_2=(Token)match(input,RULE_STRING,FOLLOW_RULE_STRING_in_ruleCommand14934); 

                    		current.merge(this_STRING_2);
                        
                     
                        newLeafNode(this_STRING_2, grammarAccess.getCommandAccess().getSTRINGTerminalRuleCall_2()); 
                        

                    }
                    break;

            }


            }

             leaveRule(); 
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleCommand"


    // $ANTLR start "entryRuleNumber"
    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:6166:1: entryRuleNumber returns [String current=null] : iv_ruleNumber= ruleNumber EOF ;
    public final String entryRuleNumber() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleNumber = null;


        try {
            // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:6167:2: (iv_ruleNumber= ruleNumber EOF )
            // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:6168:2: iv_ruleNumber= ruleNumber EOF
            {
             newCompositeNode(grammarAccess.getNumberRule()); 
            pushFollow(FOLLOW_ruleNumber_in_entryRuleNumber14980);
            iv_ruleNumber=ruleNumber();

            state._fsp--;

             current =iv_ruleNumber.getText(); 
            match(input,EOF,FOLLOW_EOF_in_entryRuleNumber14991); 

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleNumber"


    // $ANTLR start "ruleNumber"
    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:6175:1: ruleNumber returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (this_INT_0= RULE_INT | this_FLOAT_1= RULE_FLOAT ) ;
    public final AntlrDatatypeRuleToken ruleNumber() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token this_INT_0=null;
        Token this_FLOAT_1=null;

         enterRule(); 
            
        try {
            // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:6178:28: ( (this_INT_0= RULE_INT | this_FLOAT_1= RULE_FLOAT ) )
            // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:6179:1: (this_INT_0= RULE_INT | this_FLOAT_1= RULE_FLOAT )
            {
            // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:6179:1: (this_INT_0= RULE_INT | this_FLOAT_1= RULE_FLOAT )
            int alt89=2;
            int LA89_0 = input.LA(1);

            if ( (LA89_0==RULE_INT) ) {
                alt89=1;
            }
            else if ( (LA89_0==RULE_FLOAT) ) {
                alt89=2;
            }
            else {
                NoViableAltException nvae =
                    new NoViableAltException("", 89, 0, input);

                throw nvae;
            }
            switch (alt89) {
                case 1 :
                    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:6179:6: this_INT_0= RULE_INT
                    {
                    this_INT_0=(Token)match(input,RULE_INT,FOLLOW_RULE_INT_in_ruleNumber15031); 

                    		current.merge(this_INT_0);
                        
                     
                        newLeafNode(this_INT_0, grammarAccess.getNumberAccess().getINTTerminalRuleCall_0()); 
                        

                    }
                    break;
                case 2 :
                    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:6187:10: this_FLOAT_1= RULE_FLOAT
                    {
                    this_FLOAT_1=(Token)match(input,RULE_FLOAT,FOLLOW_RULE_FLOAT_in_ruleNumber15057); 

                    		current.merge(this_FLOAT_1);
                        
                     
                        newLeafNode(this_FLOAT_1, grammarAccess.getNumberAccess().getFLOATTerminalRuleCall_1()); 
                        

                    }
                    break;

            }


            }

             leaveRule(); 
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleNumber"


    // $ANTLR start "entryRuleXState"
    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:6202:1: entryRuleXState returns [String current=null] : iv_ruleXState= ruleXState EOF ;
    public final String entryRuleXState() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleXState = null;


        try {
            // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:6203:2: (iv_ruleXState= ruleXState EOF )
            // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:6204:2: iv_ruleXState= ruleXState EOF
            {
             newCompositeNode(grammarAccess.getXStateRule()); 
            pushFollow(FOLLOW_ruleXState_in_entryRuleXState15103);
            iv_ruleXState=ruleXState();

            state._fsp--;

             current =iv_ruleXState.getText(); 
            match(input,EOF,FOLLOW_EOF_in_entryRuleXState15114); 

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXState"


    // $ANTLR start "ruleXState"
    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:6211:1: ruleXState returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (this_INT_0= RULE_INT | this_ID_1= RULE_ID | this_STRING_2= RULE_STRING | this_FLOAT_3= RULE_FLOAT ) ;
    public final AntlrDatatypeRuleToken ruleXState() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token this_INT_0=null;
        Token this_ID_1=null;
        Token this_STRING_2=null;
        Token this_FLOAT_3=null;

         enterRule(); 
            
        try {
            // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:6214:28: ( (this_INT_0= RULE_INT | this_ID_1= RULE_ID | this_STRING_2= RULE_STRING | this_FLOAT_3= RULE_FLOAT ) )
            // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:6215:1: (this_INT_0= RULE_INT | this_ID_1= RULE_ID | this_STRING_2= RULE_STRING | this_FLOAT_3= RULE_FLOAT )
            {
            // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:6215:1: (this_INT_0= RULE_INT | this_ID_1= RULE_ID | this_STRING_2= RULE_STRING | this_FLOAT_3= RULE_FLOAT )
            int alt90=4;
            switch ( input.LA(1) ) {
            case RULE_INT:
                {
                alt90=1;
                }
                break;
            case RULE_ID:
                {
                alt90=2;
                }
                break;
            case RULE_STRING:
                {
                alt90=3;
                }
                break;
            case RULE_FLOAT:
                {
                alt90=4;
                }
                break;
            default:
                NoViableAltException nvae =
                    new NoViableAltException("", 90, 0, input);

                throw nvae;
            }

            switch (alt90) {
                case 1 :
                    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:6215:6: this_INT_0= RULE_INT
                    {
                    this_INT_0=(Token)match(input,RULE_INT,FOLLOW_RULE_INT_in_ruleXState15154); 

                    		current.merge(this_INT_0);
                        
                     
                        newLeafNode(this_INT_0, grammarAccess.getXStateAccess().getINTTerminalRuleCall_0()); 
                        

                    }
                    break;
                case 2 :
                    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:6223:10: this_ID_1= RULE_ID
                    {
                    this_ID_1=(Token)match(input,RULE_ID,FOLLOW_RULE_ID_in_ruleXState15180); 

                    		current.merge(this_ID_1);
                        
                     
                        newLeafNode(this_ID_1, grammarAccess.getXStateAccess().getIDTerminalRuleCall_1()); 
                        

                    }
                    break;
                case 3 :
                    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:6231:10: this_STRING_2= RULE_STRING
                    {
                    this_STRING_2=(Token)match(input,RULE_STRING,FOLLOW_RULE_STRING_in_ruleXState15206); 

                    		current.merge(this_STRING_2);
                        
                     
                        newLeafNode(this_STRING_2, grammarAccess.getXStateAccess().getSTRINGTerminalRuleCall_2()); 
                        

                    }
                    break;
                case 4 :
                    // ../org.openhab.model.sitemap/src-gen/org/openhab/model/parser/antlr/internal/InternalSitemap.g:6239:10: this_FLOAT_3= RULE_FLOAT
                    {
                    this_FLOAT_3=(Token)match(input,RULE_FLOAT,FOLLOW_RULE_FLOAT_in_ruleXState15232); 

                    		current.merge(this_FLOAT_3);
                        
                     
                        newLeafNode(this_FLOAT_3, grammarAccess.getXStateAccess().getFLOATTerminalRuleCall_3()); 
                        

                    }
                    break;

            }


            }

             leaveRule(); 
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXState"

    // Delegated rules


    protected DFA29 dfa29 = new DFA29(this);
    protected DFA34 dfa34 = new DFA34(this);
    protected DFA39 dfa39 = new DFA39(this);
    protected DFA44 dfa44 = new DFA44(this);
    protected DFA55 dfa55 = new DFA55(this);
    protected DFA72 dfa72 = new DFA72(this);
    static final String DFA29_eotS =
        "\13\uffff";
    static final String DFA29_eofS =
        "\1\1\12\uffff";
    static final String DFA29_minS =
        "\1\15\12\uffff";
    static final String DFA29_maxS =
        "\1\61\12\uffff";
    static final String DFA29_acceptS =
        "\1\uffff\1\12\1\1\1\2\1\3\1\4\1\5\1\6\1\7\1\10\1\11";
    static final String DFA29_specialS =
        "\1\0\12\uffff}>";
    static final String[] DFA29_transitionS = {
            "\1\3\1\4\3\1\1\2\1\7\2\uffff\1\10\1\12\3\1\1\5\1\6\1\11\1\1"+
            "\1\uffff\1\1\2\uffff\1\1\1\uffff\1\1\1\uffff\1\1\2\uffff\2\1"+
            "\1\uffff\1\1\3\uffff\1\1",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] DFA29_eot = DFA.unpackEncodedString(DFA29_eotS);
    static final short[] DFA29_eof = DFA.unpackEncodedString(DFA29_eofS);
    static final char[] DFA29_min = DFA.unpackEncodedStringToUnsignedChars(DFA29_minS);
    static final char[] DFA29_max = DFA.unpackEncodedStringToUnsignedChars(DFA29_maxS);
    static final short[] DFA29_accept = DFA.unpackEncodedString(DFA29_acceptS);
    static final short[] DFA29_special = DFA.unpackEncodedString(DFA29_specialS);
    static final short[][] DFA29_transition;

    static {
        int numStates = DFA29_transitionS.length;
        DFA29_transition = new short[numStates][];
        for (int i=0; i<numStates; i++) {
            DFA29_transition[i] = DFA.unpackEncodedString(DFA29_transitionS[i]);
        }
    }

    class DFA29 extends DFA {

        public DFA29(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 29;
            this.eot = DFA29_eot;
            this.eof = DFA29_eof;
            this.min = DFA29_min;
            this.max = DFA29_max;
            this.accept = DFA29_accept;
            this.special = DFA29_special;
            this.transition = DFA29_transition;
        }
        public String getDescription() {
            return "()+ loopback of 1506:3: ( ({...}? => ( ({...}? => (otherlv_2= 'item=' ( (lv_item_3_0= ruleItemRef ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= 'label=' ( ( (lv_label_5_1= RULE_ID | lv_label_5_2= RULE_STRING ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= 'icon=' ( (lv_icon_7_0= ruleIcon ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_8= 'url=' ( (lv_url_9_0= RULE_STRING ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= 'refresh=' ( (lv_refresh_11_0= RULE_INT ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_12= 'labelcolor=[' ( ( (lv_LabelColor_13_0= ruleColorArray ) ) (otherlv_14= ',' ( (lv_LabelColor_15_0= ruleColorArray ) ) )* otherlv_16= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= 'valuecolor=[' ( ( (lv_ValueColor_18_0= ruleColorArray ) ) (otherlv_19= ',' ( (lv_ValueColor_20_0= ruleColorArray ) ) )* otherlv_21= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_22= 'iconcolor=[' ( ( (lv_IconColor_23_0= ruleColorArray ) ) (otherlv_24= ',' ( (lv_IconColor_25_0= ruleColorArray ) ) )* otherlv_26= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_27= 'visibility=[' ( ( (lv_Visibility_28_0= ruleVisibilityRule ) ) (otherlv_29= ',' ( (lv_Visibility_30_0= ruleVisibilityRule ) ) )* otherlv_31= ']' ) ) ) ) ) )+";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA29_0 = input.LA(1);

                         
                        int index29_0 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA29_0==EOF||(LA29_0>=15 && LA29_0<=17)||(LA29_0>=24 && LA29_0<=26)||LA29_0==30||LA29_0==32||LA29_0==35||LA29_0==37||LA29_0==39||(LA29_0>=42 && LA29_0<=43)||LA29_0==45||LA29_0==49) ) {s = 1;}

                        else if ( LA29_0 ==18 && getUnorderedGroupHelper().canSelect(grammarAccess.getImageAccess().getUnorderedGroup_1(), 0) ) {s = 2;}

                        else if ( LA29_0 ==13 && getUnorderedGroupHelper().canSelect(grammarAccess.getImageAccess().getUnorderedGroup_1(), 1) ) {s = 3;}

                        else if ( LA29_0 ==14 && getUnorderedGroupHelper().canSelect(grammarAccess.getImageAccess().getUnorderedGroup_1(), 2) ) {s = 4;}

                        else if ( LA29_0 ==27 && getUnorderedGroupHelper().canSelect(grammarAccess.getImageAccess().getUnorderedGroup_1(), 3) ) {s = 5;}

                        else if ( LA29_0 ==28 && getUnorderedGroupHelper().canSelect(grammarAccess.getImageAccess().getUnorderedGroup_1(), 4) ) {s = 6;}

                        else if ( LA29_0 ==19 && getUnorderedGroupHelper().canSelect(grammarAccess.getImageAccess().getUnorderedGroup_1(), 5) ) {s = 7;}

                        else if ( LA29_0 ==22 && getUnorderedGroupHelper().canSelect(grammarAccess.getImageAccess().getUnorderedGroup_1(), 6) ) {s = 8;}

                        else if ( LA29_0 ==29 && getUnorderedGroupHelper().canSelect(grammarAccess.getImageAccess().getUnorderedGroup_1(), 7) ) {s = 9;}

                        else if ( LA29_0 ==23 && getUnorderedGroupHelper().canSelect(grammarAccess.getImageAccess().getUnorderedGroup_1(), 8) ) {s = 10;}

                         
                        input.seek(index29_0);
                        if ( s>=0 ) return s;
                        break;
            }
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 29, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String DFA34_eotS =
        "\12\uffff";
    static final String DFA34_eofS =
        "\1\1\11\uffff";
    static final String DFA34_minS =
        "\1\15\11\uffff";
    static final String DFA34_maxS =
        "\1\61\11\uffff";
    static final String DFA34_acceptS =
        "\1\uffff\1\11\1\1\1\2\1\3\1\4\1\5\1\6\1\7\1\10";
    static final String DFA34_specialS =
        "\1\0\11\uffff}>";
    static final String[] DFA34_transitionS = {
            "\1\3\1\4\1\uffff\2\1\1\2\1\7\2\uffff\1\10\1\11\3\1\1\5\2\uffff"+
            "\1\1\1\6\1\1\2\uffff\1\1\1\uffff\1\1\1\uffff\1\1\2\uffff\2\1"+
            "\1\uffff\1\1\3\uffff\1\1",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] DFA34_eot = DFA.unpackEncodedString(DFA34_eotS);
    static final short[] DFA34_eof = DFA.unpackEncodedString(DFA34_eofS);
    static final char[] DFA34_min = DFA.unpackEncodedStringToUnsignedChars(DFA34_minS);
    static final char[] DFA34_max = DFA.unpackEncodedStringToUnsignedChars(DFA34_maxS);
    static final short[] DFA34_accept = DFA.unpackEncodedString(DFA34_acceptS);
    static final short[] DFA34_special = DFA.unpackEncodedString(DFA34_specialS);
    static final short[][] DFA34_transition;

    static {
        int numStates = DFA34_transitionS.length;
        DFA34_transition = new short[numStates][];
        for (int i=0; i<numStates; i++) {
            DFA34_transition[i] = DFA.unpackEncodedString(DFA34_transitionS[i]);
        }
    }

    class DFA34 extends DFA {

        public DFA34(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 34;
            this.eot = DFA34_eot;
            this.eof = DFA34_eof;
            this.min = DFA34_min;
            this.max = DFA34_max;
            this.accept = DFA34_accept;
            this.special = DFA34_special;
            this.transition = DFA34_transition;
        }
        public String getDescription() {
            return "()+ loopback of 1976:3: ( ({...}? => ( ({...}? => (otherlv_2= 'item=' ( (lv_item_3_0= ruleItemRef ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= 'label=' ( ( (lv_label_5_1= RULE_ID | lv_label_5_2= RULE_STRING ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= 'icon=' ( (lv_icon_7_0= ruleIcon ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_8= 'url=' ( (lv_url_9_0= RULE_STRING ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= 'encoding=' ( (lv_encoding_11_0= RULE_STRING ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_12= 'labelcolor=[' ( ( (lv_LabelColor_13_0= ruleColorArray ) ) (otherlv_14= ',' ( (lv_LabelColor_15_0= ruleColorArray ) ) )* otherlv_16= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= 'valuecolor=[' ( ( (lv_ValueColor_18_0= ruleColorArray ) ) (otherlv_19= ',' ( (lv_ValueColor_20_0= ruleColorArray ) ) )* otherlv_21= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_22= 'visibility=[' ( ( (lv_Visibility_23_0= ruleVisibilityRule ) ) (otherlv_24= ',' ( (lv_Visibility_25_0= ruleVisibilityRule ) ) )* otherlv_26= ']' ) ) ) ) ) )+";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA34_0 = input.LA(1);

                         
                        int index34_0 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA34_0==EOF||(LA34_0>=16 && LA34_0<=17)||(LA34_0>=24 && LA34_0<=26)||LA34_0==30||LA34_0==32||LA34_0==35||LA34_0==37||LA34_0==39||(LA34_0>=42 && LA34_0<=43)||LA34_0==45||LA34_0==49) ) {s = 1;}

                        else if ( LA34_0 ==18 && getUnorderedGroupHelper().canSelect(grammarAccess.getVideoAccess().getUnorderedGroup_1(), 0) ) {s = 2;}

                        else if ( LA34_0 ==13 && getUnorderedGroupHelper().canSelect(grammarAccess.getVideoAccess().getUnorderedGroup_1(), 1) ) {s = 3;}

                        else if ( LA34_0 ==14 && getUnorderedGroupHelper().canSelect(grammarAccess.getVideoAccess().getUnorderedGroup_1(), 2) ) {s = 4;}

                        else if ( LA34_0 ==27 && getUnorderedGroupHelper().canSelect(grammarAccess.getVideoAccess().getUnorderedGroup_1(), 3) ) {s = 5;}

                        else if ( LA34_0 ==31 && getUnorderedGroupHelper().canSelect(grammarAccess.getVideoAccess().getUnorderedGroup_1(), 4) ) {s = 6;}

                        else if ( LA34_0 ==19 && getUnorderedGroupHelper().canSelect(grammarAccess.getVideoAccess().getUnorderedGroup_1(), 5) ) {s = 7;}

                        else if ( LA34_0 ==22 && getUnorderedGroupHelper().canSelect(grammarAccess.getVideoAccess().getUnorderedGroup_1(), 6) ) {s = 8;}

                        else if ( LA34_0 ==23 && getUnorderedGroupHelper().canSelect(grammarAccess.getVideoAccess().getUnorderedGroup_1(), 7) ) {s = 9;}

                         
                        input.seek(index34_0);
                        if ( s>=0 ) return s;
                        break;
            }
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 34, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String DFA39_eotS =
        "\13\uffff";
    static final String DFA39_eofS =
        "\1\1\12\uffff";
    static final String DFA39_minS =
        "\1\15\12\uffff";
    static final String DFA39_maxS =
        "\1\61\12\uffff";
    static final String DFA39_acceptS =
        "\1\uffff\1\12\1\1\1\2\1\3\1\4\1\5\1\6\1\7\1\10\1\11";
    static final String DFA39_specialS =
        "\1\0\12\uffff}>";
    static final String[] DFA39_transitionS = {
            "\1\3\1\4\1\uffff\2\1\1\2\1\10\2\uffff\1\11\1\12\3\1\1\uffff"+
            "\1\6\1\uffff\1\1\1\uffff\1\1\1\5\1\7\1\1\1\uffff\1\1\1\uffff"+
            "\1\1\2\uffff\2\1\1\uffff\1\1\3\uffff\1\1",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] DFA39_eot = DFA.unpackEncodedString(DFA39_eotS);
    static final short[] DFA39_eof = DFA.unpackEncodedString(DFA39_eofS);
    static final char[] DFA39_min = DFA.unpackEncodedStringToUnsignedChars(DFA39_minS);
    static final char[] DFA39_max = DFA.unpackEncodedStringToUnsignedChars(DFA39_maxS);
    static final short[] DFA39_accept = DFA.unpackEncodedString(DFA39_acceptS);
    static final short[] DFA39_special = DFA.unpackEncodedString(DFA39_specialS);
    static final short[][] DFA39_transition;

    static {
        int numStates = DFA39_transitionS.length;
        DFA39_transition = new short[numStates][];
        for (int i=0; i<numStates; i++) {
            DFA39_transition[i] = DFA.unpackEncodedString(DFA39_transitionS[i]);
        }
    }

    class DFA39 extends DFA {

        public DFA39(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 39;
            this.eot = DFA39_eot;
            this.eof = DFA39_eof;
            this.min = DFA39_min;
            this.max = DFA39_max;
            this.accept = DFA39_accept;
            this.special = DFA39_special;
            this.transition = DFA39_transition;
        }
        public String getDescription() {
            return "()+ loopback of 2386:3: ( ({...}? => ( ({...}? => (otherlv_2= 'item=' ( (lv_item_3_0= ruleItemRef ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= 'label=' ( ( (lv_label_5_1= RULE_ID | lv_label_5_2= RULE_STRING ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= 'icon=' ( (lv_icon_7_0= ruleIcon ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_8= 'service=' ( (lv_service_9_0= RULE_STRING ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= 'refresh=' ( (lv_refresh_11_0= RULE_INT ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_12= 'period=' ( (lv_period_13_0= RULE_ID ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= 'labelcolor=[' ( ( (lv_LabelColor_15_0= ruleColorArray ) ) (otherlv_16= ',' ( (lv_LabelColor_17_0= ruleColorArray ) ) )* otherlv_18= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_19= 'valuecolor=[' ( ( (lv_ValueColor_20_0= ruleColorArray ) ) (otherlv_21= ',' ( (lv_ValueColor_22_0= ruleColorArray ) ) )* otherlv_23= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_24= 'visibility=[' ( ( (lv_Visibility_25_0= ruleVisibilityRule ) ) (otherlv_26= ',' ( (lv_Visibility_27_0= ruleVisibilityRule ) ) )* otherlv_28= ']' ) ) ) ) ) )+";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA39_0 = input.LA(1);

                         
                        int index39_0 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA39_0==EOF||(LA39_0>=16 && LA39_0<=17)||(LA39_0>=24 && LA39_0<=26)||LA39_0==30||LA39_0==32||LA39_0==35||LA39_0==37||LA39_0==39||(LA39_0>=42 && LA39_0<=43)||LA39_0==45||LA39_0==49) ) {s = 1;}

                        else if ( LA39_0 ==18 && getUnorderedGroupHelper().canSelect(grammarAccess.getChartAccess().getUnorderedGroup_1(), 0) ) {s = 2;}

                        else if ( LA39_0 ==13 && getUnorderedGroupHelper().canSelect(grammarAccess.getChartAccess().getUnorderedGroup_1(), 1) ) {s = 3;}

                        else if ( LA39_0 ==14 && getUnorderedGroupHelper().canSelect(grammarAccess.getChartAccess().getUnorderedGroup_1(), 2) ) {s = 4;}

                        else if ( LA39_0 ==33 && getUnorderedGroupHelper().canSelect(grammarAccess.getChartAccess().getUnorderedGroup_1(), 3) ) {s = 5;}

                        else if ( LA39_0 ==28 && getUnorderedGroupHelper().canSelect(grammarAccess.getChartAccess().getUnorderedGroup_1(), 4) ) {s = 6;}

                        else if ( LA39_0 ==34 && getUnorderedGroupHelper().canSelect(grammarAccess.getChartAccess().getUnorderedGroup_1(), 5) ) {s = 7;}

                        else if ( LA39_0 ==19 && getUnorderedGroupHelper().canSelect(grammarAccess.getChartAccess().getUnorderedGroup_1(), 6) ) {s = 8;}

                        else if ( LA39_0 ==22 && getUnorderedGroupHelper().canSelect(grammarAccess.getChartAccess().getUnorderedGroup_1(), 7) ) {s = 9;}

                        else if ( LA39_0 ==23 && getUnorderedGroupHelper().canSelect(grammarAccess.getChartAccess().getUnorderedGroup_1(), 8) ) {s = 10;}

                         
                        input.seek(index39_0);
                        if ( s>=0 ) return s;
                        break;
            }
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 39, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String DFA44_eotS =
        "\12\uffff";
    static final String DFA44_eofS =
        "\1\1\11\uffff";
    static final String DFA44_minS =
        "\1\15\11\uffff";
    static final String DFA44_maxS =
        "\1\61\11\uffff";
    static final String DFA44_acceptS =
        "\1\uffff\1\11\1\1\1\2\1\3\1\4\1\5\1\6\1\7\1\10";
    static final String DFA44_specialS =
        "\1\0\11\uffff}>";
    static final String[] DFA44_transitionS = {
            "\1\3\1\4\1\uffff\2\1\1\2\1\7\2\uffff\1\10\1\11\3\1\1\6\2\uffff"+
            "\1\1\1\uffff\1\1\2\uffff\1\1\1\5\1\1\1\uffff\1\1\2\uffff\2\1"+
            "\1\uffff\1\1\3\uffff\1\1",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] DFA44_eot = DFA.unpackEncodedString(DFA44_eotS);
    static final short[] DFA44_eof = DFA.unpackEncodedString(DFA44_eofS);
    static final char[] DFA44_min = DFA.unpackEncodedStringToUnsignedChars(DFA44_minS);
    static final char[] DFA44_max = DFA.unpackEncodedStringToUnsignedChars(DFA44_maxS);
    static final short[] DFA44_accept = DFA.unpackEncodedString(DFA44_acceptS);
    static final short[] DFA44_special = DFA.unpackEncodedString(DFA44_specialS);
    static final short[][] DFA44_transition;

    static {
        int numStates = DFA44_transitionS.length;
        DFA44_transition = new short[numStates][];
        for (int i=0; i<numStates; i++) {
            DFA44_transition[i] = DFA.unpackEncodedString(DFA44_transitionS[i]);
        }
    }

    class DFA44 extends DFA {

        public DFA44(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 44;
            this.eot = DFA44_eot;
            this.eof = DFA44_eof;
            this.min = DFA44_min;
            this.max = DFA44_max;
            this.accept = DFA44_accept;
            this.special = DFA44_special;
            this.transition = DFA44_transition;
        }
        public String getDescription() {
            return "()+ loopback of 2830:3: ( ({...}? => ( ({...}? => (otherlv_2= 'item=' ( (lv_item_3_0= ruleItemRef ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= 'label=' ( ( (lv_label_5_1= RULE_ID | lv_label_5_2= RULE_STRING ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= 'icon=' ( (lv_icon_7_0= ruleIcon ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_8= 'height=' ( (lv_height_9_0= RULE_INT ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= 'url=' ( (lv_url_11_0= RULE_STRING ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_12= 'labelcolor=[' ( ( (lv_LabelColor_13_0= ruleColorArray ) ) (otherlv_14= ',' ( (lv_LabelColor_15_0= ruleColorArray ) ) )* otherlv_16= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= 'valuecolor=[' ( ( (lv_ValueColor_18_0= ruleColorArray ) ) (otherlv_19= ',' ( (lv_ValueColor_20_0= ruleColorArray ) ) )* otherlv_21= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_22= 'visibility=[' ( ( (lv_Visibility_23_0= ruleVisibilityRule ) ) (otherlv_24= ',' ( (lv_Visibility_25_0= ruleVisibilityRule ) ) )* otherlv_26= ']' ) ) ) ) ) )+";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA44_0 = input.LA(1);

                         
                        int index44_0 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA44_0==EOF||(LA44_0>=16 && LA44_0<=17)||(LA44_0>=24 && LA44_0<=26)||LA44_0==30||LA44_0==32||LA44_0==35||LA44_0==37||LA44_0==39||(LA44_0>=42 && LA44_0<=43)||LA44_0==45||LA44_0==49) ) {s = 1;}

                        else if ( LA44_0 ==18 && getUnorderedGroupHelper().canSelect(grammarAccess.getWebviewAccess().getUnorderedGroup_1(), 0) ) {s = 2;}

                        else if ( LA44_0 ==13 && getUnorderedGroupHelper().canSelect(grammarAccess.getWebviewAccess().getUnorderedGroup_1(), 1) ) {s = 3;}

                        else if ( LA44_0 ==14 && getUnorderedGroupHelper().canSelect(grammarAccess.getWebviewAccess().getUnorderedGroup_1(), 2) ) {s = 4;}

                        else if ( LA44_0 ==36 && getUnorderedGroupHelper().canSelect(grammarAccess.getWebviewAccess().getUnorderedGroup_1(), 3) ) {s = 5;}

                        else if ( LA44_0 ==27 && getUnorderedGroupHelper().canSelect(grammarAccess.getWebviewAccess().getUnorderedGroup_1(), 4) ) {s = 6;}

                        else if ( LA44_0 ==19 && getUnorderedGroupHelper().canSelect(grammarAccess.getWebviewAccess().getUnorderedGroup_1(), 5) ) {s = 7;}

                        else if ( LA44_0 ==22 && getUnorderedGroupHelper().canSelect(grammarAccess.getWebviewAccess().getUnorderedGroup_1(), 6) ) {s = 8;}

                        else if ( LA44_0 ==23 && getUnorderedGroupHelper().canSelect(grammarAccess.getWebviewAccess().getUnorderedGroup_1(), 7) ) {s = 9;}

                         
                        input.seek(index44_0);
                        if ( s>=0 ) return s;
                        break;
            }
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 44, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String DFA55_eotS =
        "\12\uffff";
    static final String DFA55_eofS =
        "\1\1\11\uffff";
    static final String DFA55_minS =
        "\1\15\11\uffff";
    static final String DFA55_maxS =
        "\1\61\11\uffff";
    static final String DFA55_acceptS =
        "\1\uffff\1\11\1\1\1\2\1\3\1\4\1\5\1\6\1\7\1\10";
    static final String DFA55_specialS =
        "\1\0\11\uffff}>";
    static final String[] DFA55_transitionS = {
            "\1\3\1\4\1\uffff\2\1\1\2\1\7\2\uffff\1\10\1\11\3\1\3\uffff"+
            "\1\1\1\uffff\1\1\2\uffff\1\1\1\uffff\1\1\1\uffff\1\1\1\5\1\6"+
            "\2\1\1\uffff\1\1\3\uffff\1\1",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] DFA55_eot = DFA.unpackEncodedString(DFA55_eotS);
    static final short[] DFA55_eof = DFA.unpackEncodedString(DFA55_eofS);
    static final char[] DFA55_min = DFA.unpackEncodedStringToUnsignedChars(DFA55_minS);
    static final char[] DFA55_max = DFA.unpackEncodedStringToUnsignedChars(DFA55_maxS);
    static final short[] DFA55_accept = DFA.unpackEncodedString(DFA55_acceptS);
    static final short[] DFA55_special = DFA.unpackEncodedString(DFA55_specialS);
    static final short[][] DFA55_transition;

    static {
        int numStates = DFA55_transitionS.length;
        DFA55_transition = new short[numStates][];
        for (int i=0; i<numStates; i++) {
            DFA55_transition[i] = DFA.unpackEncodedString(DFA55_transitionS[i]);
        }
    }

    class DFA55 extends DFA {

        public DFA55(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 55;
            this.eot = DFA55_eot;
            this.eof = DFA55_eof;
            this.min = DFA55_min;
            this.max = DFA55_max;
            this.accept = DFA55_accept;
            this.special = DFA55_special;
            this.transition = DFA55_transition;
        }
        public String getDescription() {
            return "()+ loopback of 3642:3: ( ({...}? => ( ({...}? => (otherlv_2= 'item=' ( (lv_item_3_0= ruleItemRef ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= 'label=' ( ( (lv_label_5_1= RULE_ID | lv_label_5_2= RULE_STRING ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= 'icon=' ( (lv_icon_7_0= ruleIcon ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_8= 'sendFrequency=' ( (lv_frequency_9_0= RULE_INT ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_switchEnabled_10_0= 'switchSupport' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_11= 'labelcolor=[' ( ( (lv_LabelColor_12_0= ruleColorArray ) ) (otherlv_13= ',' ( (lv_LabelColor_14_0= ruleColorArray ) ) )* otherlv_15= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_16= 'valuecolor=[' ( ( (lv_ValueColor_17_0= ruleColorArray ) ) (otherlv_18= ',' ( (lv_ValueColor_19_0= ruleColorArray ) ) )* otherlv_20= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= 'visibility=[' ( ( (lv_Visibility_22_0= ruleVisibilityRule ) ) (otherlv_23= ',' ( (lv_Visibility_24_0= ruleVisibilityRule ) ) )* otherlv_25= ']' ) ) ) ) ) )+";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA55_0 = input.LA(1);

                         
                        int index55_0 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA55_0==EOF||(LA55_0>=16 && LA55_0<=17)||(LA55_0>=24 && LA55_0<=26)||LA55_0==30||LA55_0==32||LA55_0==35||LA55_0==37||LA55_0==39||(LA55_0>=42 && LA55_0<=43)||LA55_0==45||LA55_0==49) ) {s = 1;}

                        else if ( LA55_0 ==18 && getUnorderedGroupHelper().canSelect(grammarAccess.getSliderAccess().getUnorderedGroup_1(), 0) ) {s = 2;}

                        else if ( LA55_0 ==13 && getUnorderedGroupHelper().canSelect(grammarAccess.getSliderAccess().getUnorderedGroup_1(), 1) ) {s = 3;}

                        else if ( LA55_0 ==14 && getUnorderedGroupHelper().canSelect(grammarAccess.getSliderAccess().getUnorderedGroup_1(), 2) ) {s = 4;}

                        else if ( LA55_0 ==40 && getUnorderedGroupHelper().canSelect(grammarAccess.getSliderAccess().getUnorderedGroup_1(), 3) ) {s = 5;}

                        else if ( LA55_0 ==41 && getUnorderedGroupHelper().canSelect(grammarAccess.getSliderAccess().getUnorderedGroup_1(), 4) ) {s = 6;}

                        else if ( LA55_0 ==19 && getUnorderedGroupHelper().canSelect(grammarAccess.getSliderAccess().getUnorderedGroup_1(), 5) ) {s = 7;}

                        else if ( LA55_0 ==22 && getUnorderedGroupHelper().canSelect(grammarAccess.getSliderAccess().getUnorderedGroup_1(), 6) ) {s = 8;}

                        else if ( LA55_0 ==23 && getUnorderedGroupHelper().canSelect(grammarAccess.getSliderAccess().getUnorderedGroup_1(), 7) ) {s = 9;}

                         
                        input.seek(index55_0);
                        if ( s>=0 ) return s;
                        break;
            }
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 55, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String DFA72_eotS =
        "\13\uffff";
    static final String DFA72_eofS =
        "\1\1\12\uffff";
    static final String DFA72_minS =
        "\1\15\12\uffff";
    static final String DFA72_maxS =
        "\1\61\12\uffff";
    static final String DFA72_acceptS =
        "\1\uffff\1\12\1\1\1\2\1\3\1\4\1\5\1\6\1\7\1\10\1\11";
    static final String DFA72_specialS =
        "\1\0\12\uffff}>";
    static final String[] DFA72_transitionS = {
            "\1\3\1\4\1\uffff\2\1\1\2\1\10\2\uffff\1\11\1\12\3\1\3\uffff"+
            "\1\1\1\uffff\1\1\2\uffff\1\1\1\uffff\1\1\1\uffff\1\1\2\uffff"+
            "\2\1\1\uffff\1\1\1\5\1\6\1\7\1\1",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] DFA72_eot = DFA.unpackEncodedString(DFA72_eotS);
    static final short[] DFA72_eof = DFA.unpackEncodedString(DFA72_eofS);
    static final char[] DFA72_min = DFA.unpackEncodedStringToUnsignedChars(DFA72_minS);
    static final char[] DFA72_max = DFA.unpackEncodedStringToUnsignedChars(DFA72_maxS);
    static final short[] DFA72_accept = DFA.unpackEncodedString(DFA72_acceptS);
    static final short[] DFA72_special = DFA.unpackEncodedString(DFA72_specialS);
    static final short[][] DFA72_transition;

    static {
        int numStates = DFA72_transitionS.length;
        DFA72_transition = new short[numStates][];
        for (int i=0; i<numStates; i++) {
            DFA72_transition[i] = DFA.unpackEncodedString(DFA72_transitionS[i]);
        }
    }

    class DFA72 extends DFA {

        public DFA72(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 72;
            this.eot = DFA72_eot;
            this.eof = DFA72_eof;
            this.min = DFA72_min;
            this.max = DFA72_max;
            this.accept = DFA72_accept;
            this.special = DFA72_special;
            this.transition = DFA72_transition;
        }
        public String getDescription() {
            return "()+ loopback of 4811:3: ( ({...}? => ( ({...}? => (otherlv_2= 'item=' ( (lv_item_3_0= ruleItemRef ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= 'label=' ( ( (lv_label_5_1= RULE_ID | lv_label_5_2= RULE_STRING ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= 'icon=' ( (lv_icon_7_0= ruleIcon ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_8= 'minValue=' ( (lv_minValue_9_0= ruleNumber ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= 'maxValue=' ( (lv_maxValue_11_0= ruleNumber ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_12= 'step=' ( (lv_step_13_0= ruleNumber ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= 'labelcolor=[' ( ( (lv_LabelColor_15_0= ruleColorArray ) ) (otherlv_16= ',' ( (lv_LabelColor_17_0= ruleColorArray ) ) )* otherlv_18= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_19= 'valuecolor=[' ( ( (lv_ValueColor_20_0= ruleColorArray ) ) (otherlv_21= ',' ( (lv_ValueColor_22_0= ruleColorArray ) ) )* otherlv_23= ']' ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_24= 'visibility=[' ( ( (lv_Visibility_25_0= ruleVisibilityRule ) ) (otherlv_26= ',' ( (lv_Visibility_27_0= ruleVisibilityRule ) ) )* otherlv_28= ']' ) ) ) ) ) )+";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA72_0 = input.LA(1);

                         
                        int index72_0 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA72_0==EOF||(LA72_0>=16 && LA72_0<=17)||(LA72_0>=24 && LA72_0<=26)||LA72_0==30||LA72_0==32||LA72_0==35||LA72_0==37||LA72_0==39||(LA72_0>=42 && LA72_0<=43)||LA72_0==45||LA72_0==49) ) {s = 1;}

                        else if ( LA72_0 ==18 && getUnorderedGroupHelper().canSelect(grammarAccess.getSetpointAccess().getUnorderedGroup_1(), 0) ) {s = 2;}

                        else if ( LA72_0 ==13 && getUnorderedGroupHelper().canSelect(grammarAccess.getSetpointAccess().getUnorderedGroup_1(), 1) ) {s = 3;}

                        else if ( LA72_0 ==14 && getUnorderedGroupHelper().canSelect(grammarAccess.getSetpointAccess().getUnorderedGroup_1(), 2) ) {s = 4;}

                        else if ( LA72_0 ==46 && getUnorderedGroupHelper().canSelect(grammarAccess.getSetpointAccess().getUnorderedGroup_1(), 3) ) {s = 5;}

                        else if ( LA72_0 ==47 && getUnorderedGroupHelper().canSelect(grammarAccess.getSetpointAccess().getUnorderedGroup_1(), 4) ) {s = 6;}

                        else if ( LA72_0 ==48 && getUnorderedGroupHelper().canSelect(grammarAccess.getSetpointAccess().getUnorderedGroup_1(), 5) ) {s = 7;}

                        else if ( LA72_0 ==19 && getUnorderedGroupHelper().canSelect(grammarAccess.getSetpointAccess().getUnorderedGroup_1(), 6) ) {s = 8;}

                        else if ( LA72_0 ==22 && getUnorderedGroupHelper().canSelect(grammarAccess.getSetpointAccess().getUnorderedGroup_1(), 7) ) {s = 9;}

                        else if ( LA72_0 ==23 && getUnorderedGroupHelper().canSelect(grammarAccess.getSetpointAccess().getUnorderedGroup_1(), 8) ) {s = 10;}

                         
                        input.seek(index72_0);
                        if ( s>=0 ) return s;
                        break;
            }
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 72, _s, input);
            error(nvae);
            throw nvae;
        }
    }
 

    public static final BitSet FOLLOW_ruleSitemapModel_in_entryRuleSitemapModel75 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleSitemapModel85 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_12_in_ruleSitemapModel122 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_ruleSitemap_in_ruleSitemapModel144 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleSitemap_in_entryRuleSitemap179 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleSitemap189 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_RULE_ID_in_ruleSitemap231 = new BitSet(new long[]{0x000000000000E000L});
    public static final BitSet FOLLOW_13_in_ruleSitemap249 = new BitSet(new long[]{0x0000000000000020L});
    public static final BitSet FOLLOW_RULE_STRING_in_ruleSitemap266 = new BitSet(new long[]{0x000000000000C000L});
    public static final BitSet FOLLOW_14_in_ruleSitemap286 = new BitSet(new long[]{0x0000000000000020L});
    public static final BitSet FOLLOW_RULE_STRING_in_ruleSitemap303 = new BitSet(new long[]{0x0000000000008000L});
    public static final BitSet FOLLOW_15_in_ruleSitemap322 = new BitSet(new long[]{0x00022CA947020000L});
    public static final BitSet FOLLOW_ruleWidget_in_ruleSitemap343 = new BitSet(new long[]{0x00022CA947030000L});
    public static final BitSet FOLLOW_16_in_ruleSitemap356 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleWidget_in_entryRuleWidget392 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleWidget402 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleLinkableWidget_in_ruleWidget449 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleNonLinkableWidget_in_ruleWidget476 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleNonLinkableWidget_in_entryRuleNonLinkableWidget511 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleNonLinkableWidget521 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleSwitch_in_ruleNonLinkableWidget568 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleSelection_in_ruleNonLinkableWidget595 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleSlider_in_ruleNonLinkableWidget622 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleList_in_ruleNonLinkableWidget649 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleSetpoint_in_ruleNonLinkableWidget676 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleVideo_in_ruleNonLinkableWidget703 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleChart_in_ruleNonLinkableWidget730 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleWebview_in_ruleNonLinkableWidget757 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleColorpicker_in_ruleNonLinkableWidget784 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleLinkableWidget_in_entryRuleLinkableWidget819 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleLinkableWidget829 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleText_in_ruleLinkableWidget877 = new BitSet(new long[]{0x0000000000008002L});
    public static final BitSet FOLLOW_ruleGroup_in_ruleLinkableWidget904 = new BitSet(new long[]{0x0000000000008002L});
    public static final BitSet FOLLOW_ruleImage_in_ruleLinkableWidget931 = new BitSet(new long[]{0x0000000000008002L});
    public static final BitSet FOLLOW_ruleFrame_in_ruleLinkableWidget958 = new BitSet(new long[]{0x0000000000008002L});
    public static final BitSet FOLLOW_15_in_ruleLinkableWidget971 = new BitSet(new long[]{0x00022CA947020000L});
    public static final BitSet FOLLOW_ruleWidget_in_ruleLinkableWidget992 = new BitSet(new long[]{0x00022CA947030000L});
    public static final BitSet FOLLOW_16_in_ruleLinkableWidget1005 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleFrame_in_entryRuleFrame1043 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleFrame1053 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_17_in_ruleFrame1099 = new BitSet(new long[]{0x0000000000CC6002L});
    public static final BitSet FOLLOW_18_in_ruleFrame1157 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_ruleItemRef_in_ruleFrame1178 = new BitSet(new long[]{0x0000000000CC6002L});
    public static final BitSet FOLLOW_13_in_ruleFrame1246 = new BitSet(new long[]{0x0000000000000030L});
    public static final BitSet FOLLOW_RULE_ID_in_ruleFrame1265 = new BitSet(new long[]{0x0000000000CC6002L});
    public static final BitSet FOLLOW_RULE_STRING_in_ruleFrame1285 = new BitSet(new long[]{0x0000000000CC6002L});
    public static final BitSet FOLLOW_14_in_ruleFrame1361 = new BitSet(new long[]{0x0000000000000020L});
    public static final BitSet FOLLOW_ruleIcon_in_ruleFrame1382 = new BitSet(new long[]{0x0000000000CC6002L});
    public static final BitSet FOLLOW_19_in_ruleFrame1450 = new BitSet(new long[]{0x07F80000000000F0L});
    public static final BitSet FOLLOW_ruleColorArray_in_ruleFrame1472 = new BitSet(new long[]{0x0000000000300000L});
    public static final BitSet FOLLOW_20_in_ruleFrame1485 = new BitSet(new long[]{0x07F80000000000F0L});
    public static final BitSet FOLLOW_ruleColorArray_in_ruleFrame1506 = new BitSet(new long[]{0x0000000000300000L});
    public static final BitSet FOLLOW_21_in_ruleFrame1520 = new BitSet(new long[]{0x0000000000CC6002L});
    public static final BitSet FOLLOW_22_in_ruleFrame1589 = new BitSet(new long[]{0x07F80000000000F0L});
    public static final BitSet FOLLOW_ruleColorArray_in_ruleFrame1611 = new BitSet(new long[]{0x0000000000300000L});
    public static final BitSet FOLLOW_20_in_ruleFrame1624 = new BitSet(new long[]{0x07F80000000000F0L});
    public static final BitSet FOLLOW_ruleColorArray_in_ruleFrame1645 = new BitSet(new long[]{0x0000000000300000L});
    public static final BitSet FOLLOW_21_in_ruleFrame1659 = new BitSet(new long[]{0x0000000000CC6002L});
    public static final BitSet FOLLOW_23_in_ruleFrame1728 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_ruleVisibilityRule_in_ruleFrame1750 = new BitSet(new long[]{0x0000000000300000L});
    public static final BitSet FOLLOW_20_in_ruleFrame1763 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_ruleVisibilityRule_in_ruleFrame1784 = new BitSet(new long[]{0x0000000000300000L});
    public static final BitSet FOLLOW_21_in_ruleFrame1798 = new BitSet(new long[]{0x0000000000CC6002L});
    public static final BitSet FOLLOW_ruleText_in_entryRuleText1876 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleText1886 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_24_in_ruleText1932 = new BitSet(new long[]{0x0000000000CC6002L});
    public static final BitSet FOLLOW_18_in_ruleText1990 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_ruleItemRef_in_ruleText2011 = new BitSet(new long[]{0x0000000000CC6002L});
    public static final BitSet FOLLOW_13_in_ruleText2079 = new BitSet(new long[]{0x0000000000000030L});
    public static final BitSet FOLLOW_RULE_ID_in_ruleText2098 = new BitSet(new long[]{0x0000000000CC6002L});
    public static final BitSet FOLLOW_RULE_STRING_in_ruleText2118 = new BitSet(new long[]{0x0000000000CC6002L});
    public static final BitSet FOLLOW_14_in_ruleText2194 = new BitSet(new long[]{0x0000000000000020L});
    public static final BitSet FOLLOW_ruleIcon_in_ruleText2215 = new BitSet(new long[]{0x0000000000CC6002L});
    public static final BitSet FOLLOW_19_in_ruleText2283 = new BitSet(new long[]{0x07F80000000000F0L});
    public static final BitSet FOLLOW_ruleColorArray_in_ruleText2305 = new BitSet(new long[]{0x0000000000300000L});
    public static final BitSet FOLLOW_20_in_ruleText2318 = new BitSet(new long[]{0x07F80000000000F0L});
    public static final BitSet FOLLOW_ruleColorArray_in_ruleText2339 = new BitSet(new long[]{0x0000000000300000L});
    public static final BitSet FOLLOW_21_in_ruleText2353 = new BitSet(new long[]{0x0000000000CC6002L});
    public static final BitSet FOLLOW_22_in_ruleText2422 = new BitSet(new long[]{0x07F80000000000F0L});
    public static final BitSet FOLLOW_ruleColorArray_in_ruleText2444 = new BitSet(new long[]{0x0000000000300000L});
    public static final BitSet FOLLOW_20_in_ruleText2457 = new BitSet(new long[]{0x07F80000000000F0L});
    public static final BitSet FOLLOW_ruleColorArray_in_ruleText2478 = new BitSet(new long[]{0x0000000000300000L});
    public static final BitSet FOLLOW_21_in_ruleText2492 = new BitSet(new long[]{0x0000000000CC6002L});
    public static final BitSet FOLLOW_23_in_ruleText2561 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_ruleVisibilityRule_in_ruleText2583 = new BitSet(new long[]{0x0000000000300000L});
    public static final BitSet FOLLOW_20_in_ruleText2596 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_ruleVisibilityRule_in_ruleText2617 = new BitSet(new long[]{0x0000000000300000L});
    public static final BitSet FOLLOW_21_in_ruleText2631 = new BitSet(new long[]{0x0000000000CC6002L});
    public static final BitSet FOLLOW_ruleGroup_in_entryRuleGroup2709 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleGroup2719 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_25_in_ruleGroup2756 = new BitSet(new long[]{0x0000000000CC6000L});
    public static final BitSet FOLLOW_18_in_ruleGroup2814 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_ruleGroupItemRef_in_ruleGroup2835 = new BitSet(new long[]{0x0000000000CC6002L});
    public static final BitSet FOLLOW_13_in_ruleGroup2903 = new BitSet(new long[]{0x0000000000000030L});
    public static final BitSet FOLLOW_RULE_ID_in_ruleGroup2922 = new BitSet(new long[]{0x0000000000CC6002L});
    public static final BitSet FOLLOW_RULE_STRING_in_ruleGroup2942 = new BitSet(new long[]{0x0000000000CC6002L});
    public static final BitSet FOLLOW_14_in_ruleGroup3018 = new BitSet(new long[]{0x0000000000000020L});
    public static final BitSet FOLLOW_ruleIcon_in_ruleGroup3039 = new BitSet(new long[]{0x0000000000CC6002L});
    public static final BitSet FOLLOW_19_in_ruleGroup3107 = new BitSet(new long[]{0x07F80000000000F0L});
    public static final BitSet FOLLOW_ruleColorArray_in_ruleGroup3129 = new BitSet(new long[]{0x0000000000300000L});
    public static final BitSet FOLLOW_20_in_ruleGroup3142 = new BitSet(new long[]{0x07F80000000000F0L});
    public static final BitSet FOLLOW_ruleColorArray_in_ruleGroup3163 = new BitSet(new long[]{0x0000000000300000L});
    public static final BitSet FOLLOW_21_in_ruleGroup3177 = new BitSet(new long[]{0x0000000000CC6002L});
    public static final BitSet FOLLOW_22_in_ruleGroup3246 = new BitSet(new long[]{0x07F80000000000F0L});
    public static final BitSet FOLLOW_ruleColorArray_in_ruleGroup3268 = new BitSet(new long[]{0x0000000000300000L});
    public static final BitSet FOLLOW_20_in_ruleGroup3281 = new BitSet(new long[]{0x07F80000000000F0L});
    public static final BitSet FOLLOW_ruleColorArray_in_ruleGroup3302 = new BitSet(new long[]{0x0000000000300000L});
    public static final BitSet FOLLOW_21_in_ruleGroup3316 = new BitSet(new long[]{0x0000000000CC6002L});
    public static final BitSet FOLLOW_23_in_ruleGroup3385 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_ruleVisibilityRule_in_ruleGroup3407 = new BitSet(new long[]{0x0000000000300000L});
    public static final BitSet FOLLOW_20_in_ruleGroup3420 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_ruleVisibilityRule_in_ruleGroup3441 = new BitSet(new long[]{0x0000000000300000L});
    public static final BitSet FOLLOW_21_in_ruleGroup3455 = new BitSet(new long[]{0x0000000000CC6002L});
    public static final BitSet FOLLOW_ruleImage_in_entryRuleImage3539 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleImage3549 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_26_in_ruleImage3586 = new BitSet(new long[]{0x0000000038CC6000L});
    public static final BitSet FOLLOW_18_in_ruleImage3644 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_ruleItemRef_in_ruleImage3665 = new BitSet(new long[]{0x0000000038CC6002L});
    public static final BitSet FOLLOW_13_in_ruleImage3733 = new BitSet(new long[]{0x0000000000000030L});
    public static final BitSet FOLLOW_RULE_ID_in_ruleImage3752 = new BitSet(new long[]{0x0000000038CC6002L});
    public static final BitSet FOLLOW_RULE_STRING_in_ruleImage3772 = new BitSet(new long[]{0x0000000038CC6002L});
    public static final BitSet FOLLOW_14_in_ruleImage3848 = new BitSet(new long[]{0x0000000000000020L});
    public static final BitSet FOLLOW_ruleIcon_in_ruleImage3869 = new BitSet(new long[]{0x0000000038CC6002L});
    public static final BitSet FOLLOW_27_in_ruleImage3937 = new BitSet(new long[]{0x0000000000000020L});
    public static final BitSet FOLLOW_RULE_STRING_in_ruleImage3954 = new BitSet(new long[]{0x0000000038CC6002L});
    public static final BitSet FOLLOW_28_in_ruleImage4027 = new BitSet(new long[]{0x0000000000000040L});
    public static final BitSet FOLLOW_RULE_INT_in_ruleImage4044 = new BitSet(new long[]{0x0000000038CC6002L});
    public static final BitSet FOLLOW_19_in_ruleImage4117 = new BitSet(new long[]{0x07F80000000000F0L});
    public static final BitSet FOLLOW_ruleColorArray_in_ruleImage4139 = new BitSet(new long[]{0x0000000000300000L});
    public static final BitSet FOLLOW_20_in_ruleImage4152 = new BitSet(new long[]{0x07F80000000000F0L});
    public static final BitSet FOLLOW_ruleColorArray_in_ruleImage4173 = new BitSet(new long[]{0x0000000000300000L});
    public static final BitSet FOLLOW_21_in_ruleImage4187 = new BitSet(new long[]{0x0000000038CC6002L});
    public static final BitSet FOLLOW_22_in_ruleImage4256 = new BitSet(new long[]{0x07F80000000000F0L});
    public static final BitSet FOLLOW_ruleColorArray_in_ruleImage4278 = new BitSet(new long[]{0x0000000000300000L});
    public static final BitSet FOLLOW_20_in_ruleImage4291 = new BitSet(new long[]{0x07F80000000000F0L});
    public static final BitSet FOLLOW_ruleColorArray_in_ruleImage4312 = new BitSet(new long[]{0x0000000000300000L});
    public static final BitSet FOLLOW_21_in_ruleImage4326 = new BitSet(new long[]{0x0000000038CC6002L});
    public static final BitSet FOLLOW_29_in_ruleImage4395 = new BitSet(new long[]{0x07F80000000000F0L});
    public static final BitSet FOLLOW_ruleColorArray_in_ruleImage4417 = new BitSet(new long[]{0x0000000000300000L});
    public static final BitSet FOLLOW_20_in_ruleImage4430 = new BitSet(new long[]{0x07F80000000000F0L});
    public static final BitSet FOLLOW_ruleColorArray_in_ruleImage4451 = new BitSet(new long[]{0x0000000000300000L});
    public static final BitSet FOLLOW_21_in_ruleImage4465 = new BitSet(new long[]{0x0000000038CC6002L});
    public static final BitSet FOLLOW_23_in_ruleImage4534 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_ruleVisibilityRule_in_ruleImage4556 = new BitSet(new long[]{0x0000000000300000L});
    public static final BitSet FOLLOW_20_in_ruleImage4569 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_ruleVisibilityRule_in_ruleImage4590 = new BitSet(new long[]{0x0000000000300000L});
    public static final BitSet FOLLOW_21_in_ruleImage4604 = new BitSet(new long[]{0x0000000038CC6002L});
    public static final BitSet FOLLOW_ruleVideo_in_entryRuleVideo4688 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleVideo4698 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_30_in_ruleVideo4735 = new BitSet(new long[]{0x0000000088CC6000L});
    public static final BitSet FOLLOW_18_in_ruleVideo4793 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_ruleItemRef_in_ruleVideo4814 = new BitSet(new long[]{0x0000000088CC6002L});
    public static final BitSet FOLLOW_13_in_ruleVideo4882 = new BitSet(new long[]{0x0000000000000030L});
    public static final BitSet FOLLOW_RULE_ID_in_ruleVideo4901 = new BitSet(new long[]{0x0000000088CC6002L});
    public static final BitSet FOLLOW_RULE_STRING_in_ruleVideo4921 = new BitSet(new long[]{0x0000000088CC6002L});
    public static final BitSet FOLLOW_14_in_ruleVideo4997 = new BitSet(new long[]{0x0000000000000020L});
    public static final BitSet FOLLOW_ruleIcon_in_ruleVideo5018 = new BitSet(new long[]{0x0000000088CC6002L});
    public static final BitSet FOLLOW_27_in_ruleVideo5086 = new BitSet(new long[]{0x0000000000000020L});
    public static final BitSet FOLLOW_RULE_STRING_in_ruleVideo5103 = new BitSet(new long[]{0x0000000088CC6002L});
    public static final BitSet FOLLOW_31_in_ruleVideo5176 = new BitSet(new long[]{0x0000000000000020L});
    public static final BitSet FOLLOW_RULE_STRING_in_ruleVideo5193 = new BitSet(new long[]{0x0000000088CC6002L});
    public static final BitSet FOLLOW_19_in_ruleVideo5266 = new BitSet(new long[]{0x07F80000000000F0L});
    public static final BitSet FOLLOW_ruleColorArray_in_ruleVideo5288 = new BitSet(new long[]{0x0000000000300000L});
    public static final BitSet FOLLOW_20_in_ruleVideo5301 = new BitSet(new long[]{0x07F80000000000F0L});
    public static final BitSet FOLLOW_ruleColorArray_in_ruleVideo5322 = new BitSet(new long[]{0x0000000000300000L});
    public static final BitSet FOLLOW_21_in_ruleVideo5336 = new BitSet(new long[]{0x0000000088CC6002L});
    public static final BitSet FOLLOW_22_in_ruleVideo5405 = new BitSet(new long[]{0x07F80000000000F0L});
    public static final BitSet FOLLOW_ruleColorArray_in_ruleVideo5427 = new BitSet(new long[]{0x0000000000300000L});
    public static final BitSet FOLLOW_20_in_ruleVideo5440 = new BitSet(new long[]{0x07F80000000000F0L});
    public static final BitSet FOLLOW_ruleColorArray_in_ruleVideo5461 = new BitSet(new long[]{0x0000000000300000L});
    public static final BitSet FOLLOW_21_in_ruleVideo5475 = new BitSet(new long[]{0x0000000088CC6002L});
    public static final BitSet FOLLOW_23_in_ruleVideo5544 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_ruleVisibilityRule_in_ruleVideo5566 = new BitSet(new long[]{0x0000000000300000L});
    public static final BitSet FOLLOW_20_in_ruleVideo5579 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_ruleVisibilityRule_in_ruleVideo5600 = new BitSet(new long[]{0x0000000000300000L});
    public static final BitSet FOLLOW_21_in_ruleVideo5614 = new BitSet(new long[]{0x0000000088CC6002L});
    public static final BitSet FOLLOW_ruleChart_in_entryRuleChart5698 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleChart5708 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_32_in_ruleChart5745 = new BitSet(new long[]{0x0000000610CC6000L});
    public static final BitSet FOLLOW_18_in_ruleChart5803 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_ruleItemRef_in_ruleChart5824 = new BitSet(new long[]{0x0000000610CC6002L});
    public static final BitSet FOLLOW_13_in_ruleChart5892 = new BitSet(new long[]{0x0000000000000030L});
    public static final BitSet FOLLOW_RULE_ID_in_ruleChart5911 = new BitSet(new long[]{0x0000000610CC6002L});
    public static final BitSet FOLLOW_RULE_STRING_in_ruleChart5931 = new BitSet(new long[]{0x0000000610CC6002L});
    public static final BitSet FOLLOW_14_in_ruleChart6007 = new BitSet(new long[]{0x0000000000000020L});
    public static final BitSet FOLLOW_ruleIcon_in_ruleChart6028 = new BitSet(new long[]{0x0000000610CC6002L});
    public static final BitSet FOLLOW_33_in_ruleChart6096 = new BitSet(new long[]{0x0000000000000020L});
    public static final BitSet FOLLOW_RULE_STRING_in_ruleChart6113 = new BitSet(new long[]{0x0000000610CC6002L});
    public static final BitSet FOLLOW_28_in_ruleChart6186 = new BitSet(new long[]{0x0000000000000040L});
    public static final BitSet FOLLOW_RULE_INT_in_ruleChart6203 = new BitSet(new long[]{0x0000000610CC6002L});
    public static final BitSet FOLLOW_34_in_ruleChart6276 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_RULE_ID_in_ruleChart6293 = new BitSet(new long[]{0x0000000610CC6002L});
    public static final BitSet FOLLOW_19_in_ruleChart6366 = new BitSet(new long[]{0x07F80000000000F0L});
    public static final BitSet FOLLOW_ruleColorArray_in_ruleChart6388 = new BitSet(new long[]{0x0000000000300000L});
    public static final BitSet FOLLOW_20_in_ruleChart6401 = new BitSet(new long[]{0x07F80000000000F0L});
    public static final BitSet FOLLOW_ruleColorArray_in_ruleChart6422 = new BitSet(new long[]{0x0000000000300000L});
    public static final BitSet FOLLOW_21_in_ruleChart6436 = new BitSet(new long[]{0x0000000610CC6002L});
    public static final BitSet FOLLOW_22_in_ruleChart6505 = new BitSet(new long[]{0x07F80000000000F0L});
    public static final BitSet FOLLOW_ruleColorArray_in_ruleChart6527 = new BitSet(new long[]{0x0000000000300000L});
    public static final BitSet FOLLOW_20_in_ruleChart6540 = new BitSet(new long[]{0x07F80000000000F0L});
    public static final BitSet FOLLOW_ruleColorArray_in_ruleChart6561 = new BitSet(new long[]{0x0000000000300000L});
    public static final BitSet FOLLOW_21_in_ruleChart6575 = new BitSet(new long[]{0x0000000610CC6002L});
    public static final BitSet FOLLOW_23_in_ruleChart6644 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_ruleVisibilityRule_in_ruleChart6666 = new BitSet(new long[]{0x0000000000300000L});
    public static final BitSet FOLLOW_20_in_ruleChart6679 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_ruleVisibilityRule_in_ruleChart6700 = new BitSet(new long[]{0x0000000000300000L});
    public static final BitSet FOLLOW_21_in_ruleChart6714 = new BitSet(new long[]{0x0000000610CC6002L});
    public static final BitSet FOLLOW_ruleWebview_in_entryRuleWebview6798 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleWebview6808 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_35_in_ruleWebview6845 = new BitSet(new long[]{0x0000001008CC6000L});
    public static final BitSet FOLLOW_18_in_ruleWebview6903 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_ruleItemRef_in_ruleWebview6924 = new BitSet(new long[]{0x0000001008CC6002L});
    public static final BitSet FOLLOW_13_in_ruleWebview6992 = new BitSet(new long[]{0x0000000000000030L});
    public static final BitSet FOLLOW_RULE_ID_in_ruleWebview7011 = new BitSet(new long[]{0x0000001008CC6002L});
    public static final BitSet FOLLOW_RULE_STRING_in_ruleWebview7031 = new BitSet(new long[]{0x0000001008CC6002L});
    public static final BitSet FOLLOW_14_in_ruleWebview7107 = new BitSet(new long[]{0x0000000000000020L});
    public static final BitSet FOLLOW_ruleIcon_in_ruleWebview7128 = new BitSet(new long[]{0x0000001008CC6002L});
    public static final BitSet FOLLOW_36_in_ruleWebview7196 = new BitSet(new long[]{0x0000000000000040L});
    public static final BitSet FOLLOW_RULE_INT_in_ruleWebview7213 = new BitSet(new long[]{0x0000001008CC6002L});
    public static final BitSet FOLLOW_27_in_ruleWebview7286 = new BitSet(new long[]{0x0000000000000020L});
    public static final BitSet FOLLOW_RULE_STRING_in_ruleWebview7303 = new BitSet(new long[]{0x0000001008CC6002L});
    public static final BitSet FOLLOW_19_in_ruleWebview7376 = new BitSet(new long[]{0x07F80000000000F0L});
    public static final BitSet FOLLOW_ruleColorArray_in_ruleWebview7398 = new BitSet(new long[]{0x0000000000300000L});
    public static final BitSet FOLLOW_20_in_ruleWebview7411 = new BitSet(new long[]{0x07F80000000000F0L});
    public static final BitSet FOLLOW_ruleColorArray_in_ruleWebview7432 = new BitSet(new long[]{0x0000000000300000L});
    public static final BitSet FOLLOW_21_in_ruleWebview7446 = new BitSet(new long[]{0x0000001008CC6002L});
    public static final BitSet FOLLOW_22_in_ruleWebview7515 = new BitSet(new long[]{0x07F80000000000F0L});
    public static final BitSet FOLLOW_ruleColorArray_in_ruleWebview7537 = new BitSet(new long[]{0x0000000000300000L});
    public static final BitSet FOLLOW_20_in_ruleWebview7550 = new BitSet(new long[]{0x07F80000000000F0L});
    public static final BitSet FOLLOW_ruleColorArray_in_ruleWebview7571 = new BitSet(new long[]{0x0000000000300000L});
    public static final BitSet FOLLOW_21_in_ruleWebview7585 = new BitSet(new long[]{0x0000001008CC6002L});
    public static final BitSet FOLLOW_23_in_ruleWebview7654 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_ruleVisibilityRule_in_ruleWebview7676 = new BitSet(new long[]{0x0000000000300000L});
    public static final BitSet FOLLOW_20_in_ruleWebview7689 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_ruleVisibilityRule_in_ruleWebview7710 = new BitSet(new long[]{0x0000000000300000L});
    public static final BitSet FOLLOW_21_in_ruleWebview7724 = new BitSet(new long[]{0x0000001008CC6002L});
    public static final BitSet FOLLOW_ruleSwitch_in_entryRuleSwitch7808 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleSwitch7818 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_37_in_ruleSwitch7855 = new BitSet(new long[]{0x0000004000CC6000L});
    public static final BitSet FOLLOW_18_in_ruleSwitch7913 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_ruleItemRef_in_ruleSwitch7934 = new BitSet(new long[]{0x0000004000CC6002L});
    public static final BitSet FOLLOW_13_in_ruleSwitch8002 = new BitSet(new long[]{0x0000000000000030L});
    public static final BitSet FOLLOW_RULE_ID_in_ruleSwitch8021 = new BitSet(new long[]{0x0000004000CC6002L});
    public static final BitSet FOLLOW_RULE_STRING_in_ruleSwitch8041 = new BitSet(new long[]{0x0000004000CC6002L});
    public static final BitSet FOLLOW_14_in_ruleSwitch8117 = new BitSet(new long[]{0x0000000000000020L});
    public static final BitSet FOLLOW_ruleIcon_in_ruleSwitch8138 = new BitSet(new long[]{0x0000004000CC6002L});
    public static final BitSet FOLLOW_38_in_ruleSwitch8206 = new BitSet(new long[]{0x0000000000000070L});
    public static final BitSet FOLLOW_ruleMapping_in_ruleSwitch8227 = new BitSet(new long[]{0x0000000000300000L});
    public static final BitSet FOLLOW_20_in_ruleSwitch8240 = new BitSet(new long[]{0x0000000000000070L});
    public static final BitSet FOLLOW_ruleMapping_in_ruleSwitch8261 = new BitSet(new long[]{0x0000000000300000L});
    public static final BitSet FOLLOW_21_in_ruleSwitch8275 = new BitSet(new long[]{0x0000004000CC6002L});
    public static final BitSet FOLLOW_19_in_ruleSwitch8343 = new BitSet(new long[]{0x07F80000000000F0L});
    public static final BitSet FOLLOW_ruleColorArray_in_ruleSwitch8365 = new BitSet(new long[]{0x0000000000300000L});
    public static final BitSet FOLLOW_20_in_ruleSwitch8378 = new BitSet(new long[]{0x07F80000000000F0L});
    public static final BitSet FOLLOW_ruleColorArray_in_ruleSwitch8399 = new BitSet(new long[]{0x0000000000300000L});
    public static final BitSet FOLLOW_21_in_ruleSwitch8413 = new BitSet(new long[]{0x0000004000CC6002L});
    public static final BitSet FOLLOW_22_in_ruleSwitch8482 = new BitSet(new long[]{0x07F80000000000F0L});
    public static final BitSet FOLLOW_ruleColorArray_in_ruleSwitch8504 = new BitSet(new long[]{0x0000000000300000L});
    public static final BitSet FOLLOW_20_in_ruleSwitch8517 = new BitSet(new long[]{0x07F80000000000F0L});
    public static final BitSet FOLLOW_ruleColorArray_in_ruleSwitch8538 = new BitSet(new long[]{0x0000000000300000L});
    public static final BitSet FOLLOW_21_in_ruleSwitch8552 = new BitSet(new long[]{0x0000004000CC6002L});
    public static final BitSet FOLLOW_23_in_ruleSwitch8621 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_ruleVisibilityRule_in_ruleSwitch8643 = new BitSet(new long[]{0x0000000000300000L});
    public static final BitSet FOLLOW_20_in_ruleSwitch8656 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_ruleVisibilityRule_in_ruleSwitch8677 = new BitSet(new long[]{0x0000000000300000L});
    public static final BitSet FOLLOW_21_in_ruleSwitch8691 = new BitSet(new long[]{0x0000004000CC6002L});
    public static final BitSet FOLLOW_ruleSlider_in_entryRuleSlider8775 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleSlider8785 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_39_in_ruleSlider8822 = new BitSet(new long[]{0x0000030000CC6000L});
    public static final BitSet FOLLOW_18_in_ruleSlider8880 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_ruleItemRef_in_ruleSlider8901 = new BitSet(new long[]{0x0000030000CC6002L});
    public static final BitSet FOLLOW_13_in_ruleSlider8969 = new BitSet(new long[]{0x0000000000000030L});
    public static final BitSet FOLLOW_RULE_ID_in_ruleSlider8988 = new BitSet(new long[]{0x0000030000CC6002L});
    public static final BitSet FOLLOW_RULE_STRING_in_ruleSlider9008 = new BitSet(new long[]{0x0000030000CC6002L});
    public static final BitSet FOLLOW_14_in_ruleSlider9084 = new BitSet(new long[]{0x0000000000000020L});
    public static final BitSet FOLLOW_ruleIcon_in_ruleSlider9105 = new BitSet(new long[]{0x0000030000CC6002L});
    public static final BitSet FOLLOW_40_in_ruleSlider9173 = new BitSet(new long[]{0x0000000000000040L});
    public static final BitSet FOLLOW_RULE_INT_in_ruleSlider9190 = new BitSet(new long[]{0x0000030000CC6002L});
    public static final BitSet FOLLOW_41_in_ruleSlider9268 = new BitSet(new long[]{0x0000030000CC6002L});
    public static final BitSet FOLLOW_19_in_ruleSlider9348 = new BitSet(new long[]{0x07F80000000000F0L});
    public static final BitSet FOLLOW_ruleColorArray_in_ruleSlider9370 = new BitSet(new long[]{0x0000000000300000L});
    public static final BitSet FOLLOW_20_in_ruleSlider9383 = new BitSet(new long[]{0x07F80000000000F0L});
    public static final BitSet FOLLOW_ruleColorArray_in_ruleSlider9404 = new BitSet(new long[]{0x0000000000300000L});
    public static final BitSet FOLLOW_21_in_ruleSlider9418 = new BitSet(new long[]{0x0000030000CC6002L});
    public static final BitSet FOLLOW_22_in_ruleSlider9487 = new BitSet(new long[]{0x07F80000000000F0L});
    public static final BitSet FOLLOW_ruleColorArray_in_ruleSlider9509 = new BitSet(new long[]{0x0000000000300000L});
    public static final BitSet FOLLOW_20_in_ruleSlider9522 = new BitSet(new long[]{0x07F80000000000F0L});
    public static final BitSet FOLLOW_ruleColorArray_in_ruleSlider9543 = new BitSet(new long[]{0x0000000000300000L});
    public static final BitSet FOLLOW_21_in_ruleSlider9557 = new BitSet(new long[]{0x0000030000CC6002L});
    public static final BitSet FOLLOW_23_in_ruleSlider9626 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_ruleVisibilityRule_in_ruleSlider9648 = new BitSet(new long[]{0x0000000000300000L});
    public static final BitSet FOLLOW_20_in_ruleSlider9661 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_ruleVisibilityRule_in_ruleSlider9682 = new BitSet(new long[]{0x0000000000300000L});
    public static final BitSet FOLLOW_21_in_ruleSlider9696 = new BitSet(new long[]{0x0000030000CC6002L});
    public static final BitSet FOLLOW_ruleSelection_in_entryRuleSelection9780 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleSelection9790 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_42_in_ruleSelection9827 = new BitSet(new long[]{0x0000004000CC6000L});
    public static final BitSet FOLLOW_18_in_ruleSelection9885 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_ruleItemRef_in_ruleSelection9906 = new BitSet(new long[]{0x0000004000CC6002L});
    public static final BitSet FOLLOW_13_in_ruleSelection9974 = new BitSet(new long[]{0x0000000000000030L});
    public static final BitSet FOLLOW_RULE_ID_in_ruleSelection9993 = new BitSet(new long[]{0x0000004000CC6002L});
    public static final BitSet FOLLOW_RULE_STRING_in_ruleSelection10013 = new BitSet(new long[]{0x0000004000CC6002L});
    public static final BitSet FOLLOW_14_in_ruleSelection10089 = new BitSet(new long[]{0x0000000000000020L});
    public static final BitSet FOLLOW_ruleIcon_in_ruleSelection10110 = new BitSet(new long[]{0x0000004000CC6002L});
    public static final BitSet FOLLOW_38_in_ruleSelection10178 = new BitSet(new long[]{0x0000000000000070L});
    public static final BitSet FOLLOW_ruleMapping_in_ruleSelection10199 = new BitSet(new long[]{0x0000000000300000L});
    public static final BitSet FOLLOW_20_in_ruleSelection10212 = new BitSet(new long[]{0x0000000000000070L});
    public static final BitSet FOLLOW_ruleMapping_in_ruleSelection10233 = new BitSet(new long[]{0x0000000000300000L});
    public static final BitSet FOLLOW_21_in_ruleSelection10247 = new BitSet(new long[]{0x0000004000CC6002L});
    public static final BitSet FOLLOW_19_in_ruleSelection10315 = new BitSet(new long[]{0x07F80000000000F0L});
    public static final BitSet FOLLOW_ruleColorArray_in_ruleSelection10337 = new BitSet(new long[]{0x0000000000300000L});
    public static final BitSet FOLLOW_20_in_ruleSelection10350 = new BitSet(new long[]{0x07F80000000000F0L});
    public static final BitSet FOLLOW_ruleColorArray_in_ruleSelection10371 = new BitSet(new long[]{0x0000000000300000L});
    public static final BitSet FOLLOW_21_in_ruleSelection10385 = new BitSet(new long[]{0x0000004000CC6002L});
    public static final BitSet FOLLOW_22_in_ruleSelection10454 = new BitSet(new long[]{0x07F80000000000F0L});
    public static final BitSet FOLLOW_ruleColorArray_in_ruleSelection10476 = new BitSet(new long[]{0x0000000000300000L});
    public static final BitSet FOLLOW_20_in_ruleSelection10489 = new BitSet(new long[]{0x07F80000000000F0L});
    public static final BitSet FOLLOW_ruleColorArray_in_ruleSelection10510 = new BitSet(new long[]{0x0000000000300000L});
    public static final BitSet FOLLOW_21_in_ruleSelection10524 = new BitSet(new long[]{0x0000004000CC6002L});
    public static final BitSet FOLLOW_23_in_ruleSelection10593 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_ruleVisibilityRule_in_ruleSelection10615 = new BitSet(new long[]{0x0000000000300000L});
    public static final BitSet FOLLOW_20_in_ruleSelection10628 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_ruleVisibilityRule_in_ruleSelection10649 = new BitSet(new long[]{0x0000000000300000L});
    public static final BitSet FOLLOW_21_in_ruleSelection10663 = new BitSet(new long[]{0x0000004000CC6002L});
    public static final BitSet FOLLOW_ruleList_in_entryRuleList10747 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleList10757 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_43_in_ruleList10794 = new BitSet(new long[]{0x0000100000CC6000L});
    public static final BitSet FOLLOW_18_in_ruleList10852 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_ruleItemRef_in_ruleList10873 = new BitSet(new long[]{0x0000100000CC6002L});
    public static final BitSet FOLLOW_13_in_ruleList10941 = new BitSet(new long[]{0x0000000000000030L});
    public static final BitSet FOLLOW_RULE_ID_in_ruleList10960 = new BitSet(new long[]{0x0000100000CC6002L});
    public static final BitSet FOLLOW_RULE_STRING_in_ruleList10980 = new BitSet(new long[]{0x0000100000CC6002L});
    public static final BitSet FOLLOW_14_in_ruleList11057 = new BitSet(new long[]{0x0000000000000020L});
    public static final BitSet FOLLOW_ruleIcon_in_ruleList11078 = new BitSet(new long[]{0x0000100000000000L});
    public static final BitSet FOLLOW_44_in_ruleList11093 = new BitSet(new long[]{0x0000000000000020L});
    public static final BitSet FOLLOW_RULE_STRING_in_ruleList11110 = new BitSet(new long[]{0x0000100000CC6002L});
    public static final BitSet FOLLOW_19_in_ruleList11184 = new BitSet(new long[]{0x07F80000000000F0L});
    public static final BitSet FOLLOW_ruleColorArray_in_ruleList11206 = new BitSet(new long[]{0x0000000000300000L});
    public static final BitSet FOLLOW_20_in_ruleList11219 = new BitSet(new long[]{0x07F80000000000F0L});
    public static final BitSet FOLLOW_ruleColorArray_in_ruleList11240 = new BitSet(new long[]{0x0000000000300000L});
    public static final BitSet FOLLOW_21_in_ruleList11254 = new BitSet(new long[]{0x0000100000CC6002L});
    public static final BitSet FOLLOW_22_in_ruleList11323 = new BitSet(new long[]{0x07F80000000000F0L});
    public static final BitSet FOLLOW_ruleColorArray_in_ruleList11345 = new BitSet(new long[]{0x0000000000300000L});
    public static final BitSet FOLLOW_20_in_ruleList11358 = new BitSet(new long[]{0x07F80000000000F0L});
    public static final BitSet FOLLOW_ruleColorArray_in_ruleList11379 = new BitSet(new long[]{0x0000000000300000L});
    public static final BitSet FOLLOW_21_in_ruleList11393 = new BitSet(new long[]{0x0000100000CC6002L});
    public static final BitSet FOLLOW_23_in_ruleList11462 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_ruleVisibilityRule_in_ruleList11484 = new BitSet(new long[]{0x0000000000300000L});
    public static final BitSet FOLLOW_20_in_ruleList11497 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_ruleVisibilityRule_in_ruleList11518 = new BitSet(new long[]{0x0000000000300000L});
    public static final BitSet FOLLOW_21_in_ruleList11532 = new BitSet(new long[]{0x0000100000CC6002L});
    public static final BitSet FOLLOW_ruleSetpoint_in_entryRuleSetpoint11616 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleSetpoint11626 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_45_in_ruleSetpoint11663 = new BitSet(new long[]{0x0001C00000CC6000L});
    public static final BitSet FOLLOW_18_in_ruleSetpoint11721 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_ruleItemRef_in_ruleSetpoint11742 = new BitSet(new long[]{0x0001C00000CC6002L});
    public static final BitSet FOLLOW_13_in_ruleSetpoint11810 = new BitSet(new long[]{0x0000000000000030L});
    public static final BitSet FOLLOW_RULE_ID_in_ruleSetpoint11829 = new BitSet(new long[]{0x0001C00000CC6002L});
    public static final BitSet FOLLOW_RULE_STRING_in_ruleSetpoint11849 = new BitSet(new long[]{0x0001C00000CC6002L});
    public static final BitSet FOLLOW_14_in_ruleSetpoint11925 = new BitSet(new long[]{0x0000000000000020L});
    public static final BitSet FOLLOW_ruleIcon_in_ruleSetpoint11946 = new BitSet(new long[]{0x0001C00000CC6002L});
    public static final BitSet FOLLOW_46_in_ruleSetpoint12014 = new BitSet(new long[]{0x00000000000000C0L});
    public static final BitSet FOLLOW_ruleNumber_in_ruleSetpoint12035 = new BitSet(new long[]{0x0001C00000CC6002L});
    public static final BitSet FOLLOW_47_in_ruleSetpoint12103 = new BitSet(new long[]{0x00000000000000C0L});
    public static final BitSet FOLLOW_ruleNumber_in_ruleSetpoint12124 = new BitSet(new long[]{0x0001C00000CC6002L});
    public static final BitSet FOLLOW_48_in_ruleSetpoint12192 = new BitSet(new long[]{0x00000000000000C0L});
    public static final BitSet FOLLOW_ruleNumber_in_ruleSetpoint12213 = new BitSet(new long[]{0x0001C00000CC6002L});
    public static final BitSet FOLLOW_19_in_ruleSetpoint12281 = new BitSet(new long[]{0x07F80000000000F0L});
    public static final BitSet FOLLOW_ruleColorArray_in_ruleSetpoint12303 = new BitSet(new long[]{0x0000000000300000L});
    public static final BitSet FOLLOW_20_in_ruleSetpoint12316 = new BitSet(new long[]{0x07F80000000000F0L});
    public static final BitSet FOLLOW_ruleColorArray_in_ruleSetpoint12337 = new BitSet(new long[]{0x0000000000300000L});
    public static final BitSet FOLLOW_21_in_ruleSetpoint12351 = new BitSet(new long[]{0x0001C00000CC6002L});
    public static final BitSet FOLLOW_22_in_ruleSetpoint12420 = new BitSet(new long[]{0x07F80000000000F0L});
    public static final BitSet FOLLOW_ruleColorArray_in_ruleSetpoint12442 = new BitSet(new long[]{0x0000000000300000L});
    public static final BitSet FOLLOW_20_in_ruleSetpoint12455 = new BitSet(new long[]{0x07F80000000000F0L});
    public static final BitSet FOLLOW_ruleColorArray_in_ruleSetpoint12476 = new BitSet(new long[]{0x0000000000300000L});
    public static final BitSet FOLLOW_21_in_ruleSetpoint12490 = new BitSet(new long[]{0x0001C00000CC6002L});
    public static final BitSet FOLLOW_23_in_ruleSetpoint12559 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_ruleVisibilityRule_in_ruleSetpoint12581 = new BitSet(new long[]{0x0000000000300000L});
    public static final BitSet FOLLOW_20_in_ruleSetpoint12594 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_ruleVisibilityRule_in_ruleSetpoint12615 = new BitSet(new long[]{0x0000000000300000L});
    public static final BitSet FOLLOW_21_in_ruleSetpoint12629 = new BitSet(new long[]{0x0001C00000CC6002L});
    public static final BitSet FOLLOW_ruleColorpicker_in_entryRuleColorpicker12713 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleColorpicker12723 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_49_in_ruleColorpicker12760 = new BitSet(new long[]{0x0000010000CC6000L});
    public static final BitSet FOLLOW_18_in_ruleColorpicker12818 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_ruleItemRef_in_ruleColorpicker12839 = new BitSet(new long[]{0x0000010000CC6002L});
    public static final BitSet FOLLOW_13_in_ruleColorpicker12907 = new BitSet(new long[]{0x0000000000000030L});
    public static final BitSet FOLLOW_RULE_ID_in_ruleColorpicker12926 = new BitSet(new long[]{0x0000010000CC6002L});
    public static final BitSet FOLLOW_RULE_STRING_in_ruleColorpicker12946 = new BitSet(new long[]{0x0000010000CC6002L});
    public static final BitSet FOLLOW_14_in_ruleColorpicker13022 = new BitSet(new long[]{0x0000000000000020L});
    public static final BitSet FOLLOW_ruleIcon_in_ruleColorpicker13043 = new BitSet(new long[]{0x0000010000CC6002L});
    public static final BitSet FOLLOW_40_in_ruleColorpicker13111 = new BitSet(new long[]{0x0000000000000040L});
    public static final BitSet FOLLOW_RULE_INT_in_ruleColorpicker13128 = new BitSet(new long[]{0x0000010000CC6002L});
    public static final BitSet FOLLOW_19_in_ruleColorpicker13201 = new BitSet(new long[]{0x07F80000000000F0L});
    public static final BitSet FOLLOW_ruleColorArray_in_ruleColorpicker13223 = new BitSet(new long[]{0x0000000000300000L});
    public static final BitSet FOLLOW_20_in_ruleColorpicker13236 = new BitSet(new long[]{0x07F80000000000F0L});
    public static final BitSet FOLLOW_ruleColorArray_in_ruleColorpicker13257 = new BitSet(new long[]{0x0000000000300000L});
    public static final BitSet FOLLOW_21_in_ruleColorpicker13271 = new BitSet(new long[]{0x0000010000CC6002L});
    public static final BitSet FOLLOW_22_in_ruleColorpicker13340 = new BitSet(new long[]{0x07F80000000000F0L});
    public static final BitSet FOLLOW_ruleColorArray_in_ruleColorpicker13362 = new BitSet(new long[]{0x0000000000300000L});
    public static final BitSet FOLLOW_20_in_ruleColorpicker13375 = new BitSet(new long[]{0x07F80000000000F0L});
    public static final BitSet FOLLOW_ruleColorArray_in_ruleColorpicker13396 = new BitSet(new long[]{0x0000000000300000L});
    public static final BitSet FOLLOW_21_in_ruleColorpicker13410 = new BitSet(new long[]{0x0000010000CC6002L});
    public static final BitSet FOLLOW_23_in_ruleColorpicker13479 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_ruleVisibilityRule_in_ruleColorpicker13501 = new BitSet(new long[]{0x0000000000300000L});
    public static final BitSet FOLLOW_20_in_ruleColorpicker13514 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_ruleVisibilityRule_in_ruleColorpicker13535 = new BitSet(new long[]{0x0000000000300000L});
    public static final BitSet FOLLOW_21_in_ruleColorpicker13549 = new BitSet(new long[]{0x0000010000CC6002L});
    public static final BitSet FOLLOW_ruleMapping_in_entryRuleMapping13633 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleMapping13643 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleCommand_in_ruleMapping13689 = new BitSet(new long[]{0x0004000000000000L});
    public static final BitSet FOLLOW_50_in_ruleMapping13701 = new BitSet(new long[]{0x0000000000000030L});
    public static final BitSet FOLLOW_RULE_ID_in_ruleMapping13720 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_RULE_STRING_in_ruleMapping13740 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleVisibilityRule_in_entryRuleVisibilityRule13784 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleVisibilityRule13794 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_RULE_ID_in_ruleVisibilityRule13836 = new BitSet(new long[]{0x01F8000000000000L});
    public static final BitSet FOLLOW_51_in_ruleVisibilityRule13861 = new BitSet(new long[]{0x07F80000000000F0L});
    public static final BitSet FOLLOW_52_in_ruleVisibilityRule13890 = new BitSet(new long[]{0x07F80000000000F0L});
    public static final BitSet FOLLOW_53_in_ruleVisibilityRule13919 = new BitSet(new long[]{0x07F80000000000F0L});
    public static final BitSet FOLLOW_54_in_ruleVisibilityRule13948 = new BitSet(new long[]{0x07F80000000000F0L});
    public static final BitSet FOLLOW_55_in_ruleVisibilityRule13977 = new BitSet(new long[]{0x07F80000000000F0L});
    public static final BitSet FOLLOW_56_in_ruleVisibilityRule14006 = new BitSet(new long[]{0x07F80000000000F0L});
    public static final BitSet FOLLOW_57_in_ruleVisibilityRule14042 = new BitSet(new long[]{0x07F80000000000F0L});
    public static final BitSet FOLLOW_58_in_ruleVisibilityRule14071 = new BitSet(new long[]{0x07F80000000000F0L});
    public static final BitSet FOLLOW_ruleXState_in_ruleVisibilityRule14109 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleItemRef_in_entryRuleItemRef14146 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleItemRef14157 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_RULE_ID_in_ruleItemRef14196 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleGroupItemRef_in_entryRuleGroupItemRef14241 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleGroupItemRef14252 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_RULE_ID_in_ruleGroupItemRef14291 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleIcon_in_entryRuleIcon14336 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleIcon14347 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_RULE_STRING_in_ruleIcon14386 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleColorArray_in_entryRuleColorArray14430 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleColorArray14440 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_RULE_ID_in_ruleColorArray14483 = new BitSet(new long[]{0x07F80000000000F0L});
    public static final BitSet FOLLOW_51_in_ruleColorArray14509 = new BitSet(new long[]{0x07F80000000000F0L});
    public static final BitSet FOLLOW_52_in_ruleColorArray14538 = new BitSet(new long[]{0x07F80000000000F0L});
    public static final BitSet FOLLOW_53_in_ruleColorArray14567 = new BitSet(new long[]{0x07F80000000000F0L});
    public static final BitSet FOLLOW_54_in_ruleColorArray14596 = new BitSet(new long[]{0x07F80000000000F0L});
    public static final BitSet FOLLOW_55_in_ruleColorArray14625 = new BitSet(new long[]{0x07F80000000000F0L});
    public static final BitSet FOLLOW_56_in_ruleColorArray14654 = new BitSet(new long[]{0x07F80000000000F0L});
    public static final BitSet FOLLOW_57_in_ruleColorArray14691 = new BitSet(new long[]{0x07F80000000000F0L});
    public static final BitSet FOLLOW_58_in_ruleColorArray14720 = new BitSet(new long[]{0x07F80000000000F0L});
    public static final BitSet FOLLOW_ruleXState_in_ruleColorArray14758 = new BitSet(new long[]{0x0004000000000000L});
    public static final BitSet FOLLOW_50_in_ruleColorArray14770 = new BitSet(new long[]{0x0000000000000020L});
    public static final BitSet FOLLOW_RULE_STRING_in_ruleColorArray14789 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleCommand_in_entryRuleCommand14831 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleCommand14842 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_RULE_INT_in_ruleCommand14882 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_RULE_ID_in_ruleCommand14908 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_RULE_STRING_in_ruleCommand14934 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleNumber_in_entryRuleNumber14980 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleNumber14991 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_RULE_INT_in_ruleNumber15031 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_RULE_FLOAT_in_ruleNumber15057 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleXState_in_entryRuleXState15103 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleXState15114 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_RULE_INT_in_ruleXState15154 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_RULE_ID_in_ruleXState15180 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_RULE_STRING_in_ruleXState15206 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_RULE_FLOAT_in_ruleXState15232 = new BitSet(new long[]{0x0000000000000002L});

}
